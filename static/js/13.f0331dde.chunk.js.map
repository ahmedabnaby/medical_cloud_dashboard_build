{"version":3,"sources":["hooks/useScriptRef.js","assets/images/icons/social-google.svg","assets/images/logo.svg","utils/password-strength.js","views/pages/authentication/firebase-forms/FirebaseRgister.js","views/pages/authentication/authentication3/Register3.js"],"names":["useScriptRef","scripted","useRef","useEffect","current","strengthIndicator","value","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed","useStyles","makeStyles","theme","root","redButton","_defineProperty","fontSize","fontWeight","backgroundColor","palette","grey","border","borderColor","color","textTransform","primary","light","breakpoints","down","signDivider","flexGrow","signText","cursor","margin","spacing","padding","marginTop","marginBottom","forgot","textDecoration","loginIcon","marginRight","title","login","purple","main","dark","loginput","top","left","display","startAdornment","width","FirebaseRgister","_ref","className","rest","_objectWithoutProperties","classes","scriptedRef","customization","useSelector","state","_React$useState","React","useState","_React$useState2","_slicedToArray","showPassword","setShowPassword","_React$useState3","_React$useState4","checked","setChecked","_React$useState5","_React$useState6","strength","setStrength","_React$useState7","_React$useState8","level","setLevel","googleHandler","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","apply","arguments","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","changePassowd","count","temp","label","red500","amber500","deepOrange200","A200","A700","_jsxs","Fragment","children","Grid","container","direction","justifyContent","_jsx","item","xs","Button","disableElevation","fullWidth","onClick","size","variant","src","Google","alt","Box","alignItems","Divider","orientation","sx","borderRadius","disableRipple","disabled","mb","Typography","Formik","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","_ref4","_callee2","values","_ref3","setErrors","setStatus","setSubmitting","_context2","success","err","console","error","message","_x","_x2","_ref5","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","_objectSpread","noValidate","clsx","sm","TextField","name","type","defaultValue","FormControl","Boolean","InputLabel","htmlFor","OutlinedInput","id","onBlur","onChange","labelWidth","inputProps","notchedOutline","FormHelperText","e","target","endAdornment","InputAdornment","position","IconButton","aria-label","onMouseDown","edge","Visibility","VisibilityOff","height","FormControlLabel","control","Checkbox","component","Link","to","mt","_card","minHeight","maxWidth","card","overflow","flexBasis","content","Register","useTheme","matchDownSM","useMediaQuery","p","textAlign","RouterLink","logo","Card","CardContent","gutterBottom","href"],"mappings":"6HAAA,WAeeA,IAbM,WACjB,IAAMC,EAAWC,kBAAO,GASxB,OAPAC,qBACI,kBAAM,WACFF,EAASG,SAAU,KAEvB,IAGGH,I,iCCZI,QAA0B,2C,iCCA1B,QAA0B,kC,yZCkB5BI,EAAoB,SAACC,GAC9B,IAAIC,EAAY,EAMhB,OALID,EAAME,OAAS,GAAGD,IAClBD,EAAME,OAAS,GAAGD,IAnBR,SAACD,GACf,OAAO,IAAIG,OAAO,SAASC,KAAKJ,GAmB5BK,CAAUL,IAAQC,IAdP,SAACD,GAChB,OAAO,IAAIG,OAAO,qBAAqBC,KAAKJ,GAcxCM,CAAWN,IAAQC,IAlBV,SAACD,GACd,OAAO,IAAIG,OAAO,SAASC,KAAKJ,IAAU,IAAIG,OAAO,SAASC,KAAKJ,GAkB/DO,CAASP,IAAQC,IACdA,G,OCOLO,EAAYC,aAAW,SAACC,GAAK,MAAM,CACrCC,KAAM,GACNC,UAASC,YAAA,CACLC,SAAU,OACVC,WAAY,IACZC,gBAAiBN,EAAMO,QAAQC,KAAK,IACpCC,OAAQ,YACRC,YAAaV,EAAMO,QAAQC,KAAK,KAChCG,MAAOX,EAAMO,QAAQC,KAAK,KAC1BI,cAAe,OACf,UAAW,CACPN,gBAAiBN,EAAMO,QAAQM,QAAQC,QAE1Cd,EAAMe,YAAYC,KAAK,MAAQ,CAC5BZ,SAAU,aAGlBa,YAAa,CACTC,SAAU,GAEdC,SAAU,CACNC,OAAQ,QACRC,OAAQrB,EAAMsB,QAAQ,GACtBC,QAAS,WACTb,YAAaV,EAAMO,QAAQC,KAAK,KAAO,cACvCG,MAAOX,EAAMO,QAAQC,KAAK,KAAO,aACjCH,WAAY,KAEhBgB,OAAQ,CACJG,UAAWxB,EAAMsB,QAAQ,GACzBG,aAAczB,EAAMsB,QAAQ,IAEhCI,OAAQ,CACJC,eAAgB,QAEpBC,UAASzB,YAAA,CACL0B,YAAa,QACZ7B,EAAMe,YAAYC,KAAK,MAAQ,CAC5Ba,YAAa,QAGrBC,MAAO,CACHnB,MAAOX,EAAMO,QAAQC,KAAK,MAE9BuB,MAAO,CACHzB,gBAAiBN,EAAMO,QAAQyB,OAAOC,KACtC,UAAW,CACP3B,gBAAiBN,EAAMO,QAAQyB,OAAOE,OAG9CC,SAAU,CACNX,UAAWxB,EAAMsB,QAAQ,GACzBG,aAAczB,EAAMsB,QAAQ,GAC5B,YAAa,CACTc,IAAK,OACLC,KAAM,EACN1B,MAAOX,EAAMO,QAAQC,KAAK,KAC1B,yBAA0B,CACtB4B,IAAK,QAGb,kBAAmB,CACfb,QAAS,iCAEb,WAAY,CACRe,QAAS,QAEb,aAAc,CACVF,IAAK,IAGbG,eAAgB,CACZ5B,MAAOX,EAAMO,QAAQC,KAAK,KAC1BgB,UAAW,OACXgB,MAAO,YA8QAC,EA1QS,SAAHC,GAA8B,IAAzBC,EAASD,EAATC,UAAcC,EAAIC,YAAAH,EAAA,eAClCI,EAAUhD,IACViD,EAAc/D,cACdgE,EAAgBC,aAAY,SAACC,GAAK,OAAKA,EAAMF,iBACnDG,EAAwCC,IAAMC,UAAS,GAAMC,EAAAC,YAAAJ,EAAA,GAAtDK,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,EAA8BN,IAAMC,UAAS,GAAKM,EAAAJ,YAAAG,EAAA,GAA3CE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAE1BG,EAAgCV,IAAMC,SAAS,GAAEU,EAAAR,YAAAO,EAAA,GAA1CE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,EAA0Bd,IAAMC,SAAS,IAAGc,EAAAZ,YAAAW,EAAA,GAArCE,GAAKD,EAAA,GAAEE,GAAQF,EAAA,GAEhBG,GAAa,eAAAC,EAAAC,YAAAC,IAAAC,MAAG,SAAAC,IAAA,OAAAF,IAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,wBAAAF,EAAAG,UAAAL,OAErB,kBAFkB,OAAAJ,EAAAU,MAAA,KAAAC,YAAA,GAIbC,GAA0B,WAC5B1B,GAAiBD,IAGf4B,GAA0B,SAACC,GAC7BA,EAAMC,kBAGJC,GAAgB,SAACjG,GACnB,ID1HsBkG,EC0HhBC,EAAOpG,EAAkBC,GAC/B2E,EAAYwB,GACZpB,ID5HsBmB,EC4HCC,GD3Hf,EAAU,CAACC,MAAO,OAAQ/E,MAAOrB,IAAMqG,QAC/CH,EAAQ,EAAU,CAACE,MAAO,OAAQ/E,MAAOrB,IAAMsG,UAC/CJ,EAAQ,EAAU,CAACE,MAAO,SAAU/E,MAAOrB,IAAMuG,eACjDL,EAAQ,EAAU,CAACE,MAAO,OAAQ/E,MAAOrB,IAAMwG,MAC/CN,EAAQ,EAAU,CAACE,MAAO,SAAU/E,MAAOrB,IAAMyG,WAArD,IC8HA,OAJA5G,qBAAU,WACNoG,GAAc,YACf,IAGCS,eAAC5C,IAAM6C,SAAQ,CAAAC,SAAA,CACXF,eAACG,IAAI,CAACC,WAAS,EAACC,UAAU,SAASC,eAAe,SAAShF,QAAS,EAAE4E,SAAA,CAClEK,cAACJ,IAAI,CAACK,MAAI,EAACC,GAAI,GAAGP,SACdF,eAACU,IAAM,CACHC,kBAAgB,EAChBC,WAAW,EACXjE,UAAWG,EAAQ5C,UACnB2G,QAASvC,GACTwC,KAAK,QACLC,QAAQ,YAAWb,SAAA,CAEnBK,cAAA,OAAKS,IAAKC,IAAQC,IAAI,SAAS1E,MAAM,OAAOG,UAAWG,EAAQlB,YAAa,4BAGpF2E,cAACJ,IAAI,CAACK,MAAI,EAACC,GAAI,GAAGP,SACdF,eAACmB,IAAG,CAACC,WAAW,SAAS9E,QAAQ,OAAM4D,SAAA,CACnCK,cAACc,IAAO,CAAC1E,UAAWG,EAAQ7B,YAAaqG,YAAY,eACrDf,cAACG,IAAM,CACHK,QAAQ,WACRpE,UAAWG,EAAQ3B,SACnBoG,GAAI,CAACC,aAAcxE,EAAcwE,aAAe,MAChDC,eAAa,EACbC,UAAQ,EAAAxB,SACX,OAGDK,cAACc,IAAO,CAAC1E,UAAWG,EAAQ7B,YAAaqG,YAAY,oBAG7Df,cAACJ,IAAI,CAACK,MAAI,EAACC,GAAI,GAAIL,WAAS,EAACgB,WAAW,SAASd,eAAe,SAAQJ,SACpEK,cAACY,IAAG,CAACQ,GAAI,EAAEzB,SACPK,cAACqB,IAAU,CAACb,QAAQ,YAAYpE,UAAWG,EAAQhB,MAAMoE,SAAC,sCAOtEK,cAACsB,IAAM,CACHC,cAAe,CACXC,MAAO,uBACPC,SAAU,SACVC,OAAQ,MAEZC,iBAAkBC,MAAaC,MAAM,CACjCL,MAAOI,MAAaJ,MAAM,yBAAyBM,IAAI,KAAKC,SAAS,qBACrEN,SAAUG,MAAaE,IAAI,KAAKC,SAAS,0BAE7CC,SAAQ,eAAAC,EAAAhE,YAAAC,IAAAC,MAAE,SAAA+D,EAAOC,EAAMC,GAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAArE,IAAAG,MAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,OAAG6D,EAASD,EAATC,UAAWC,EAASF,EAATE,UAAWC,EAAaH,EAAbG,cAC5C,IAEQ/F,EAAY3D,UACZyJ,EAAU,CAACG,SAAS,IACpBF,GAAc,IAEpB,MAAOG,GACLC,QAAQC,MAAMF,GACVlG,EAAY3D,UACZyJ,EAAU,CAACG,SAAS,IACpBJ,EAAU,CAACX,OAAQgB,EAAIG,UACvBN,GAAc,IAErB,wBAAAC,EAAA/D,UAAAyD,OACJ,gBAAAY,EAAAC,GAAA,OAAAd,EAAAvD,MAAA,KAAAC,YAfO,GAeNgB,SAED,SAAAqD,GAAA,IAAEC,EAAMD,EAANC,OAAQC,EAAUF,EAAVE,WAAYC,EAAYH,EAAZG,aAAcC,EAAYJ,EAAZI,aAAcC,EAAYL,EAAZK,aAAcC,EAAON,EAAPM,QAASnB,EAAMa,EAANb,OAAM,OAC5E1C,eAAA,OAAA8D,wBAAA,CAAMC,YAAU,EAACxB,SAAUoB,EAAchH,UAAWqH,YAAKlH,EAAQ7C,KAAM0C,IAAgBC,GAAI,IAAAsD,SAAA,CACvFF,eAACG,IAAI,CAACC,WAAS,EAAC9E,QAAS,EAAE4E,SAAA,CACvBK,cAACJ,IAAI,CAACK,MAAI,EAACC,GAAI,GAAIwD,GAAI,EAAE/D,SACrBK,cAAC2D,IAAS,CACNtD,WAAS,EACTlB,MAAM,aACNrE,OAAO,SACP8I,KAAK,QACLC,KAAK,OACLC,aAAa,SACbtD,QAAQ,WACRpE,UAAWG,EAAQX,aAG3BoE,cAACJ,IAAI,CAACK,MAAI,EAACC,GAAI,GAAIwD,GAAI,EAAE/D,SACrBK,cAAC2D,IAAS,CACNtD,WAAS,EACTlB,MAAM,YACNrE,OAAO,SACP8I,KAAK,QACLC,KAAK,OACLC,aAAa,MACbtD,QAAQ,WACRpE,UAAWG,EAAQX,gBAI/B6D,eAACsE,IAAW,CACR1D,WAAS,EACTuC,MAAOoB,QAAQV,EAAQ9B,OAASyB,EAAOzB,OACvCpF,UAAWG,EAAQX,SACnB4E,QAAQ,WAAUb,SAAA,CAElBK,cAACiE,IAAU,CAACC,QAAQ,oCAAmCvE,SAAC,6BACxDK,cAACmE,IAAa,CACVC,GAAG,oCACHP,KAAK,QACL9K,MAAOoJ,EAAOX,MACdoC,KAAK,QACLS,OAAQnB,EACRoB,SAAUnB,EACVoB,WAAY,GACZC,WAAY,CACRjI,QAAS,CACLkI,eAAgBlI,EAAQkI,mBAInCnB,EAAQ9B,OAASyB,EAAOzB,OACrB/B,eAACiF,IAAc,CAAC9B,OAAK,EAACwB,GAAG,wCAAuCzE,SAAA,CAC3D,IACAsD,EAAOzB,MAAO,UAK3B/B,eAACsE,IAAW,CACR1D,WAAS,EACTuC,MAAOoB,QAAQV,EAAQ7B,UAAYwB,EAAOxB,UAC1CrF,UAAWG,EAAQX,SACnB4E,QAAQ,WAAUb,SAAA,CAElBK,cAACiE,IAAU,CAACC,QAAQ,uCAAsCvE,SAAC,aAC3DK,cAACmE,IAAa,CACVC,GAAG,uCACHP,KAAM5G,EAAe,OAAS,WAC9BlE,MAAOoJ,EAAOV,SACdmC,KAAK,WACLS,OAAQnB,EACRoB,SAAU,SAACK,GACPxB,EAAawB,GACb3F,GAAc2F,EAAEC,OAAO7L,QAE3B8L,aACI7E,cAAC8E,IAAc,CAACC,SAAS,MAAKpF,SAC1BK,cAACgF,IAAU,CACPC,aAAW,6BACX3E,QAAS1B,GACTsG,YAAarG,GACbsG,KAAK,MAAKxF,SAET1C,EAAe+C,cAACoF,IAAU,IAAMpF,cAACqF,IAAa,QAI3Dd,WAAY,GACZC,WAAY,CACRjI,QAAS,CACLkI,eAAgBlI,EAAQkI,mBAInCnB,EAAQ7B,UAAYwB,EAAOxB,UACxBhC,eAACiF,IAAc,CAAC9B,OAAK,EAACwB,GAAG,gDAA+CzE,SAAA,CACnE,IACAsD,EAAOxB,SAAU,UAKhB,IAAbhE,GACGuC,cAAC+D,IAAW,CAAC1D,WAAS,EAAAV,SAClBK,cAACY,IAAG,CAACQ,GAAI,EAAEzB,SACPF,eAACG,IAAI,CAACC,WAAS,EAAC9E,QAAS,EAAG8F,WAAW,SAAQlB,SAAA,CAC3CK,cAACJ,IAAI,CAACK,MAAI,EAAAN,SACNK,cAACY,IAAG,CAAC3E,MAAO,GAAIqJ,OAAQ,EAAGrE,aAAc,EAAGlH,gBAAiB8D,GAAMzD,UAEvE4F,cAACJ,IAAI,CAACK,MAAI,EAAAN,SACNK,cAACqB,IAAU,CAACb,QAAQ,YAAY3G,SAAS,UAAS8F,SAC7C9B,GAAMsB,iBAQ/Ba,cAACJ,IAAI,CAACC,WAAS,EAACgB,WAAW,SAASd,eAAe,gBAAeJ,SAC9DK,cAACJ,IAAI,CAACK,MAAI,EAAAN,SACNK,cAACuF,IAAgB,CACbC,QACIxF,cAACyF,IAAQ,CACLpI,QAASA,EACTiH,SAAU,SAACxF,GAAK,OAAKxB,EAAWwB,EAAM8F,OAAOvH,UAC7CuG,KAAK,UACLxJ,MAAM,YAGd+E,MACIa,cAACnD,IAAM6C,SAAQ,CAAAC,SACXF,eAAC4B,IAAU,CAACb,QAAQ,YAAWb,SAAA,CAAC,kBAE5BK,cAACqB,IAAU,CAACb,QAAQ,YAAYkF,UAAWC,IAAMC,GAAG,IAAGjG,SAAC,kCAS/EsD,EAAOvB,QACJ1B,cAACY,IAAG,CAACiF,GAAI,EAAElG,SACPK,cAAC0E,IAAc,CAAC9B,OAAK,EAAAjD,SAAEsD,EAAOvB,WAItC1B,cAACY,IAAG,CAACiF,GAAI,EAAElG,SACPK,cAACG,IAAM,CACHC,kBAAgB,EAChBe,SAAUkC,EACVhD,WAAS,EACTE,KAAK,QACLsD,KAAK,SACLrD,QAAQ,YACRpE,UAAWG,EAAQf,MAAMmE,SAC5B,yB,SCrWvBpG,EAAYC,aAAW,SAACC,GAAK,IAAAqM,EAAA,MAAM,CACrCpM,KAAM,CACFK,gBAAiBN,EAAMO,QAAQM,QAAQC,MACvC+K,OAAQ,OACRS,UAAW,QACX9J,MAAO,OACP+J,SAAU,qBAEdC,MAAIH,EAAA,CACAhL,OAAQrB,EAAMsB,QAAQ,GAAK,QAC3BiL,SAAU,QACVE,SAAU,UACVnK,QAAS,OACTgJ,SAAU,WACV,QAAS,CACLpK,SAAU,EACVwL,UAAW,QACdvM,YAAAkM,EACArM,EAAMe,YAAYC,KAAK,MAAQ,CAC5BuL,SAAU,UACbpM,YAAAkM,EACArM,EAAMe,YAAYC,KAAK,MAAQ,CAC5BuL,SAAU,QACbF,GAELM,QAAOxM,YAAA,CACHoB,QAASvB,EAAMsB,QAAQ,IACtBtB,EAAMe,YAAYC,KAAK,MAAQ,CAC5BO,QAASvB,EAAMsB,QAAQ,KAG/BQ,MAAO,CACHnB,MAAOX,EAAMO,QAAQC,KAAK,KAC1BmB,eAAgB,YA2GTiL,UAvGE,WACb,IAAM9J,EAAUhD,IACVE,EAAQ6M,cACRC,EAAcC,YAAc/M,EAAMe,YAAYC,KAAK,OAEzD,OACIuF,cAACJ,IAAI,CAACC,WAAS,EAACE,eAAgBwG,EAAc,SAAW,gBAAiB1F,WAAW,aAAazE,UAAWG,EAAQ7C,KAAKiG,SACtHK,cAACJ,IAAI,CAACK,MAAI,EAACC,GAAI,GAAIc,GAAI,CAAC+E,UAAW,QAAST,OAAQ,QAAQ3F,SACxDF,eAACG,IAAI,CACDoB,GAAI,CAAC+E,UAAW,QAAST,OAAQ,OAAQmB,EAAGF,EAAc,EAAI,UAC9D1G,WAAS,EACTC,UAAU,SACVe,WAAY0F,EAAc,SAAW,aACrCxL,QAASwL,EAAc,EAAI,EAC3BxG,eAAe,gBAAeJ,SAAA,CAE9BK,cAACJ,IAAI,CAACK,MAAI,EAACC,GAAI,GAAIc,GAAI,CAAC6E,GAAI,OAAQ5J,MAAO,OAAQyK,UAAW,UAAU/G,SACpEK,cAAC2G,IAAU,CAACf,GAAG,IAAGjG,SACdK,cAAA,OAAKW,IAAI,cAAcF,IAAKmG,IAAM3K,MAAM,YAGhD+D,cAACJ,IAAI,CAACK,MAAI,EAACC,GAAI,GAAIL,WAAS,EAACE,eAAe,SAASc,WAAW,SAAQlB,SACpEK,cAAC6G,IAAI,CAACzK,UAAWG,EAAQ0J,KAAKtG,SAC1BK,cAAC8G,IAAW,CAAC1K,UAAWG,EAAQ6J,QAAQzG,SACpCF,eAACG,IAAI,CAACC,WAAS,EAACC,UAAU,SAAS/E,QAAS,EAAGgF,eAAe,SAAQJ,SAAA,CAClEK,cAACJ,IAAI,CAACK,MAAI,EAACC,GAAI,GAAGP,SACdK,cAACJ,IAAI,CACDC,WAAS,EACTC,UAAWyG,EAAc,iBAAmB,MAC5C1F,WAAW,SACXd,eAAe,SAAQJ,SAEvBK,cAACJ,IAAI,CAACK,MAAI,EAAAN,SACNF,eAACG,IAAI,CAACC,WAAS,EAACC,UAAU,SAASe,WAAW,SAAS9F,QAAS,EAAE4E,SAAA,CAC9DK,cAACJ,IAAI,CAACK,MAAI,EAACJ,WAAS,EAACC,UAAU,SAASe,WAAW,SAAQlB,SACvDK,cAACJ,IAAI,CAACK,MAAI,EAAAN,SACNK,cAACqB,IAAU,CACPjH,MAAOX,EAAMO,QAAQyB,OAAOC,KAC5BqL,cAAY,EACZvG,QAAS+F,EAAc,KAAO,KAAK5G,SACtC,gBAKTK,cAACJ,IAAI,CAACK,MAAI,EAAAN,SACNF,eAAC4B,IAAU,CAACb,QAAQ,UAAU3G,SAAS,OAAM8F,SAAA,CACxC,IAAI,mDAQ7BK,cAACJ,IAAI,CAACK,MAAI,EAACC,GAAI,GAAGP,SACdK,cAAC9D,EAAe,MAEpB8D,cAACJ,IAAI,CAACK,MAAI,EAACC,GAAI,GAAGP,SACdK,cAACc,IAAO,MAEZd,cAACJ,IAAI,CAACK,MAAI,EAACC,GAAI,GAAGP,SACdK,cAACJ,IAAI,CAACK,MAAI,EAACJ,WAAS,EAACC,UAAU,SAASe,WAAW,SAASX,GAAI,GAAGP,SAC/DK,cAACqB,IAAU,CACPqE,UAAWiB,IACXf,GAAG,sBACHpF,QAAQ,YACRpE,UAAWG,EAAQhB,MAAMoE,SAC5B,oCASzBF,eAACG,IAAI,CACDoB,GAAI,CAACI,GAAI,QACTnB,MAAI,EACJJ,WAAS,EACTE,eAAgBwG,EAAc,SAAW,gBACzCzG,UAAWyG,EAAc,SAAW,MACpC1F,WAAW,SACX9F,QAASwL,EAAc,EAAI,EAAE5G,SAAA,CAE9BK,cAACJ,IAAI,CAACK,MAAI,EAAAN,SACLK,cAACqB,IAAU,CAACqE,UAAWC,IAAMqB,KAAK,4BAA4BpC,OAAO,UAAUpE,QAAQ,YAAYpG,MAAOX,EAAMO,QAAQC,KAAK,KAAK0F,SAAC,4BAIvIK,cAACJ,IAAI,CAACK,MAAI,EAAAN,SACNK,cAACqB,IAAU,CAACqE,UAAWC,IAAMqB,KAAK,0BAA0BpC,OAAO,UAAUpE,QAAQ,YAAYpG,MAAOX,EAAMO,QAAQC,KAAK,KAAK0F,SAAC","file":"static/js/13.f0331dde.chunk.js","sourcesContent":["import {useEffect, useRef} from 'react';\n\nconst useScriptRef = () => {\n    const scripted = useRef(true);\n\n    useEffect(\n        () => () => {\n            scripted.current = false;\n        },\n        []\n    );\n\n    return scripted;\n};\n\nexport default useScriptRef;\n","export default __webpack_public_path__ + \"static/media/social-google.9887eb8e.svg\";","export default __webpack_public_path__ + \"static/media/logo.0cdd96fa.svg\";","import value from '../assets/scss/_themes-vars.module.scss';\n\nconst hasNumber = (value) => {\n    return new RegExp(/[0-9]/).test(value);\n};\nconst hasMixed = (value) => {\n    return new RegExp(/[a-z]/).test(value) && new RegExp(/[A-Z]/).test(value);\n};\nconst hasSpecial = (value) => {\n    return new RegExp(/[!#@$%^&*)(+=._-]/).test(value);\n};\nexport const strengthColor = (count) => {\n    if (count < 2) return {label: 'Poor', color: value.red500};\n    if (count < 3) return {label: 'Weak', color: value.amber500};\n    if (count < 4) return {label: 'Normal', color: value.deepOrange200};\n    if (count < 5) return {label: 'Good', color: value.A200};\n    if (count < 6) return {label: 'Strong', color: value.A700};\n};\nexport const strengthIndicator = (value) => {\n    let strengths = 0;\n    if (value.length > 5) strengths++;\n    if (value.length > 7) strengths++;\n    if (hasNumber(value)) strengths++;\n    if (hasSpecial(value)) strengths++;\n    if (hasMixed(value)) strengths++;\n    return strengths;\n};\n","import React, {useEffect} from 'react';\nimport {useSelector} from 'react-redux';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport {Formik} from 'formik';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    Divider,\n    FormControl,\n    FormControlLabel,\n    FormHelperText,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    makeStyles,\n    OutlinedInput,\n    TextField,\n    Typography\n} from '@material-ui/core';\nimport {Link} from 'react-router-dom';\n\nimport useScriptRef from '../../../../hooks/useScriptRef';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport Google from './../../../../assets/images/icons/social-google.svg';\n\nimport {strengthColor, strengthIndicator} from '../../../../utils/password-strength';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    redButton: {\n        fontSize: '1rem',\n        fontWeight: 500,\n        backgroundColor: theme.palette.grey[50],\n        border: '1px solid',\n        borderColor: theme.palette.grey[100],\n        color: theme.palette.grey[600],\n        textTransform: 'none',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.light\n        },\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '0.875rem'\n        }\n    },\n    signDivider: {\n        flexGrow: 1\n    },\n    signText: {\n        cursor: 'unset',\n        margin: theme.spacing(2),\n        padding: '5px 56px',\n        borderColor: theme.palette.grey[100] + ' !important',\n        color: theme.palette.grey[900] + '!important',\n        fontWeight: 500\n    },\n    margin: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(1)\n    },\n    forgot: {\n        textDecoration: 'none'\n    },\n    loginIcon: {\n        marginRight: '16px',\n        [theme.breakpoints.down('sm')]: {\n            marginRight: '8px'\n        }\n    },\n    title: {\n        color: theme.palette.grey[600]\n    },\n    login: {\n        backgroundColor: theme.palette.purple.main,\n        '&:hover': {\n            backgroundColor: theme.palette.purple.dark\n        }\n    },\n    loginput: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n        '& > label': {\n            top: '23px',\n            left: 0,\n            color: theme.palette.grey[500],\n            '&[data-shrink=\"false\"]': {\n                top: '5px'\n            }\n        },\n        '& > div > input': {\n            padding: '30.5px 14px 11.5px !important'\n        },\n        '& legend': {\n            display: 'none'\n        },\n        '& fieldset': {\n            top: 0\n        }\n    },\n    startAdornment: {\n        color: theme.palette.grey[500],\n        marginTop: '18px',\n        width: 'auto'\n    }\n}));\n\nconst FirebaseRgister = ({className, ...rest}) => {\n    const classes = useStyles();\n    const scriptedRef = useScriptRef();\n    const customization = useSelector((state) => state.customization);\n    const [showPassword, setShowPassword] = React.useState(false);\n    const [checked, setChecked] = React.useState(true);\n\n    const [strength, setStrength] = React.useState(0);\n    const [level, setLevel] = React.useState('');\n\n    const googleHandler = async () => {\n\n    };\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const changePassowd = (value) => {\n        const temp = strengthIndicator(value);\n        setStrength(temp);\n        setLevel(strengthColor(temp));\n    };\n\n    useEffect(() => {\n        changePassowd('123456');\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <Button\n                        disableElevation\n                        fullWidth={true}\n                        className={classes.redButton}\n                        onClick={googleHandler}\n                        size=\"large\"\n                        variant=\"contained\"\n                    >\n                        <img src={Google} alt=\"google\" width=\"20px\" className={classes.loginIcon} /> Sign up with Google\n                    </Button>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box alignItems=\"center\" display=\"flex\">\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\n                        <Button\n                            variant=\"outlined\"\n                            className={classes.signText}\n                            sx={{borderRadius: customization.borderRadius + 'px'}}\n                            disableRipple\n                            disabled\n                        >\n                            OR\n                        </Button>\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\n                    </Box>\n                </Grid>\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n                    <Box mb={2}>\n                        <Typography variant=\"subtitle1\" className={classes.title}>\n                            Sign up with Email address\n                        </Typography>\n                    </Box>\n                </Grid>\n            </Grid>\n\n            <Formik\n                initialValues={{\n                    email: 'info@codedthemes.com',\n                    password: '123456',\n                    submit: null\n                }}\n                validationSchema={Yup.object().shape({\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                    password: Yup.string().max(255).required('Password is required')\n                })}\n                onSubmit={async (values, {setErrors, setStatus, setSubmitting}) => {\n                    try {\n\n                        if (scriptedRef.current) {\n                            setStatus({success: true});\n                            setSubmitting(false);\n                        }\n                    } catch (err) {\n                        console.error(err);\n                        if (scriptedRef.current) {\n                            setStatus({success: false});\n                            setErrors({submit: err.message});\n                            setSubmitting(false);\n                        }\n                    }\n                }}\n            >\n                {({errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values}) => (\n                    <form noValidate onSubmit={handleSubmit} className={clsx(classes.root, className)} {...rest}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    fullWidth\n                                    label=\"First Name\"\n                                    margin=\"normal\"\n                                    name=\"fname\"\n                                    type=\"text\"\n                                    defaultValue=\"Joseph\"\n                                    variant=\"outlined\"\n                                    className={classes.loginput}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    fullWidth\n                                    label=\"Last Name\"\n                                    margin=\"normal\"\n                                    name=\"lname\"\n                                    type=\"text\"\n                                    defaultValue=\"Doe\"\n                                    variant=\"outlined\"\n                                    className={classes.loginput}\n                                />\n                            </Grid>\n                        </Grid>\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.email && errors.email)}\n                            className={classes.loginput}\n                            variant=\"outlined\"\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-email-register\">Email Address / Username</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-register\"\n                                type=\"email\"\n                                value={values.email}\n                                name=\"email\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                labelWidth={70}\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.email && errors.email && (\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\n                                    {' '}\n                                    {errors.email}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.password && errors.password)}\n                            className={classes.loginput}\n                            variant=\"outlined\"\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-password-register\">Password</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-register\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                name=\"password\"\n                                onBlur={handleBlur}\n                                onChange={(e) => {\n                                    handleChange(e);\n                                    changePassowd(e.target.value);\n                                }}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                labelWidth={70}\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.password && errors.password && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-register\">\n                                    {' '}\n                                    {errors.password}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        {strength !== 0 && (\n                            <FormControl fullWidth>\n                                <Box mb={2}>\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid item>\n                                            <Box width={85} height={8} borderRadius={7} backgroundColor={level.color}></Box>\n                                        </Grid>\n                                        <Grid item>\n                                            <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\n                                                {level.label}\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Box>\n                            </FormControl>\n                        )}\n\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                            <Grid item>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={checked}\n                                            onChange={(event) => setChecked(event.target.checked)}\n                                            name=\"checked\"\n                                            color=\"primary\"\n                                        />\n                                    }\n                                    label={\n                                        <React.Fragment>\n                                            <Typography variant=\"subtitle1\">\n                                                Agree with &nbsp;\n                                                <Typography variant=\"subtitle1\" component={Link} to=\"#\">\n                                                    Terms & Condition.\n                                                </Typography>\n                                            </Typography>\n                                        </React.Fragment>\n                                    }\n                                />\n                            </Grid>\n                        </Grid>\n                        {errors.submit && (\n                            <Box mt={3}>\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )}\n\n                        <Box mt={2}>\n                            <Button\n                                disableElevation\n                                disabled={isSubmitting}\n                                fullWidth\n                                size=\"large\"\n                                type=\"submit\"\n                                variant=\"contained\"\n                                className={classes.login}\n                            >\n                                Sign up\n                            </Button>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </React.Fragment>\n    );\n};\n\nexport default FirebaseRgister;\n","import React from 'react';\nimport {Link as RouterLink} from 'react-router-dom';\nimport {Card, CardContent, Divider, Grid, Link, makeStyles, Typography, useMediaQuery, useTheme} from '@material-ui/core';\n\nimport FirebaseRgister from './../firebase-forms/FirebaseRgister';\n\nimport logo from './../../../../assets/images/logo.svg';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.primary.light,\n        height: '100%',\n        minHeight: '100vh',\n        width: '100%',\n        maxWidth: 'calc(100% + 16px)'\n    },\n    card: {\n        margin: theme.spacing(0) + ' auto',\n        maxWidth: '475px',\n        overflow: 'visible',\n        display: 'flex',\n        position: 'relative',\n        '& > *': {\n            flexGrow: 1,\n            flexBasis: '50%'\n        },\n        [theme.breakpoints.down('lg')]: {\n            maxWidth: '400px'\n        },\n        [theme.breakpoints.down('sm')]: {\n            maxWidth: '80%'\n        }\n    },\n    content: {\n        padding: theme.spacing(5),\n        [theme.breakpoints.down('lg')]: {\n            padding: theme.spacing(3)\n        }\n    },\n    title: {\n        color: theme.palette.grey[600],\n        textDecoration: 'none'\n    }\n}));\n\nconst Register = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\n\n    return (\n        <Grid container justifyContent={matchDownSM ? 'center' : 'space-between'} alignItems=\"flex-start\" className={classes.root}>\n            <Grid item xs={12} sx={{minHeight: '100vh', height: '100%'}}>\n                <Grid\n                    sx={{minHeight: '100vh', height: '100%', p: matchDownSM ? 0 : '0 80px'}}\n                    container\n                    direction=\"column\"\n                    alignItems={matchDownSM ? 'center' : 'flex-start'}\n                    spacing={matchDownSM ? 5 : 6}\n                    justifyContent=\"space-between\"\n                >\n                    <Grid item xs={12} sx={{mt: '40px', width: '100%', textAlign: 'center'}}>\n                        <RouterLink to=\"#\">\n                            <img alt=\"Auth method\" src={logo} width=\"100\" />\n                        </RouterLink>\n                    </Grid>\n                    <Grid item xs={12} container justifyContent=\"center\" alignItems=\"center\">\n                        <Card className={classes.card}>\n                            <CardContent className={classes.content}>\n                                <Grid container direction=\"column\" spacing={2} justifyContent=\"center\">\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Grid container direction=\"column\" alignItems=\"center\" spacing={1}>\n                                                    <Grid item container direction=\"column\" alignItems=\"center\">\n                                                        <Grid item>\n                                                            <Typography\n                                                                color={theme.palette.purple.main}\n                                                                gutterBottom\n                                                                variant={matchDownSM ? 'h3' : 'h2'}\n                                                            >\n                                                                Sign up\n                                                            </Typography>\n                                                        </Grid>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Typography variant=\"caption\" fontSize=\"16px\">\n                                                            {' '}\n                                                            Enter your credentials to continue\n                                                        </Typography>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <FirebaseRgister />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                            <Typography\n                                                component={RouterLink}\n                                                to=\"/pages/login/login3\"\n                                                variant=\"subtitle1\"\n                                                className={classes.title}\n                                            >\n                                                Having an account?\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                    <Grid\n                        sx={{mb: '40px'}}\n                        item\n                        container\n                        justifyContent={matchDownSM ? 'center' : 'space-between'}\n                        direction={matchDownSM ? 'column' : 'row'}\n                        alignItems=\"center\"\n                        spacing={matchDownSM ? 2 : 0}\n                    >\n                       <Grid item>\n                            <Typography component={Link} href='https://berrydashboard.io' target='_blanks' variant=\"subtitle1\" color={theme.palette.grey[600]}>\n                                www.berrydashboard.io\n                            </Typography>\n                        </Grid>\n                        <Grid item>\n                            <Typography component={Link} href='https://codedthemes.com' target='_blanks' variant=\"subtitle1\" color={theme.palette.grey[600]}>\n                                &copy; codedthemes.com\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Register;\n"],"sourceRoot":""}