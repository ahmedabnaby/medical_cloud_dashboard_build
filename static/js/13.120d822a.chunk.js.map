{"version":3,"sources":["views/pages/ConfirmDeleteModal.js","views/pages/ShowSelectedConsultation.js","views/pages/ShowConsultations.js","views/pages/Doctors.js"],"names":["ConfirmDeleteModal","props","_useState","useState","_useState2","_slicedToArray","handleDelete","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","method","url","concat","patient","id","then","response","window","location","reload","catch","alert","stop","apply","arguments","_jsx","_Fragment","children","Container","Grid","container","spacing","gridSpacing","item","xs","_jsxs","Card","className","CardHeader","title","Divider","CardContent","style","top","overflowY","height","Button","onClick","handleClose","sm","SubCard","full_name","is_doctor","color","ShowSelectedConsultation","useEffect","document","getElementById","display","handleCloseShowSelectedConsultation","consultation","chief_complaint","history_of_illness","review_of_systems","examination","assessment","medication","order_labs","upload_order_labs","href","sick_leave","date","_formattedDate$split","Date","toLocaleDateString","day","month","year","hour","minute","split","_formattedDate$split2","capitalizedMonth","toUpperCase","formatDate","created_at","ShowConsultations","BASE_URL","consultations","setConsultations","_useState3","_useState4","patients","setPatients","_useState5","_useState6","selectedConsultation","setSelectedConsultation","_useState7","_useState8","newConsultations","setNewConsultations","_useState9","_useState10","visibleSelectedConsultation","setVisibleSelectedConsultation","_useState11","_useState12","setIsLoading","fetchConsultations","get","_props$patient","data","i","length","patient_id","doctor_id","fetchDoctorsOrPatients","_ref2","_callee2","_context2","handleCloseConsultations","filter","_props$patient2","_props$patient3","_props$patient4","map","filteredConsultation","index","ListGroup","as","_props$patient5","filteredDoctor","_props$patient6","Item","cursor","marginLeft","iqama_number","useStyles","makeStyles","table","minWidth","searchControl","width","paddingRight","paddingLeft","marginBottom","marginTop","Doctors","classes","_React$useState","React","_React$useState2","doctors","setDoctors","_React$useState3","_React$useState4","selectedDoctor","setSelectedUser","_React$useState5","_React$useState6","value","setValue","_React$useState7","_React$useState8","visible","setVisibility","_React$useState9","_React$useState10","showDeleteModal","setShowDeleteModal","_React$useState11","_React$useState12","fileTypes","setFileTypes","fetchDoctors","fetchSearch","checkFileType","_ref3","_callee3","doctor","field","img","_context3","Image","onload","prevFileTypes","_objectSpread","_defineProperty","onerror","src","error","console","_x","_x2","user","forEach","Fragment","ShowSelectedDoctor","direction","justifyContent","alignItems","marginRight","OutlinedInput","onChange","event","target","placeholder","startAdornment","InputAdornment","position","IconSearch","stroke","size","aria-describedby","inputProps","labelWidth","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","whiteSpace","TableBody","component","date_of_birth","mobile_number","email","nationality","scfhs_registration","startsWith","copy_of_scfhs_registration_card","rel","current_employer_name","cv","personal_photo","is_verified","last_login","showSelectedDoctor","_props$doctor","_props$doctor2","_props$doctor3","_React$useState13","_React$useState14","userId","setUserId","_React$useState15","_React$useState16","isImage","setIsImage","_React$useState17","_React$useState18","showConsultations","setShowConsultations","_React$useState19","_React$useState20","setShowSelectedDoctor","handleSubmit","_ref4","_callee4","bodyFormData","_context4","FormData","append","headers","log","_x3","handleSubmitContract","_ref5","_callee5","e","currentUserData","_context5","preventDefault","sent","undefined","contract","files","put","t0","_x4","handleSubmitNonObjectionLetter","_ref6","_callee6","_context6","no_objection_letter","_x5","handleSubmitAdditionalFiles","_ref7","_callee7","_context7","additional_attachment","_x6","_ref8","_callee8","fileUrl","_context8","abrupt","Promise","resolve","reject","_x7","_ref9","_callee9","copyOfScfhsRegistrationCardIsImage","personalPhotoIsImage","cvIsImage","_context9","copyOfScfhsRegistrationCard","personalPhoto","checkImageType","displayImg","imgSrc","hideImg","variant","disableElevation","type","MuiTypography","gutterBottom","textDecoration","alt","_formattedDate$split3","_formattedDate$split4","onSubmit","name"],"mappings":"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","file":"static/js/13.120d822a.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Card, CardHeader, Divider, CardContent, Grid, Button} from '@material-ui/core';\r\nimport {gridSpacing} from '../../store/constant';\r\nimport {Container, ListGroup} from 'react-bootstrap';\r\nimport SubCard from '../../ui-component/cards/SubCard';\r\nimport axios from 'axios';\r\n\r\nexport const ConfirmDeleteModal = (props) => {\r\n    const BASE_URL = 'https://backend-test.alsahaba.sa/api';\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const handleDelete = async () => {\r\n        await axios({\r\n            method: 'DELETE',\r\n            url: `${BASE_URL}/user/${props?.patient.id}/delete`\r\n        })\r\n            .then(function (response) {\r\n                window.location.reload();\r\n            })\r\n            .catch(function (response) {\r\n                alert('An error occured!');\r\n            });\r\n    };\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <Card className=\"popup-container\">\r\n                            <CardHeader title=\"Consultation\" />\r\n                            <Divider />\r\n                            <CardContent className=\"popup-body\" style={{top: '250px', overflowY: 'auto', height: '75vh'}}>\r\n                                <Button id=\"closeBtn\" onClick={props?.handleClose}>\r\n                                    X\r\n                                </Button>\r\n                                <Grid container spacing={gridSpacing}>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <SubCard title={props?.patient.full_name}>\r\n                                            <h2>Are you sure you want to delete this {props?.patient.is_doctor ? 'doctor?' : 'patient?'}</h2>\r\n                                            <Button style={{color: 'red'}} onClick={handleDelete}>\r\n                                                Yes\r\n                                            </Button>\r\n                                            <Button style={{color: 'green'}} onClick={props?.handleClose}>\r\n                                                No\r\n                                            </Button>\r\n                                        </SubCard>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\nimport {Card, CardHeader, Divider, CardContent, Grid, Button} from '@material-ui/core';\r\nimport {gridSpacing} from '../../store/constant';\r\nimport {Container} from 'react-bootstrap';\r\nimport SubCard from '../../ui-component/cards/SubCard';\r\nexport const ShowSelectedConsultation = (props) => {\r\n    const hideShowModifyConsultation = () => {\r\n        props?.handleCloseShowSelectedConsultation();\r\n    };\r\n\r\n    const formatDate = (date) => {\r\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\r\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\r\n\r\n        // Split the formatted date into day, month, and year parts\r\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\r\n\r\n        // Convert the month abbreviation to uppercase\r\n        const capitalizedMonth = month.toUpperCase();\r\n\r\n        // Return the formatted date with uppercase month abbreviation and desired format\r\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\r\n    };\r\n    const displayImg = () => {\r\n        var dImg = document.getElementById('image-viewer2');\r\n        dImg.style.display = 'block';\r\n    };\r\n    const hideImg = () => {\r\n        var hImg = document.getElementById('image-viewer2');\r\n        hImg.style.display = 'none';\r\n    };\r\n    useEffect(() => {\r\n        displayImg();\r\n    }, []);\r\n\r\n    return (\r\n        <Container id=\"image-viewer2\">\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Card className=\"popup-container\">\r\n                        <CardHeader title=\"Consultation\" />\r\n                        <Divider />\r\n                        <CardContent className=\"popup-body\" style={{top: '250px', overflowY: 'auto', height: '75vh'}}>\r\n                            <Button id=\"closeBtn\" onClick={hideShowModifyConsultation}>\r\n                                X\r\n                            </Button>\r\n                            <Grid container spacing={gridSpacing}>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <SubCard title=\"Consultation\">\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>Chief Complaint:</h5>\r\n                                            <strong>{props?.consultation.chief_complaint}</strong>\r\n                                        </div>\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>History of Illness:</h5>\r\n                                            <strong>{props?.consultation.history_of_illness}</strong>\r\n                                        </div>\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>Review of systems:</h5>\r\n                                            <strong>{props?.consultation.review_of_systems}</strong>\r\n                                        </div>\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>Examinations:</h5>\r\n                                            <strong>{props?.consultation.examination}</strong>\r\n                                        </div>\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>Assessments/Plans:</h5>\r\n                                            <strong>{props?.consultation.assessment}</strong>\r\n                                        </div>\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>Medication:</h5>\r\n                                            <strong>{props?.consultation.medication}</strong>\r\n                                        </div>\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>Order labs / Home Medication / Image / Others::</h5>\r\n                                            <strong>{props?.consultation.order_labs ? props?.consultation.order_labs : 'none'}</strong>\r\n                                        </div>\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>Order labs / Home Medication / Image / Others: uploads:</h5>\r\n                                            {props?.consultation.upload_order_labs ? (\r\n                                                <a href={props?.consultation.upload_order_labs}>View file/image</a>\r\n                                            ) : (\r\n                                                'none'\r\n                                            )}\r\n                                        </div>\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>Sick leave:</h5>\r\n                                            <strong>{props?.consultation.sick_leave}</strong>\r\n                                        </div>\r\n                                        <div className=\"mt-4 mb-4\">\r\n                                            <h5>Created At:</h5>\r\n                                            <strong>{formatDate(props?.consultation.created_at)}</strong>\r\n                                        </div>\r\n                                    </SubCard>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Card, CardHeader, Divider, CardContent, Grid, Button} from '@material-ui/core';\r\nimport {gridSpacing} from '../../store/constant';\r\nimport {Container, ListGroup} from 'react-bootstrap';\r\nimport SubCard from '../../ui-component/cards/SubCard';\r\nimport axios from 'axios';\r\nimport {ShowSelectedConsultation} from './ShowSelectedConsultation';\r\n\r\nexport const ShowConsultations = (props) => {\r\n    const BASE_URL = 'https://backend-test.alsahaba.sa/api';\r\n    const [consultations, setConsultations] = useState([]);\r\n    const [patients, setPatients] = useState([]);\r\n    const [selectedConsultation, setSelectedConsultation] = useState(null);\r\n    const [newConsultations, setNewConsultations] = useState(false);\r\n    const [visibleSelectedConsultation, setVisibleSelectedConsultation] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const fetchConsultations = async () => {\r\n        setIsLoading(true);\r\n        await axios.get(`${BASE_URL}/consultations/`).then((response) => {\r\n            setConsultations(response.data);\r\n            setIsLoading(false);\r\n            var i = 0;\r\n            if (props?.patient?.is_doctor === false) {\r\n                while (i < response.data.length) {\r\n                    if (response.data[i].patient_id === props?.patient.id) {\r\n                        setNewConsultations(true);\r\n                        break;\r\n                    } else {\r\n                        setNewConsultations(false);\r\n                    }\r\n                    i++;\r\n                }\r\n            } else {\r\n                while (i < response.data.length) {\r\n                    if (response.data[i].doctor_id === props?.patient.id) {\r\n                        setNewConsultations(true);\r\n                        break;\r\n                    } else {\r\n                        setNewConsultations(false);\r\n                    }\r\n                    i++;\r\n                }\r\n            }\r\n        });\r\n    };\r\n    const fetchDoctorsOrPatients = async () => {\r\n        await axios.get(`${BASE_URL}/users/`).then((response) => {\r\n            setPatients(response.data);\r\n        });\r\n    };\r\n    const showSelectedConsultation = (consultation) => {\r\n        setSelectedConsultation(consultation);\r\n        setVisibleSelectedConsultation(true);\r\n    };\r\n    const hideShowSelectedConsultations = () => {\r\n        setVisibleSelectedConsultation(false);\r\n    };\r\n    const displayImg = () => {\r\n        var dImg = document.getElementById('image-viewer');\r\n        dImg.style.display = 'block';\r\n    };\r\n    const hideImg = () => {\r\n        var hImg = document.getElementById('image-viewer');\r\n        hImg.style.display = 'none';\r\n    };\r\n    const formatDate = (date) => {\r\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\r\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\r\n\r\n        // Split the formatted date into day, month, and year parts\r\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\r\n\r\n        // Convert the month abbreviation to uppercase\r\n        const capitalizedMonth = month.toUpperCase();\r\n\r\n        // Return the formatted date with uppercase month abbreviation and desired format\r\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\r\n    };\r\n    useEffect(() => {\r\n        displayImg();\r\n        fetchConsultations();\r\n        fetchDoctorsOrPatients();\r\n    }, []);\r\n    return (\r\n        <>\r\n            {visibleSelectedConsultation && (\r\n                <ShowSelectedConsultation\r\n                    consultation={selectedConsultation}\r\n                    handleCloseShowSelectedConsultation={hideShowSelectedConsultations}\r\n                />\r\n            )}\r\n\r\n            <Container id=\"image-viewer\" onClick={hideImg}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <Card className=\"popup-container\">\r\n                            <CardHeader title=\"Consultation\" />\r\n                            <Divider />\r\n                            <CardContent className=\"popup-body\" style={{top: '250px', overflowY: 'auto', height: '75vh'}}>\r\n                                <Button id=\"closeBtn\" onClick={props?.handleCloseConsultations}>\r\n                                    X\r\n                                </Button>\r\n                                <Grid container spacing={gridSpacing}>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <SubCard title={props?.patient.full_name}>\r\n                                            {!newConsultations ? (\r\n                                                <h5 className=\"ml-4\">No consultations yet!</h5>\r\n                                            ) : (\r\n                                                <>\r\n                                                    {consultations &&\r\n                                                        consultations\r\n                                                            ?.filter((consultation) =>\r\n                                                                props?.patient?.is_doctor\r\n                                                                    ? consultation.doctor_id === props?.patient?.id\r\n                                                                    : consultation.patient_id === props?.patient?.id\r\n                                                            )\r\n                                                            .map((filteredConsultation, index) => (\r\n                                                                <ListGroup as=\"ol\" key={filteredConsultation.id} className=\"borderBottom\">\r\n                                                                    {patients\r\n                                                                        ?.filter((patient) =>\r\n                                                                            props?.patient?.is_doctor\r\n                                                                                ? filteredConsultation.patient_id === patient.id\r\n                                                                                : filteredConsultation.doctor_id === patient.id\r\n                                                                        )\r\n                                                                        .map((filteredDoctor) => (\r\n                                                                            <ListGroup.Item\r\n                                                                                as=\"li\"\r\n                                                                                className=\"d-flex justify-content-between align-items-center\"\r\n                                                                                style={{cursor: 'pointer', marginLeft: '-25px'}}\r\n                                                                                key={filteredDoctor.id}\r\n                                                                                onClick={() =>\r\n                                                                                    showSelectedConsultation(filteredConsultation)\r\n                                                                                }\r\n                                                                            >\r\n                                                                                {index + 1}.\r\n                                                                                <div className=\"ms-2 me-auto\">\r\n                                                                                    <div className=\"fw-bold\">\r\n                                                                                        {filteredConsultation.chief_complaint}\r\n                                                                                    </div>\r\n                                                                                    <strong style={{color: 'gray'}}>\r\n                                                                                        {props?.patient?.is_doctor ? (\r\n                                                                                            <p>\r\n                                                                                                {' '}\r\n                                                                                                Patient ID/Iqama: &nbsp;\r\n                                                                                                {filteredDoctor.iqama_number}\r\n                                                                                            </p>\r\n                                                                                        ) : (\r\n                                                                                            <p>\r\n                                                                                                {' '}\r\n                                                                                                Dr. ID/Iqama: &nbsp;\r\n                                                                                                {filteredDoctor.iqama_number}\r\n                                                                                            </p>\r\n                                                                                        )}\r\n                                                                                    </strong>\r\n                                                                                    <br />\r\n                                                                                    <strong>{filteredDoctor.full_name}</strong>\r\n                                                                                </div>\r\n                                                                                <strong>\r\n                                                                                    {formatDate(filteredConsultation.created_at)}\r\n                                                                                </strong>\r\n                                                                            </ListGroup.Item>\r\n                                                                        ))}\r\n                                                                </ListGroup>\r\n                                                            ))}\r\n                                                </>\r\n                                            )}\r\n                                        </SubCard>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport {useEffect} from 'react';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport {Card, CardHeader, Divider, CardContent, Grid, Button, OutlinedInput, InputAdornment} from '@material-ui/core';\r\n\r\nimport {gridSpacing} from '../../store/constant';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {IconSearch} from '@tabler/icons';\r\n\r\nimport axios from 'axios';\r\n\r\nimport MuiTypography from '@material-ui/core/Typography';\r\n\r\nimport SubCard from '../../ui-component/cards/SubCard';\r\nimport {ConfirmDeleteModal} from './ConfirmDeleteModal';\r\nimport {ShowConsultations} from './ShowConsultations';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 350\r\n    },\r\n    searchControl: {\r\n        width: '100%',\r\n        paddingRight: '8px',\r\n        paddingLeft: '16px',\r\n        marginBottom: '16px',\r\n        marginTop: '16px'\r\n    }\r\n});\r\n\r\nexport default function Doctors() {\r\n    const classes = useStyles();\r\n    const BASE_URL = 'https://backend-test.alsahaba.sa/api';\r\n    const [doctors, setDoctors] = React.useState([]);\r\n    const [selectedDoctor, setSelectedUser] = React.useState([]);\r\n    const [value, setValue] = React.useState('');\r\n    const [visible, setVisibility] = React.useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = React.useState(false);\r\n    const [fileTypes, setFileTypes] = React.useState({});\r\n\r\n    const fetchDoctors = async () => {\r\n        await axios.get(`${BASE_URL}/users/`).then((response) => {\r\n            setDoctors(response.data);\r\n        });\r\n    };\r\n    const fetchSearch = async () => {\r\n        await axios.get(`${BASE_URL}/search?query=${value}`).then((response) => {\r\n            setDoctors(response.data);\r\n        });\r\n    };\r\n    const formatDate = (date) => {\r\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\r\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\r\n\r\n        // Split the formatted date into day, month, and year parts\r\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\r\n\r\n        // Convert the month abbreviation to uppercase\r\n        const capitalizedMonth = month.toUpperCase();\r\n\r\n        // Return the formatted date with uppercase month abbreviation and desired format\r\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\r\n    };\r\n    const closePopup = () => {\r\n        setVisibility(false);\r\n    };\r\n    const closeDeleteModal = () => {\r\n        setShowDeleteModal(false);\r\n    };\r\n    const showDeletePopUpModal = (patient) => {\r\n        setShowDeleteModal(true);\r\n        setSelectedUser(patient);\r\n    };\r\n    const showSelectedDoctor = (doctor) => {\r\n        setVisibility(true);\r\n        setSelectedUser(doctor);\r\n    };\r\n    const handleChange = (event) => {\r\n        if (event.target.value === '') {\r\n            setValue(event.target.value);\r\n            fetchDoctors();\r\n        } else {\r\n            setValue(event.target.value);\r\n            fetchSearch();\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        const checkFileType = async (doctor, field) => {\r\n            try {\r\n                const img = new Image();\r\n                img.onload = function () {\r\n                    // If the image is successfully loaded, it's an image\r\n                    setFileTypes((prevFileTypes) => ({\r\n                        ...prevFileTypes,\r\n                        [doctor.id]: {\r\n                            ...prevFileTypes[doctor.id],\r\n                            [field]: 'image'\r\n                        }\r\n                    }));\r\n                };\r\n                img.onerror = function () {\r\n                    // If an error occurs during loading, it's not an image\r\n                    setFileTypes((prevFileTypes) => ({\r\n                        ...prevFileTypes,\r\n                        [doctor.id]: {\r\n                            ...prevFileTypes[doctor.id],\r\n                            [field]: 'non-image'\r\n                        }\r\n                    }));\r\n                };\r\n                img.src = doctor[field];\r\n            } catch (error) {\r\n                console.error(`Error checking file type for doctor ${doctor.id}, field ${field}:`, error);\r\n            }\r\n        };\r\n\r\n        // Iterate through doctors and check file type for each field\r\n        doctors\r\n            ?.filter((user) => user.is_doctor)\r\n            .forEach((doctor) => {\r\n                const fieldsToCheck = ['copy_of_scfhs_registration_card', 'cv', 'personal_photo'];\r\n\r\n                fieldsToCheck.forEach((field) => {\r\n                    if (!fileTypes[doctor.id] || !fileTypes[doctor.id][field]) {\r\n                        checkFileType(doctor, field);\r\n                    }\r\n                });\r\n            });\r\n    }, [doctors]);\r\n    useEffect(() => {\r\n        fetchDoctors();\r\n    }, []);\r\n    return (\r\n        <React.Fragment>\r\n            {showDeleteModal && <ConfirmDeleteModal patient={selectedDoctor} handleClose={closeDeleteModal} />}\r\n            {visible && <ShowSelectedDoctor doctor={selectedDoctor} handleClose={closePopup} />}\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Card>\r\n                        <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems={'center'}>\r\n                            <Grid item>\r\n                                <CardHeader title=\"Registered Doctors\" />\r\n                            </Grid>\r\n                            <Grid item style={{marginRight: '25px'}}>\r\n                                <OutlinedInput\r\n                                    className={classes.searchControl}\r\n                                    id=\"input-search-profile\"\r\n                                    value={value}\r\n                                    onChange={handleChange}\r\n                                    placeholder=\"Search doctors\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                            <IconSearch stroke={1.5} size=\"1.3rem\" className={classes.startAdornment} />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                    aria-describedby=\"search-helper-text\"\r\n                                    inputProps={{\r\n                                        'aria-label': 'weight'\r\n                                    }}\r\n                                    labelWidth={0}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <TableContainer>\r\n                            <Table className={classes.table} aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>#</TableCell>\r\n                                        <TableCell>Doctor name</TableCell>\r\n                                        <TableCell align=\"left\">ID/Iqama number</TableCell>\r\n                                        <TableCell align=\"left\" style={{whiteSpace: 'nowrap'}}>\r\n                                            Date of birth\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">Mobile number</TableCell>\r\n                                        <TableCell align=\"left\">E-mail</TableCell>\r\n                                        <TableCell align=\"left\">Nationality</TableCell>\r\n                                        <TableCell align=\"left\">SCFHS Registration</TableCell>\r\n                                        <TableCell align=\"left\">Copy of scfhs registration card</TableCell>\r\n                                        <TableCell align=\"left\">Current Employer Name</TableCell>\r\n                                        <TableCell align=\"left\">CV/Resume</TableCell>\r\n                                        <TableCell align=\"left\">Personal photo</TableCell>\r\n                                        <TableCell align=\"left\">Verifed</TableCell>\r\n                                        <TableCell align=\"left\">Registered date</TableCell>\r\n                                        <TableCell align=\"left\">Last login</TableCell>\r\n                                        <TableCell align=\"left\"></TableCell>\r\n                                        <TableCell align=\"left\"></TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {doctors &&\r\n                                        doctors\r\n                                            ?.filter((user) => user.is_doctor)\r\n                                            .map((doctor, index) => (\r\n                                                <TableRow key={doctor.id}>\r\n                                                    <TableCell align=\"left\">{index + 1}</TableCell>\r\n                                                    <TableCell component=\"th\">{doctor.full_name}</TableCell>\r\n                                                    <TableCell align=\"left\">{doctor.iqama_number}</TableCell>\r\n                                                    <TableCell align=\"left\">{doctor.date_of_birth}</TableCell>\r\n                                                    <TableCell align=\"left\">{doctor.mobile_number}</TableCell>\r\n                                                    <TableCell align=\"left\">{doctor.email}</TableCell>\r\n                                                    <TableCell align=\"left\">{doctor.nationality}</TableCell>\r\n                                                    <TableCell align=\"left\">{doctor.scfhs_registration}</TableCell>\r\n                                                    <TableCell align=\"left\">\r\n                                                        {fileTypes[doctor.id] &&\r\n                                                            fileTypes[doctor.id]['copy_of_scfhs_registration_card'] &&\r\n                                                            (fileTypes[doctor.id]['copy_of_scfhs_registration_card'].startsWith('image') ? (\r\n                                                                <a\r\n                                                                    href={doctor.copy_of_scfhs_registration_card}\r\n                                                                    target=\"_blank\"\r\n                                                                    rel=\"noopener noreferrer\"\r\n                                                                >\r\n                                                                    Image\r\n                                                                </a>\r\n                                                            ) : (\r\n                                                                <a\r\n                                                                    href={doctor.copy_of_scfhs_registration_card}\r\n                                                                    target=\"_blank\"\r\n                                                                    rel=\"noopener noreferrer\"\r\n                                                                >\r\n                                                                    File\r\n                                                                </a>\r\n                                                            ))}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\">{doctor.current_employer_name}</TableCell>\r\n                                                    <TableCell align=\"left\">\r\n                                                        {fileTypes[doctor.id] &&\r\n                                                            fileTypes[doctor.id]['cv'] &&\r\n                                                            (fileTypes[doctor.id]['cv'].startsWith('image') ? (\r\n                                                                <a href={doctor.cv} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                                    Image\r\n                                                                </a>\r\n                                                            ) : (\r\n                                                                <a href={doctor.cv} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                                    File\r\n                                                                </a>\r\n                                                            ))}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\">\r\n                                                        {fileTypes[doctor.id] &&\r\n                                                            fileTypes[doctor.id]['personal_photo'] &&\r\n                                                            (fileTypes[doctor.id]['personal_photo'].startsWith('image') ? (\r\n                                                                <a href={doctor.personal_photo} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                                    Image\r\n                                                                </a>\r\n                                                            ) : (\r\n                                                                <a href={doctor.personal_photo} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                                    File\r\n                                                                </a>\r\n                                                            ))}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\">{doctor.is_verified === false ? 'No' : 'Yes'}</TableCell>\r\n                                                    <TableCell align=\"left\">{formatDate(doctor.created_at)}</TableCell>\r\n                                                    <TableCell align=\"left\">\r\n                                                        {doctor.last_login === null ? 'N/A' : formatDate(doctor.last_login)}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\" onClick={() => showSelectedDoctor(doctor)}>\r\n                                                        <img src=\"images/eye.png\" id=\"delete-icon\" />\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\" onClick={() => showDeletePopUpModal(doctor)}>\r\n                                                        <img src=\"images/trash-bin.png\" id=\"delete-icon\" />\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst ShowSelectedDoctor = (props) => {\r\n    const BASE_URL = 'https://backend-test.alsahaba.sa/api';\r\n    // const [doctors, setDoctors] = React.useState([]);\r\n    const [userId, setUserId] = React.useState(null);\r\n    const [isImage, setIsImage] = React.useState(false);\r\n    const [showConsultations, setShowConsultations] = React.useState(false);\r\n    const [selectedDoctor, setShowSelectedDoctor] = React.useState([]);\r\n    const closeConsultationsPopUp = () => {\r\n        setShowConsultations(false);\r\n    };\r\n    const formatDate = (date) => {\r\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\r\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\r\n\r\n        // Split the formatted date into day, month, and year parts\r\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\r\n\r\n        // Convert the month abbreviation to uppercase\r\n        const capitalizedMonth = month.toUpperCase();\r\n\r\n        // Return the formatted date with uppercase month abbreviation and desired format\r\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\r\n    };\r\n    const handleSubmit = async (id) => {\r\n        var bodyFormData = new FormData();\r\n        bodyFormData.append('is_verified', true);\r\n        axios({\r\n            method: 'put',\r\n            url: `${BASE_URL}/update-user/${id}/`,\r\n            data: bodyFormData,\r\n            headers: {'Content-Type': 'application/json'}\r\n        })\r\n            .then(function (response) {\r\n                window.location.reload(false);\r\n            })\r\n            .catch(function (response) {\r\n                console.log(response);\r\n            });\r\n    };\r\n\r\n    const handleSubmitContract = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            // Fetch the current user data\r\n            const response = await axios.get(`${BASE_URL}/update-user/${userId}/`);\r\n            const currentUserData = response.data;\r\n\r\n            // Create FormData and append the contract file\r\n            const bodyFormData = new FormData();\r\n            if (e.target.contract.files[0] === undefined) {\r\n                bodyFormData.append('contract', null);\r\n            } else {\r\n                bodyFormData.append('contract', e.target.contract.files[0]);\r\n            }\r\n\r\n            bodyFormData.append('is_verified', currentUserData.is_verified);\r\n\r\n            // Make the PUT request with the updated FormData\r\n            await axios.put(`${BASE_URL}/update-user/${userId}/`, bodyFormData, {\r\n                headers: {'Content-Type': 'multipart/form-data'}\r\n            });\r\n\r\n            window.location.reload();\r\n        } catch (error) {\r\n            console.error('Error submitting contract:', error);\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    const handleSubmitNonObjectionLetter = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            // Fetch the current user data\r\n            const response = await axios.get(`${BASE_URL}/update-user/${userId}/`);\r\n            const currentUserData = response.data;\r\n\r\n            // Create FormData and append the contract file\r\n            const bodyFormData = new FormData();\r\n            if (e.target.no_objection_letter.files[0] === undefined) {\r\n                bodyFormData.append('no_objection_letter', null);\r\n            } else {\r\n                bodyFormData.append('no_objection_letter', e.target.no_objection_letter.files[0]);\r\n            }\r\n\r\n            bodyFormData.append('is_verified', currentUserData.is_verified);\r\n\r\n            // Make the PUT request with the updated FormData\r\n            await axios.put(`${BASE_URL}/update-user/${userId}/`, bodyFormData, {\r\n                headers: {'Content-Type': 'multipart/form-data'}\r\n            });\r\n\r\n            window.location.reload();\r\n        } catch (error) {\r\n            console.error('Error submitting no_objection_letter:', error);\r\n            console.log(error);\r\n        }\r\n    };\r\n    const handleSubmitAdditionalFiles = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            // Fetch the current user data\r\n            const response = await axios.get(`${BASE_URL}/update-user/${userId}/`);\r\n            const currentUserData = response.data;\r\n\r\n            // Create FormData and append the contract file\r\n            const bodyFormData = new FormData();\r\n            if (e.target.additional_attachment.files[0] === undefined) {\r\n                bodyFormData.append('additional_attachment', null);\r\n            } else {\r\n                bodyFormData.append('additional_attachment', e.target.additional_attachment.files[0]);\r\n            }\r\n\r\n            bodyFormData.append('is_verified', currentUserData.is_verified);\r\n\r\n            // Make the PUT request with the updated FormData\r\n            await axios.put(`${BASE_URL}/update-user/${userId}/`, bodyFormData, {\r\n                headers: {'Content-Type': 'multipart/form-data'}\r\n            });\r\n\r\n            window.location.reload();\r\n        } catch (error) {\r\n            console.error('Error submitting additional_attachment:', error);\r\n            console.log(error);\r\n        }\r\n    };\r\n    const showSelectedConsultations = (doctor) => {\r\n        setShowConsultations(true);\r\n        setShowSelectedDoctor(doctor);\r\n    };\r\n    useEffect(() => {\r\n        const checkFileType = async (fileUrl) => {\r\n            try {\r\n                return new Promise((resolve, reject) => {\r\n                    const img = new Image();\r\n                    img.onload = function () {\r\n                        // If the image is successfully loaded, it's an image\r\n                        resolve(true);\r\n                    };\r\n                    img.onerror = function () {\r\n                        // If an error occurs during loading, it's not an image\r\n                        resolve(false);\r\n                    };\r\n                    img.src = fileUrl;\r\n                });\r\n            } catch (error) {\r\n                console.error('Error checking file type:', error);\r\n                return false;\r\n            }\r\n        };\r\n\r\n        const checkImageType = async () => {\r\n            const copyOfScfhsRegistrationCardIsImage = await checkFileType(props.doctor.copy_of_scfhs_registration_card);\r\n            const personalPhotoIsImage = await checkFileType(props.doctor.personal_photo);\r\n            const cvIsImage = await checkFileType(props.doctor.cv);\r\n\r\n            setIsImage({\r\n                copyOfScfhsRegistrationCard: copyOfScfhsRegistrationCardIsImage,\r\n                personalPhoto: personalPhotoIsImage,\r\n                cv: cvIsImage\r\n            });\r\n        };\r\n\r\n        checkImageType();\r\n    }, [props.patient]);\r\n\r\n    const displayImg = (imgSrc) => {\r\n        document.getElementById('full-image').src = imgSrc;\r\n        var dImg = document.getElementById('image-viewer');\r\n        dImg.style.display = 'block';\r\n    };\r\n    const hideImg = () => {\r\n        var hImg = document.getElementById('image-viewer');\r\n        hImg.style.display = 'none';\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {showConsultations && <ShowConsultations patient={selectedDoctor} handleCloseConsultations={closeConsultationsPopUp} />}\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Card className=\"popup-container\">\r\n                        <CardHeader title=\"Consultation\" />\r\n                        <Divider />\r\n                        <CardContent className=\"popup-body\" id=\"popupCustom\" style={{top: '235px'}}>\r\n                            <Button id=\"closeBtn\" onClick={() => props.handleClose()}>\r\n                                X\r\n                            </Button>\r\n                            <Grid container spacing={gridSpacing}>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <SubCard title={props.doctor.full_name}>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            disableElevation\r\n                                            type=\"submit\"\r\n                                            onClick={() => showSelectedConsultations(props.doctor)}\r\n                                        >\r\n                                            Show Consultations\r\n                                        </Button>\r\n                                        <Grid container direction=\"column\" id=\"poppins\" spacing={1}>\r\n                                            <Grid item>\r\n                                                <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                    Doctor name: &nbsp;\r\n                                                    <span id=\"small-text\">{props.doctor.full_name}</span>\r\n                                                </MuiTypography>\r\n                                                <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                    ID/Iqama number: &nbsp;\r\n                                                    <span id=\"small-text\">{props.doctor.iqama_number}</span>\r\n                                                </MuiTypography>\r\n                                                <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                    Date of birth: &nbsp;\r\n                                                    <span id=\"small-text\">{props.doctor.date_of_birth}</span>\r\n                                                </MuiTypography>\r\n                                                <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                    Mobile number: &nbsp;\r\n                                                    <span id=\"small-text\">{props.doctor.mobile_number}</span>\r\n                                                </MuiTypography>\r\n                                                <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                    E-mail: &nbsp;\r\n                                                    <span id=\"small-text\">{props.doctor.email}</span>\r\n                                                </MuiTypography>\r\n                                                <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                    Nationality: &nbsp;\r\n                                                    <span id=\"small-text\">{props.doctor.nationality}</span>\r\n                                                </MuiTypography>\r\n                                                <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                    SCFHS registration: &nbsp;\r\n                                                    <span id=\"small-text\">{props.doctor.scfhs_registration}</span>\r\n                                                </MuiTypography>\r\n                                                <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                    Copy of SCFHS registration : &nbsp;\r\n                                                    {isImage.copyOfScfhsRegistrationCard ? (\r\n                                                        <span\r\n                                                            id=\"small-text\"\r\n                                                            onClick={() => displayImg(props.doctor.copy_of_scfhs_registration_card)}\r\n                                                            style={{cursor: 'pointer', textDecoration: 'underline', color: 'blue'}}\r\n                                                        >\r\n                                                            Image\r\n                                                        </span>\r\n                                                    ) : (\r\n                                                        <a\r\n                                                            href={props.doctor.copy_of_scfhs_registration_card}\r\n                                                            target=\"_blank\"\r\n                                                            rel=\"noopener noreferrer\"\r\n                                                        >\r\n                                                            File\r\n                                                        </a>\r\n                                                    )}\r\n                                                    {isImage.copyOfScfhsRegistrationCard && (\r\n                                                        <div id=\"image-viewer\" onClick={hideImg}>\r\n                                                            <span className=\"closed\">&times;</span>\r\n                                                            <img className=\"modal-content\" id=\"full-image\" alt=\"Image\" />\r\n                                                        </div>\r\n                                                    )}\r\n                                                </MuiTypography>\r\n                                                <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                    Current Employer Name : &nbsp;\r\n                                                    <span id=\"small-text\">{props.doctor.current_employer_name}</span>\r\n                                                </MuiTypography>\r\n                                                <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                    CV/Resume: &nbsp;\r\n                                                    <span id=\"small-text\">\r\n                                                        <a href={props.doctor.cv} target=\"_blank\">\r\n                                                            File\r\n                                                        </a>\r\n                                                    </span>\r\n                                                </MuiTypography>\r\n                                                <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                    Personal Photo: &nbsp;\r\n                                                    {isImage.personalPhoto ? (\r\n                                                        <span\r\n                                                            id=\"small-text\"\r\n                                                            onClick={() => displayImg(props.doctor.personal_photo)}\r\n                                                            style={{cursor: 'pointer', textDecoration: 'underline', color: 'blue'}}\r\n                                                        >\r\n                                                            Image\r\n                                                        </span>\r\n                                                    ) : (\r\n                                                        <a href={props.doctor.personal_photo} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                            File\r\n                                                        </a>\r\n                                                    )}\r\n                                                    {isImage.personalPhoto && (\r\n                                                        <div id=\"image-viewer\" onClick={hideImg}>\r\n                                                            <span className=\"closed\">&times;</span>\r\n                                                            <img className=\"modal-content\" id=\"full-image\" alt=\"Image\" />\r\n                                                        </div>\r\n                                                    )}\r\n                                                </MuiTypography>\r\n                                                <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                    Verifed: &nbsp;\r\n                                                    <span id=\"small-text\">\r\n                                                        {props.doctor.is_verified === false ? (\r\n                                                            <>\r\n                                                                <span>No </span>\r\n                                                                <Button\r\n                                                                    type=\"submit\"\r\n                                                                    variant=\"contained\"\r\n                                                                    color=\"success\"\r\n                                                                    disableElevation\r\n                                                                    onClick={() => handleSubmit(props.doctor.id)}\r\n                                                                >\r\n                                                                    Verify!\r\n                                                                </Button>\r\n                                                            </>\r\n                                                        ) : (\r\n                                                            'Yes'\r\n                                                        )}\r\n                                                    </span>\r\n                                                </MuiTypography>\r\n                                                <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                    Last login: &nbsp;\r\n                                                    <span id=\"small-text\">\r\n                                                        {props.doctor.last_login === null ? 'N/A' : formatDate(props.doctor.last_login)}\r\n                                                    </span>\r\n                                                </MuiTypography>\r\n                                                <form onSubmit={handleSubmitContract}>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Contract: &nbsp;{' '}\r\n                                                        {props?.doctor?.contract ? (\r\n                                                            <a id=\"small-text\" href={props.doctor.contract}>\r\n                                                                Download doctor's contract.\r\n                                                            </a>\r\n                                                        ) : (\r\n                                                            ''\r\n                                                        )}\r\n                                                        <input type=\"file\" name=\"contract\" onClick={() => setUserId(props.doctor.id)} />\r\n                                                    </MuiTypography>\r\n                                                    <Button type=\"submit\" variant=\"contained\" color=\"success\" disableElevation>\r\n                                                        Upload!\r\n                                                    </Button>\r\n                                                </form>\r\n                                                <form onSubmit={handleSubmitNonObjectionLetter}>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Non Objection Letter: &nbsp;{' '}\r\n                                                        {props?.doctor?.no_objection_letter ? (\r\n                                                            <a id=\"small-text\" href={props.doctor.no_objection_letter}>\r\n                                                                Download doctor's non objection letter.\r\n                                                            </a>\r\n                                                        ) : (\r\n                                                            ''\r\n                                                        )}\r\n                                                        <input\r\n                                                            type=\"file\"\r\n                                                            name=\"no_objection_letter\"\r\n                                                            onClick={() => setUserId(props.doctor.id)}\r\n                                                        />\r\n                                                    </MuiTypography>\r\n                                                    <Button type=\"submit\" variant=\"contained\" color=\"success\" disableElevation>\r\n                                                        Upload!\r\n                                                    </Button>\r\n                                                </form>\r\n                                                <form onSubmit={handleSubmitAdditionalFiles}>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Additional Attachment: &nbsp;\r\n                                                        {props?.doctor?.additional_attachment ? (\r\n                                                            <a id=\"small-text\" href={props.doctor.additional_attachment}>\r\n                                                                Download doctor's additional attachment.\r\n                                                            </a>\r\n                                                        ) : (\r\n                                                            ''\r\n                                                        )}\r\n                                                        <input\r\n                                                            type=\"file\"\r\n                                                            name=\"additional_attachment\"\r\n                                                            onClick={() => setUserId(props.doctor.id)}\r\n                                                        />\r\n                                                    </MuiTypography>\r\n                                                    <Button type=\"submit\" variant=\"contained\" color=\"success\" disableElevation>\r\n                                                        Upload!\r\n                                                    </Button>\r\n                                                </form>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </SubCard>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n"],"sourceRoot":""}