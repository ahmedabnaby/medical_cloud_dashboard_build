{"version":3,"sources":["ui-component/cards/SubCard/index.js","assets/scss/_themes-vars.module.scss","themes/palatte.js","themes/typography.js","themes/index.js","themes/compStyleOverride.js","config.js","layout/MainLayout/LogoSection/index.js","layout/MainLayout/Header/SearchSection/index.js","store/actions.js","layout/MainLayout/Header/Customization/index.js","layout/MainLayout/Header/MobileSection/index.js","ui-component/cards/UpgradePlanCard/index.js","assets/images/users/user-round.svg","layout/MainLayout/Header/ProfileSection/index.js","layout/MainLayout/Header/NotificationSection/index.js","layout/MainLayout/Header/index.js","layout/MainLayout/Sidebar/MenuList/NavItem/index.js","layout/MainLayout/Sidebar/MenuList/NavCollapse/index.js","layout/MainLayout/Sidebar/MenuList/NavGroup/index.js","menu-items/main-menu-items.js","layout/MainLayout/Sidebar/MenuList/index.js","layout/MainLayout/Sidebar/index.js","ui-component/extended/Breadcrumb/index.js","layout/MainLayout/index.js","routes/MainRoutes.js","layout/MinimalLayout/index.js","layout/NavMotion.js","routes/LoginRoutes.js","ui-component/extended/Loader/Loader.js","routes/AuthenticationRoutes.js","routes/index.js","ui-component/extended/Snackbar/index.js","layout/NavigationScroll.js","App.js","store/customizationReducer.js","store/snackbarReducer.js","store/reducer.js","serviceWorker.js","index.js","store/constant.js"],"names":["SubCard","_ref","title","children","darkTitle","contentClass","secondary","theme","useTheme","_jsxs","Card","sx","border","borderColor","palette","primary","light","boxShadow","_jsx","CardHeader","Typography","variant","action","Divider","CardContent","className","module","exports","themePalatte","navObject","mode","customization","navType","common","black","value","paperDark","blue50","main","blue500","dark","blue600","200","blue200","800","blue800","deepPurple50","deepPurple500","deepPurple600","deepPurple200","deepPurple800","purple","error","red200","red500","red800","orange","deepOrange50","deepOrange200","deepOrange800","warning","amber50","amber100","amber500","success","A100","A200","A700","grey","50","grey50","100","grey100","500","textSecondary","600","textPrimary","900","textDark","text","hint","background","paper","default","backgroundDefault","themeTypography","fontFamily","h6","fontWeight","color","fontSize","h5","h4","h3","h2","h1","subtitle1","subtitle2","caption","body1","lineHeight","body2","letterSpacing","mainContent","backgroundColor","width","minHeight","flexGrow","padding","marginTop","marginRight","borderRadius","menuCaption","textTransform","subMenuCaption","commonAvatar","cursor","smallAvatar","height","mediumAvatar","largeAvatar","menuSelected","menuSelectedBack","divider","grey700","grey500","grey900","grey200","createMuiTheme","direction","rtlLayout","mixins","toolbar","typography","components","MuiButton","styleOverrides","root","MuiPaper","defaultProps","elevation","backgroundImage","rounded","MuiCardHeader","MuiCardContent","MuiCardActions","MuiAlert","alignItems","MuiButtonBase","paddingTop","paddingBottom","MuiListItemIcon","minWidth","MuiListItemText","MuiInputBase","input","MuiOutlinedInput","grey400","inputAdornedStart","paddingLeft","notchedOutline","MuiSlider","grey300","mark","MuiAutocomplete","popper","MuiDivider","opacity","MuiSelect","select","MuiCheckbox","MuiSvgIcon","MuiAvatar","MuiChip","MuiTimelineContent","MuiTreeItem","label","marginBottom","MuiTimelineDot","MuiDateTimePickerTabs","tabs","MuiClock","bottom","MuiDialog","config","basename","defaultPath","i18n","LogoSection","React","Fragment","Link","component","RouterLink","to","useStyles","makeStyles","_searchControl","searchControl","marginLeft","paddingRight","_defineProperty","breakpoints","down","startAdornment","headerAvtar","_objectSpread","colseAvtar","popperContainer","zIndex","top","cardContent","card","SearchSection","classes","_useState","useState","_useState2","_slicedToArray","Hidden","mdUp","PopupState","popupId","popupState","Box","ml","ButtonBase","Avatar","bindToggle","IconSearch","stroke","size","SET_MENU","MENU_OPEN","MENU_TYPE","THEME_LOCALE","THEME_RTL","SET_FONT_FAMILY","SET_BORDER_RADIUS","SNACKBAR_OPEN","valuetext","concat","menuIcon","transition","box","Customization","initialFont","useSelector","state","dispatch","useDispatch","_React$useState","_React$useState2","open","setOpen","_React$useState3","_React$useState4","setBorderRadius","_React$useState5","_React$useState6","setFontFamily","handleToggle","document","querySelector","setAttribute","useEffect","type","actionTypes","newFont","Tooltip","Fab","onClick","margin","spacing","position","right","speedDial","bgcolor","display","SettingsSuggestIcon","Drawer","anchor","onClose","PaperProps","p","Grid","container","gridSpacing","item","xs","FormControl","RadioGroup","aria-label","onChange","e","target","name","FormControlLabel","control","Radio","mt","Slider","event","newValue","getAriaValueText","valueLabelDisplay","aria-labelledby","marks","step","min","max","grow","paperContainer","overflow","content","tagLine","button","UpgradePlanCard","style","Button","href","disableElevation","navContainer","maxWidth","profileChip","profileLabel","listItem","flex","ScrollHeight","maxHeight","overflowX","badgeyellow","ProfileSection","history","useHistory","sdm","setSdm","_React$useState7","selectedIndex","BASE_URL","_React$useState9","_React$useState10","anchorRef","useRef","handleLogout","useLocation","_asyncToGenerator","_regeneratorRuntime","_callee","wrap","_context","prev","next","push","stop","apply","arguments","getEnabledConsultations","_ref2","_callee2","response","lastObject","_context2","axios","get","sent","data","length","is_enabled","console","t0","handleClose","current","contains","prevOpen","focus","handleUpdateEnableConsultations","_ref3","_callee3","_context3","preventDefault","log","put","_x","Chip","icon","src","User1","ref","aria-controls","undefined","aria-haspopup","IconSettings","Popper","placement","anchorEl","role","disablePortal","popperOptions","modifiers","options","offset","_ref4","TransitionProps","Fade","Paper","ClickAwayListener","onClickAway","PerfectScrollbar","justifyContent","Switch","checked","List","ListItem","selected","ListItemIcon","IconLogout","ListItemText","listAction","actionColor","sendIcon","notificationChip","listDivider","listChipError","listChipWarning","listChipSuccess","listAvatarSuccess","listAvatarPrimary","listContainer","uploadCard","cardAction","bodyspacing","textboxspacing","itemaction","status","NotificationSection","matchesXs","useMediaQuery","setValue","handleChange","notificationpoper","Stack","TextField","id","fullWidth","SelectProps","native","map","option","ListItemAvatar","alt","ListItemSecondaryAction","gutterBottom","IconBuildingStore","IconMailbox","IconBrandTelegram","IconPhoto","CardActions","boxContainer","Header","props","handleLeftDrawerToggle","mdDown","IconMenu2","smDown","listIcon","listCustomIconSub","listCustomIconSubActive","listItemNoBack","NavItem","matchesSM","level","Icon","itemIcon","listCustomIcon","FiberManualRecordIcon","isOpen","itemIconClass","itemTarget","listItemProps","url","external","disabled","opened","chip","avatar","collapseIcon","collapseIconSub","collapseWrapper","left","NavCollapse","menu","setSelected","menus","align","menuIconClass","listItemTypography","IconChevronUp","IconChevronDown","Collapse","in","timeout","unmountOnExit","disablePadding","menuDivider","NavGroup","items","subheader","icons","IconDashboard","IconDeviceAnalytics","IconChartArcs","IconClipboardList","IconChartInfographic","IconForms","IconReceipt2","IconPencil","IconPalette","IconShadow","IconPhoneCall","IconBrandChrome","IconFiles","IconAtom","IconTools","IconBrush","IconLockAccess","IconShieldLock","IconKey","IconTypography","IconMenu","IconBoxMultiple","IconCircleOff","IconCircle","IconBorderRadius","IconBrandGravatar","IconShape","IconUserCheck","IconId","IconLayoutList","IconBug","IconLoader","IconRun","IconUser","IconHelp","IconSitemap","IconPictureInPicture","IconMail","IconMessages","IconNfc","IconCalendar","IconBellRinging","IconBorderAll","IconChartCandle","IconBasket","menuItems","FormattedMessage","breadcrumbs","MenuList","menuItem","drawer","up","drawerWidth","flexShrink","drawerPaper","borderRight","Sidebar","drawerOpen","drawerToggle","window","matchUpMd","body","ModalProps","keepMounted","link","textDecoration","alignContent","activeLink","noPadding","titleTop","titleBottom","Breadcrumbs","separator","maxItems","rightAlign","rest","_objectWithoutProperties","setMain","_useState3","_useState4","setItem","navigation","index","getCollapse","filter","collapse","location","pathname","SeparatorIcon","separatorIcon","cardClass","itemContent","CollapseIcon","ItemIcon","breadcrumbContent","itemTitle","AccountTreeTwoToneIcon","MuiBreadcrumbs","HomeTwoToneIcon","HomeIcon","_objectSpread2","_contentShift","appBar","appBarWidth","transitions","create","easing","sharp","duration","leavingScreen","contentShift","easeOut","enteringScreen","MainLayout","_ref$showBreadcrumb","showBreadcrumb","leftDrawerOpened","CssBaseline","AppBar","Toolbar","clsx","Breadcrumb","IconChevronRight","DashboardDefault","lazy","TableBasic","TableDense","Consultations","Payments","Doctors","Patients","UtilsTypography","UtilsColor","UtilsShadow","UtilsMaterialIcons","UtilsTablerIcons","SamplePage","MainRoutes","Route","path","MinimalLayout","NavMotion","motion","div","initial","animate","exit","variants","scale","out","ease","AuthLogin","LoginRoutes","Loader","LinearProgress","AuthLogin3","AuthRegister3","AuthenticationRoutes","Routes","AnimatePresence","Suspense","fallback","Redirect","exact","from","_Fragment","SlideLeft","Slide","SlideUp","SlideRight","SlideDown","Grow","Snackbar","snackbarInitial","snackbar","reason","MuiSnackbar","anchorOrigin","autoHideDuration","message","TransitionComponent","IconButton","CloseIcon","Alert","severity","alertSeverity","actionButton","close","withRouter","scrollTo","behavior","jss","plugins","_toConsumableArray","jssPreset","rtl","cacheRtl","createCache","key","stylisPlugins","rtlPlugin","App","messages","setMessages","locale","then","d","StylesProvider","CacheProvider","IntlProvider","defaultLocale","StyledEngineProvider","injectFirst","NavigationScroll","ThemeProvider","initialState","customizationReducer","vertical","horizontal","snackbarReducer","reducer","combineReducers","Boolean","hostname","match","store","createStore","ReactDOM","render","Provider","BrowserRouter","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7d00c2b8.chunk.js","sourcesContent":["import React from 'react';\nimport {Card, CardContent, CardHeader, Divider, Typography, useTheme} from '@material-ui/core';\n\nconst SubCard = ({title, children, darkTitle, contentClass, secondary}) => {\n    const theme = useTheme();\n\n    return (\n        <Card\n            sx={{\n                border: '1px solid',\n                borderColor: theme.palette.primary.light,\n                ':hover': {\n                    boxShadow: '0 4px 24px 0 rgb(34 41 47 / 10%)'\n                }\n            }}\n        >\n            {!darkTitle && title && <CardHeader title={<Typography variant=\"h5\">{title}</Typography>} action={secondary} />}\n            {darkTitle && title && <CardHeader title={<Typography variant=\"h4\">{title}</Typography>} />}\n            {title && <Divider sx={{borderColor: 'primary.light'}} />}\n            <CardContent className={contentClass}>{children}</CardContent>\n        </Card>\n    );\n};\n\nexport default SubCard;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper\":\"#fff\",\"paperDark\":\"#111936\",\"textPrimary\":\"#8492c4\",\"textSecondary\":\"#bdc8f0\",\"blue50\":\"#e3f2fd\",\"blue200\":\"#90caf9\",\"blue500\":\"#2196f3\",\"blue600\":\"#1e88e5\",\"blue800\":\"#1565c0\",\"A100\":\"#b9f6ca\",\"A200\":\"#69f0ae\",\"A700\":\"#00c853\",\"deepPurple50\":\"#ede7f6\",\"deepPurple200\":\"#b39ddb\",\"deepPurple500\":\"#673ab7\",\"deepPurple600\":\"#5e35b1\",\"deepPurple800\":\"#4527a0\",\"amber50\":\"#fff8e1\",\"amber100\":\"#ffe57f\",\"amber500\":\"#ffc107\",\"grey50\":\"#fafafa\",\"grey100\":\"#f5f5f5\",\"grey200\":\"#eee\",\"grey300\":\"#e0e0e0\",\"grey500\":\"#9e9e9e\",\"grey600\":\"#757575\",\"grey700\":\"#616161\",\"grey900\":\"#212121\",\"red200\":\"#ef9a9a\",\"red500\":\"#f44336\",\"red800\":\"#c62828\",\"deepOrange50\":\"#fbe9e7\",\"deepOrange200\":\"#ffab91\",\"deepOrange800\":\"#d84315\"};","import value from '../assets/scss/_themes-vars.module.scss';\n\n/**\n * Color intention that you want to used in your theme\n */\nexport function themePalatte(navObject) {\n    return {\n        mode: navObject.customization.navType,\n        common: {\n            black: value.paperDark\n        },\n        primary: {\n            light: value.blue50,\n            main: value.blue500,\n            dark: value.blue600,\n            200: value.blue200,\n            800: value.blue800\n        },\n        secondary: {\n            light: value.deepPurple50,\n            main: value.deepPurple500,\n            dark: value.deepPurple600,\n            200: value.deepPurple200,\n            800: value.deepPurple800\n        },\n        purple: {\n            light: value.deepPurple50,\n            main: value.deepPurple500,\n            dark: value.deepPurple600,\n            200: value.deepPurple200,\n            800: value.deepPurple800\n        },\n        error: {\n            light: value.red200,\n            main: value.red500,\n            dark: value.red800\n        },\n        orange: {\n            light: value.deepOrange50,\n            main: value.deepOrange200,\n            dark: value.deepOrange800\n        },\n        warning: {\n            light: value.amber50,\n            main: value.amber100,\n            dark: value.amber500\n        },\n        success: {\n            light: value.A100,\n            main: value.A200,\n            dark: value.A700\n        },\n        grey: {\n            50: value.grey50,\n            100: value.grey100,\n            500: navObject.textSecondary,\n            600: navObject.textPrimary,\n            900: navObject.textDark\n        },\n        text: {\n            primary: navObject.textPrimary,\n            secondary: navObject.textSecondary,\n            dark: navObject.textDark,\n            hint: value.grey100\n        },\n        background: {\n            paper: navObject.paper,\n            default: navObject.backgroundDefault\n        }\n    };\n}\n","/**\n * Typography used in theme\n */\nexport function themeTypography(navObject) {\n    return {\n        fontFamily: navObject.customization.fontFamily,\n        h6: {\n            fontWeight: 500,\n            color: navObject.textDark,\n            fontSize: '0.75rem'\n        },\n        h5: {\n            fontSize: '0.875rem',\n            color: navObject.textDark,\n            fontWeight: 500\n        },\n        h4: {\n            fontSize: '1rem',\n            color: navObject.textDark,\n            fontWeight: 600\n        },\n        h3: {\n            fontSize: '1.25rem',\n            color: navObject.textDark,\n            fontWeight: 600\n        },\n        h2: {\n            fontSize: '1.5rem',\n            color: navObject.textDark,\n            fontWeight: 700\n        },\n        h1: {\n            fontSize: '2.125rem',\n            color: navObject.textDark,\n            fontWeight: 700\n        },\n        subtitle1: {\n            fontSize: '0.875rem',\n            fontWeight: 500,\n            color: navObject.textDark\n        },\n        subtitle2: {\n            fontSize: '0.75rem',\n            fontWeight: 400,\n            color: navObject.textSecondary\n        },\n        caption: {\n            fontSize: '0.75rem',\n            color: navObject.textSecondary,\n            fontWeight: 400\n        },\n        body1: {\n            fontSize: '0.875rem',\n            fontWeight: 400,\n            lineHeight: '1.334em'\n        },\n        body2: {\n            letterSpacing: '0em',\n            fontWeight: 400,\n            lineHeight: '1.5em',\n            color: navObject.textPrimary\n        },\n        mainContent: {\n            backgroundColor: navObject.background,\n            width: '100%',\n            minHeight: 'calc(100vh - 88px)',\n            flexGrow: 1,\n            padding: '20px',\n            marginTop: '88px',\n            marginRight: '20px',\n            borderRadius: navObject.customization.borderRadius + 'px'\n        },\n        menuCaption: {\n            fontSize: '0.875rem',\n            fontWeight: 500,\n            color: navObject.textDark,\n            padding: '6px',\n            textTransform: 'capitalize',\n            marginTop: '10px'\n        },\n        subMenuCaption: {\n            fontSize: '0.6875rem',\n            fontWeight: 500,\n            color: navObject.textSecondary,\n            textTransform: 'capitalize'\n        },\n        commonAvatar: {\n            cursor: 'pointer',\n            borderRadius: '8px'\n        },\n        smallAvatar: {\n            width: '22px',\n            height: '22px',\n            fontSize: '1rem'\n        },\n        mediumAvatar: {\n            width: '34px',\n            height: '34px',\n            fontSize: '1.2rem'\n        },\n        largeAvatar: {\n            width: '44px',\n            height: '44px',\n            fontSize: '1.5rem'\n        }\n    };\n}\n","import {createMuiTheme} from '@material-ui/core/styles';\nimport value from '../assets/scss/_themes-vars.module.scss';\nimport {componentStyleOverrides} from './compStyleOverride';\nimport {themePalatte} from './palatte';\nimport {themeTypography} from './typography';\n\nexport function theme(customization) {\n    let navObject = {\n        paper: '',\n        backgroundDefault: '',\n        background: '',\n        textPrimary: '',\n        textSecondary: '',\n        textDark: '',\n        menuSelected: '',\n        menuSelectedBack: '',\n        divider: '',\n        customization: customization\n    };\n\n    switch (customization.navType) {\n        case 'light':\n        default:\n            navObject.paper = value.paper;\n            navObject.backgroundDefault = value.paper;\n            navObject.background = value.blue50;\n            navObject.textPrimary = value.grey700;\n            navObject.textSecondary = value.grey500;\n            navObject.textDark = value.grey900;\n            navObject.menuSelected = value.deepPurple600;\n            navObject.menuSelectedBack = value.blue50;\n            navObject.divider = value.grey200;\n            break;\n    }\n\n    return createMuiTheme({\n        direction: customization.rtlLayout ? 'rtl' : 'ltr',\n        palette: themePalatte(navObject),\n        mixins: {\n            toolbar: {\n                minHeight: '48px',\n                padding: '16px',\n                '@media (min-width: 600px)': {\n                    minHeight: '48px'\n                }\n            }\n        },\n        typography: themeTypography(navObject),\n        components: componentStyleOverrides(navObject)\n    });\n}\n\nexport default theme;\n","import value from '../assets/scss/_themes-vars.module.scss';\n\n/**\n * MUI Componets whose styles are overrided as per theme\n */\nexport function componentStyleOverrides(theme) {\n    return {\n        MuiButton: {\n            styleOverrides: {\n                root: {\n                    fontWeight: 500,\n                    textTransform: 'capitalize',\n                    borderRadius: '4px'\n                }\n            }\n        },\n        MuiPaper: {\n            defaultProps: {\n                elevation: 0\n            },\n            styleOverrides: {\n                root: {\n                    backgroundImage: 'none'\n                },\n                rounded: {\n                    //border: '1px solid',\n                    borderRadius: theme.customization.borderRadius + 'px'\n                }\n            }\n        },\n        MuiCardHeader: {\n            styleOverrides: {\n                root: {\n                    color: value.textDark,\n                    padding: '24px'\n                },\n                title: {\n                    fontSize: '1.125rem'\n                }\n            }\n        },\n        MuiCardContent: {\n            styleOverrides: {\n                root: {\n                    padding: '24px'\n                }\n            }\n        },\n        MuiCardActions: {\n            styleOverrides: {\n                root: {\n                    padding: '24px'\n                }\n            }\n        },\n        MuiAlert: {\n            styleOverrides: {\n                root: {\n                    alignItems: 'center'\n                }\n            }\n        },\n        MuiButtonBase: {\n            styleOverrides: {\n                root: {\n                    '&.MuiListItem-root': {\n                        color: theme.textPrimary,\n                        paddingTop: '10px',\n                        paddingBottom: '10px',\n                        '&.Mui-selected': {\n                            color: theme.menuSelected,\n                            backgroundColor: theme.menuSelectedBack,\n                            '&:hover': {\n                                backgroundColor: theme.menuSelectedBack\n                            },\n                            '& .MuiListItemIcon-root': {\n                                color: theme.menuSelected\n                            }\n                        },\n                        '&:hover': {\n                            backgroundColor: theme.menuSelectedBack,\n                            color: theme.menuSelected,\n                            '& .MuiListItemIcon-root': {\n                                color: theme.menuSelected\n                            }\n                        }\n                    },\n                    '&.MuiOutlinedInput-root': {\n                        //borderRadius: customization.borderRadius + 'px'\n                    }\n                }\n            }\n        },\n        MuiListItemIcon: {\n            styleOverrides: {\n                root: {\n                    color: theme.textPrimary,\n                    minWidth: '36px'\n                }\n            }\n        },\n        MuiListItemText: {\n            styleOverrides: {\n                primary: {\n                    color: theme.textDark\n                }\n            }\n        },\n        MuiInputBase: {\n            styleOverrides: {\n                input: {\n                    color: theme.textDark,\n                    '&::placeholder': {\n                        color: theme.textSecondary,\n                        fontSize: '0.875rem'\n                    }\n                }\n            }\n        },\n        MuiOutlinedInput: {\n            styleOverrides: {\n                root: {\n                    background: value.grey50,\n                    borderRadius: theme.customization.borderRadius + 'px',\n                    '& .MuiOutlinedInput-notchedOutline': {\n                        borderColor: value.grey400\n                    },\n                    '&:hover $notchedOutline': {\n                        borderColor: value.blue50\n                    }\n                },\n                input: {\n                    background: value.grey50,\n                    padding: '15.5px 14px',\n                    fontWeight:500,\n                    borderRadius: theme.customization.borderRadius + 'px'\n                },\n                inputAdornedStart: {\n                    paddingLeft: 4\n                },\n                notchedOutline: {\n                    borderRadius: theme.customization.borderRadius + 'px'\n                }\n            }\n        },\n        MuiSlider: {\n            styleOverrides: {\n                root: {\n                    '&.Mui-disabled': {\n                        color: value.grey300\n                    }\n                },\n                mark: {\n                    backgroundColor: theme.paper,\n                    width: '4px'\n                }\n            }\n        },\n        MuiAutocomplete: {\n            styleOverrides: {\n                root: {\n                    '& .MuiAutocomplete-tag': {\n                        background: value.deepPurple50,\n                        borderRadius: 4,\n                        color: theme.textDark,\n                        '.MuiChip-deleteIcon': {\n                            color: value.deepPurple200\n                        }\n                    }\n                },\n                popper: {\n                    borderRadius: theme.customization.borderRadius + 'px',\n                    boxShadow: '0px 8px 10px -5px rgb(0 0 0 / 20%), 0px 16px 24px 2px rgb(0 0 0 / 14%), 0px 6px 30px 5px rgb(0 0 0 / 12%)'\n                }\n            }\n        },\n        MuiDivider: {\n            styleOverrides: {\n                root: {\n                    borderColor: theme.divider,\n                    opacity: 1\n                }\n            }\n        },\n        MuiSelect: {\n            styleOverrides: {\n                select: {\n                    '&:focus': {\n                        backgroundColor: 'transparent'\n                    }\n                }\n            }\n        },\n        MuiCheckbox: {\n            styleOverrides: {\n                select: {\n                    fontSize: '28px'\n                }\n            },\n            MuiSvgIcon: {\n                styleOverrides: {\n                    select: {\n                        borderRadius: '6px',\n                        width: '1.2em',\n                        height: '1.2em'\n                    }\n                }\n            }\n        },\n        MuiAvatar: {\n            styleOverrides: {\n                root: {\n                    color: value.blue600,\n                    background: value.blue200\n                }\n            }\n        },\n        MuiChip: {\n            styleOverrides: {\n                root: {\n                    '&.MuiChip-deletable .MuiChip-deleteIcon': {\n                        color: 'inherit'\n                    }\n                }\n            }\n        },\n        MuiTimelineContent: {\n            styleOverrides: {\n                root: {\n                    color: theme.textDark,\n                    fontSize: '16px'\n                }\n            }\n        },\n        MuiTreeItem: {\n            styleOverrides: {\n                label: {\n                    marginTop: 8,\n                    marginBottom: 8\n                }\n            }\n        },\n        MuiTimelineDot: {\n            styleOverrides: {\n                root: {\n                    boxShadow: 'none'\n                }\n            }\n        },\n        MuiDateTimePickerTabs: {\n            styleOverrides: {\n                tabs: {\n                    backgroundColor: value.blue50,\n                    '& .MuiTabs-scroller': {\n                        '& .MuiTabs-flexContainer .MuiButtonBase-root.MuiTab-textColorPrimary': {\n                            color: theme.textDark,\n                            '&.Mui-selected': {\n                                color: value.blue600\n                            }\n                        },\n                        '& .MuiTabs-indicator': {\n                            backgroundColor: value.blue500\n                        }\n                    }\n                }\n            }\n        },\n        MuiClock: {\n            styleOverrides: {\n                root: {\n                    '& .MuiIconButton-root': {\n                        padding: '4px',\n                        bottom: '14px',\n                        '& .MuiIconButton-label .MuiTypography-root': {\n                            color: theme.textDark,\n                            fontSize: '0.625rem'\n                        },\n                        '&.MuiClock-meridiemButtonSelected': {\n                            backgroundColor: value.blue600,\n                            '& .MuiIconButton-label .MuiTypography-root': {\n                                color: theme.paper\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        MuiDialog: {\n            styleOverrides: {\n                paper: {\n                    padding: '12px 12px 12px 0'\n                }\n            }\n        }\n    };\n}\n","const config = {\n    // basename: only at build time to set, and don't add '/' at end off BASENAME for breadcrumbs,  like '/berry-material-react/react/default'\n    basename: '/',\n    defaultPath: '/pages/login/login3',\n    fontFamily: `'Roboto', sans-serif`,\n    borderRadius: 12,\n    theme: 'light',\n    i18n: 'en', // 'en' - English, 'fr' - French, 'ro' - Romanian, 'zh' - Chinese\n};\n\nexport default config;\n","import React from 'react';\nimport {Link} from '@material-ui/core';\nimport {Link as RouterLink} from 'react-router-dom';\n\nimport config from './../../../config';\n\n\nconst LogoSection = () => {\n\n    return (\n        <React.Fragment>\n            <Link component={RouterLink} to={\"/dashboard/default\"}>\n                {/* <img src={logo} alt=\"Berry\" width=\"50\" /> */}\n            </Link>\n        </React.Fragment>\n    );\n};\n\nexport default LogoSection;\n","import React, {useState} from 'react';\nimport {\n    Avatar,\n    Box,\n    ButtonBase,\n    Card,\n    CardContent,\n    Fade,\n    Grid,\n    Hidden,\n    InputAdornment,\n    makeStyles,\n    OutlinedInput,\n    Popper\n} from '@material-ui/core';\nimport PopupState, {bindPopper, bindToggle} from 'material-ui-popup-state';\n\nimport {IconAdjustmentsHorizontal, IconSearch, IconX} from '@tabler/icons';\n\nconst useStyles = makeStyles((theme) => ({\n    searchControl: {\n        width: '434px',\n        marginLeft: '16px',\n        paddingRight: '16px',\n        paddingLeft: '16px',\n        '& input': {\n            background: 'transparent !important',\n            paddingLeft: '5px !important'\n        },\n        [theme.breakpoints.down('lg')]: {\n            width: '250px'\n        },\n        [theme.breakpoints.down('md')]: {\n            width: '100%',\n            marginLeft: '4px',\n            background: '#fff'\n        }\n    },\n    startAdornment: {\n        fontSize: '1rem',\n        color: theme.palette.grey[500]\n    },\n    headerAvtar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.mediumAvatar,\n        background: theme.palette.purple.light,\n        color: theme.palette.purple.dark\n    },\n    colseAvtar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.mediumAvatar,\n        background: theme.palette.orange.light,\n        color: theme.palette.orange.dark\n    },\n    popperContainer: {\n        zIndex: 1100,\n        width: '99%',\n        top: '-55px !important',\n        padding: '0 12px',\n        [theme.breakpoints.down('sm')]: {\n            padding: '0 10px'\n        }\n    },\n    cardContent: {\n        padding: '12px !important'\n    },\n    card: {\n        background: '#fff',\n        [theme.breakpoints.down('sm')]: {\n            border: 0,\n            boxShadow: 'none'\n        }\n    }\n}));\n\nconst SearchSection = () => {\n    const classes = useStyles();\n    const [value, setValue] = useState('');\n\n    return (\n        <React.Fragment>\n            <Hidden mdUp>\n                <PopupState variant=\"popper\" popupId=\"demo-popup-popper\">\n                    {(popupState) => (\n                        <React.Fragment>\n                            <Box ml={2}>\n                                <ButtonBase sx={{borderRadius: '12px'}}>\n                                    <Avatar variant=\"rounded\" className={classes.headerAvtar} {...bindToggle(popupState)}>\n                                        <IconSearch stroke={1.5} size=\"1.2rem\" />\n                                    </Avatar>\n                                </ButtonBase>\n                            </Box>\n                            \n                        </React.Fragment>\n                    )}\n                </PopupState>\n            </Hidden>\n            {/* <Hidden mdDown>\n                <OutlinedInput\n                    className={classes.searchControl}\n                    id=\"input-search-header\"\n                    value={value}\n                    onChange={(e) => setValue(e.target.value)}\n                    placeholder=\"Search\"\n                    startAdornment={\n                        <InputAdornment position=\"start\">\n                            <IconSearch stroke={1.5} size=\"1rem\" className={classes.startAdornment} />\n                        </InputAdornment>\n                    }\n                    endAdornment={\n                        <InputAdornment position=\"end\">\n                            <ButtonBase sx={{borderRadius: '12px'}}>\n                                <Avatar variant=\"rounded\" className={classes.headerAvtar}>\n                                    <IconAdjustmentsHorizontal stroke={1.5} size=\"1.3rem\" />\n                                </Avatar>\n                            </ButtonBase>\n                        </InputAdornment>\n                    }\n                    aria-describedby=\"search-helper-text\"\n                    inputProps={{\n                        'aria-label': 'weight'\n                    }}\n                    labelWidth={0}\n                />\n            </Hidden> */}\n        </React.Fragment>\n    );\n};\n\nexport default SearchSection;\n","export const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const ACCOUNT_INITIALISE = 'ACCOUNT_INITIALISE';\nexport const FIREBASE_STATE_CHANGED = 'FIREBASE_STATE_CHANGED';\nexport const SET_MENU = 'SET_MENU';\n\n// Action for Combine Reducer\nexport const MENU_OPEN = '@customization/MENU_OPEN';\nexport const MENU_TYPE = '@customization/MENU_TYPE';\nexport const THEME_LOCALE = '@customization/THEME_LOCALE';\nexport const THEME_RTL = '@customization/THEME_RTL';\nexport const SET_FONT_FAMILY = '@customization/SET_FONT_FAMILY';\nexport const SET_BORDER_RADIUS = '@customization/SET_BORDER_RADIUS';\n\nexport const SNACKBAR_OPEN = '@snackbar/SNACKBAR_OPEN';\n","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {\n    Avatar,\n    Drawer,\n    Fab,\n    FormControl,\n    FormControlLabel,\n    Grid,\n    makeStyles,\n    Radio,\n    RadioGroup,\n    Slider,\n    Tooltip,\n    Typography,\n    useTheme\n} from '@material-ui/core';\n\nimport SettingsSuggestIcon from '@material-ui/icons/SettingsSuggest';\n\nimport SubCard from '../../../../ui-component/cards/SubCard';\nimport {gridSpacing} from '../../../../store/constant';\nimport * as actionTypes from '../../../../store/actions';\n\nfunction valuetext(value) {\n    return `${value}px`;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    menuIcon: {\n        fontSize: '1.1rem'\n    },\n    headerAvtar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        transition: 'all .2s ease-in-out',\n        background: theme.palette.primary.dark,\n        color: theme.palette.background.paper,\n        '&:hover': {\n            background: theme.palette.primary.main,\n            color: theme.palette.background.paper\n        }\n    },\n    box: {\n        marginLeft: '16px',\n        [theme.breakpoints.down('sm')]: {\n            marginLeft: '8px'\n        }\n    }\n}));\n\nconst Customization = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const customization = useSelector((state) => state.customization);\n    const dispatch = useDispatch();\n    const [open, setOpen] = React.useState(false);\n\n    const [borderRadius, setBorderRadius] = React.useState(customization.borderRadius);\n    const handleBorderRadius = (event, newValue) => {\n        setBorderRadius(newValue);\n    };\n\n    let initialFont;\n    switch (customization.fontFamily) {\n        case `'Inter', sans-serif`:\n            initialFont = 'Inter';\n            break;\n        case `'Poppins', sans-serif`:\n            initialFont = 'Poppins';\n            break;\n        case `'Roboto', sans-serif`:\n        default:\n            initialFont = 'Roboto';\n            break;\n    }\n\n    const [fontFamily, setFontFamily] = React.useState(initialFont);\n\n    const handleToggle = () => {\n        setOpen(!open);\n    };\n\n    if (customization.rtlLayout) {\n        document.querySelector('body').setAttribute('dir', 'rtl');\n    }\n\n    useEffect(() => {\n        dispatch({type: actionTypes.SET_BORDER_RADIUS, borderRadius: borderRadius});\n    }, [dispatch, borderRadius]);\n\n    useEffect(() => {\n        let newFont;\n        switch (fontFamily) {\n            case 'Inter':\n                newFont = `'Inter', sans-serif`;\n                break;\n            case 'Poppins':\n                newFont = `'Poppins', sans-serif`;\n                break;\n            case 'Roboto':\n            default:\n                newFont = `'Roboto', sans-serif`;\n                break;\n        }\n        dispatch({type: actionTypes.SET_FONT_FAMILY, fontFamily: newFont});\n    }, [dispatch, fontFamily]);\n\n    return (\n        <React.Fragment>\n            <Tooltip title=\"Live Customize\">\n                <Fab\n                    color=\"primary\"\n                    onClick={handleToggle}\n                    size=\"medium\"\n                    variant=\"string\"\n                    sx={{\n                        bottom: 0,\n                        margin: (theme) => theme.spacing(4),\n                        position: 'fixed',\n                        right: 20,\n                        zIndex: (theme) => theme.zIndex.speedDial,\n                        bgcolor: 'transparent',\n                        boxShadow: 'none',\n                        ':hover': {\n                            bgcolor: 'transparent',\n                            boxShadow: 'none'\n                        },\n                        [theme.breakpoints.down('sm')]: {\n                            display: 'none'\n                        }\n                    }}\n                >\n                    <Avatar\n                        variant=\"rounded\"\n                        className={classes.headerAvtar}\n                        onClick={handleToggle}\n                        sx={{boxShadow: '0 3px 10px 0 rgb(33 150 243)', ':hover': {boxShadow: '0 6px 15px 0 rgb(33 150 243)'}}}\n                    >\n                        <SettingsSuggestIcon />\n                    </Avatar>\n                </Fab>\n            </Tooltip>\n            <Drawer\n                anchor=\"right\"\n                onClose={handleToggle}\n                open={open}\n                PaperProps={{\n                    sx: {\n                        p: 3,\n                        width: 280\n                    }\n                }}\n            >\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12}>\n                        <SubCard title=\"Font Family\" darkTitle>\n                            <FormControl>\n                                <RadioGroup\n                                    aria-label=\"font-family\"\n                                    value={fontFamily}\n                                    onChange={(e) => setFontFamily(e.target.value)}\n                                    name=\"row-radio-buttons-group\"\n                                >\n                                    <FormControlLabel\n                                        value=\"Roboto\"\n                                        control={<Radio />}\n                                        label=\"Roboto\"\n                                        sx={{'& .MuiSvgIcon-root': {fontSize: 28}, '& .MuiFormControlLabel-label': {color: 'grey.900'}}}\n                                    />\n                                    <FormControlLabel\n                                        value=\"Poppins\"\n                                        control={<Radio />}\n                                        label=\"Poppins\"\n                                        sx={{'& .MuiSvgIcon-root': {fontSize: 28}, '& .MuiFormControlLabel-label': {color: 'grey.900'}}}\n                                    />\n                                    <FormControlLabel\n                                        value=\"Inter\"\n                                        control={<Radio />}\n                                        label=\"Inter\"\n                                        sx={{'& .MuiSvgIcon-root': {fontSize: 28}, '& .MuiFormControlLabel-label': {color: 'grey.900'}}}\n                                    />\n                                </RadioGroup>\n                            </FormControl>\n                        </SubCard>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <SubCard title=\"Border Radius\" darkTitle>\n                            <Grid item xs={12} container spacing={2} alignItems=\"center\" sx={{mt: 2.5}}>\n                                <Grid item>\n                                    <Typography variant=\"h6\" color=\"secondary\">\n                                        4px\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs>\n                                    <Slider\n                                        value={borderRadius}\n                                        onChange={handleBorderRadius}\n                                        getAriaValueText={valuetext}\n                                        valueLabelDisplay=\"on\"\n                                        aria-labelledby=\"discrete-slider-small-steps\"\n                                        marks\n                                        step={2}\n                                        min={4}\n                                        max={24}\n                                        color=\"secondary\"\n                                    />\n                                </Grid>\n                                <Grid item>\n                                    <Typography variant=\"h6\" color=\"secondary\">\n                                        24px\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </SubCard>\n                    </Grid>\n                </Grid>\n            </Drawer>\n        </React.Fragment>\n    );\n};\n\nexport default Customization;\n","import React from 'react';\nimport {\n    AppBar,\n    Box,\n    ButtonBase,\n    ClickAwayListener,\n    Grid,\n    Grow,\n    makeStyles,\n    Paper,\n    Popper,\n    Toolbar,\n    useMediaQuery,\n    useTheme\n} from '@material-ui/core';\n\nimport Customization from '../Customization';\n\nimport {IconDotsVertical} from '@tabler/icons';\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1\n    },\n    paperContainer: {\n        [theme.breakpoints.down('sm')]: {\n            background: '#fff'\n        }\n    },\n    popperContainer: {\n        width: '100%',\n        zIndex: 1,\n        [theme.breakpoints.down('sm')]: {\n            top: '20px !important'\n        }\n    },\n    menuIcon: {\n        fontSize: '1.5rem',\n        marginLeft: '4px',\n        cursor: 'pointer'\n    },\n    toolbar: {\n        paddingTop: '22px',\n        paddingBottom: '22px'\n    }\n}));\n\nconst MobileSection = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const matchMobile = useMediaQuery(theme.breakpoints.down('mobile'));\n\n    const [open, setOpen] = React.useState(false);\n    const anchorRef = React.useRef(null);\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    const handleClose = (event) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    const prevOpen = React.useRef(open);\n    React.useEffect(() => {\n        if (prevOpen.current === true && open === false) {\n            anchorRef.current.focus();\n        }\n\n        prevOpen.current = open;\n    }, [open]);\n\n    return (\n        <React.Fragment>\n            <Box component=\"span\" ref={anchorRef} mt={1} ml={1}>\n                <ButtonBase centerRipple>\n                    <IconDotsVertical\n                        stroke={1.5}\n                        aria-controls={open ? 'menu-list-grow' : undefined}\n                        aria-haspopup=\"true\"\n                        onClick={handleToggle}\n                        className={classes.menuIcon}\n                    />\n                </ButtonBase>\n            </Box>\n            <Popper\n                open={open}\n                placement=\"bottom-end\"\n                anchorEl={anchorRef.current}\n                role={undefined}\n                transition\n                disablePortal\n                className={classes.popperContainer}\n            >\n                {({TransitionProps, placement}) => (\n                    <Grow {...TransitionProps} in={open}>\n                        <Paper>\n                            <ClickAwayListener onClickAway={handleClose}>\n                                <div className={classes.grow}>\n                                    <AppBar color=\"inherit\" className={classes.paperContainer}>\n                                        <Toolbar className={classes.toolbar}>\n                                            <Grid container justifyContent={matchMobile ? 'space-between' : 'flex-end'} alignItems=\"center\">\n                                                <Customization />\n                                            </Grid>\n                                        </Toolbar>\n                                    </AppBar>\n                                </div>\n                            </ClickAwayListener>\n                        </Paper>\n                    </Grow>\n                )}\n            </Popper>\n        </React.Fragment>\n    );\n};\n\nexport default MobileSection;\n","import React from 'react';\nimport {Button, Card, CardContent, Grid, makeStyles, Typography} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        background: theme.palette.warning.light,\n        marginTop: '16px',\n        marginBottom: '16px',\n        overflow: 'hidden',\n        position: 'relative',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '200px',\n            height: '200px',\n            border: '19px solid ',\n            borderColor: theme.palette.warning.main,\n            borderRadius: '50%',\n            top: '65px',\n            right: '-150px'\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '200px',\n            height: '200px',\n            border: '3px solid ',\n            borderColor: theme.palette.warning.main,\n            borderRadius: '50%',\n            top: '145px',\n            right: '-70px'\n        }\n    },\n    tagLine: {\n        color: theme.palette.grey[900],\n        opacity: 0.6\n    },\n    button: {\n        color: theme.palette.grey[900],\n        backgroundColor: theme.palette.warning.dark,\n        textTransform: 'capitalize',\n        '&:hover': {\n            backgroundColor: theme.palette.warning.main\n        }\n    }\n}));\n\nconst UpgradePlanCard = () => {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.card} style={{display:'none'}}>\n            <CardContent>\n                <Grid container direction=\"column\" spacing={2}>\n                    <Grid item>\n                        <Typography variant=\"h4\">Upgrade to Pro</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"subtitle2\" className={classes.tagLine}>\n                            For more premium pages &#38; features<br />\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <Button variant=\"link\" href=\"https://berrydashboard.io\" target=\"_blank\" className={classes.button} disableElevation>\n                            Get Berry\n                        </Button>\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default UpgradePlanCard;\n","export default __webpack_public_path__ + \"static/media/user-round.13b5a31b.svg\";","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {useLocation} from 'react-router-dom';\nimport {useHistory} from 'react-router-dom';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport axios from 'axios';\nimport {\n    Avatar,\n    Card,\n    CardContent,\n    Chip,\n    ClickAwayListener,\n    Divider,\n    Fade,\n    Grid,\n    InputAdornment,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    makeStyles,\n    OutlinedInput,\n    Paper,\n    Popper,\n    Switch,\n    Typography,\n    useTheme\n} from '@material-ui/core';\n\nimport {IconLock, IconLogout, IconSearch, IconSettings} from '@tabler/icons';\n\nimport UpgradePlanCard from '../../../../ui-component/cards/UpgradePlanCard';\n\nimport User1 from './../../../../assets/images/users/user-round.svg';\n\nconst useStyles = makeStyles((theme) => ({\n    navContainer: {\n        width: '100%',\n        maxWidth: '350px',\n        minWidth: '300px',\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: '10px',\n        [theme.breakpoints.down('sm')]: {\n            minWidth: '100%'\n        }\n    },\n    headerAvtar: {\n        cursor: 'pointer',\n        ...theme.typography.mediumAvatar,\n        margin: '8px 0 8px 8px !important'\n    },\n    profileChip: {\n        height: '48px',\n        alignItems: 'center',\n        borderRadius: '27px',\n        transition: 'all .2s ease-in-out',\n        borderColor: theme.palette.primary.light,\n        backgroundColor: theme.palette.primary.light,\n        '&[aria-controls=\"menu-list-grow\"], &:hover': {\n            borderColor: theme.palette.primary.main,\n            background: theme.palette.primary.main + '!important',\n            color: theme.palette.primary.light,\n            '& svg': {\n                stroke: theme.palette.primary.light\n            }\n        }\n    },\n    profileLabel: {\n        lineHeight: 0,\n        padding: '12px'\n    },\n    listItem: {\n        marginTop: '5px'\n    },\n    cardContent: {\n        padding: '16px !important'\n    },\n    card: {\n        backgroundColor: theme.palette.primary.light,\n        marginBottom: '16px',\n        marginTop: '16px'\n    },\n    searchControl: {\n        width: '100%',\n        paddingRight: '8px',\n        paddingLeft: '16px',\n        marginBottom: '16px',\n        marginTop: '16px'\n    },\n    startAdornment: {\n        fontSize: '1rem',\n        color: theme.palette.grey[500]\n    },\n    flex: {\n        display: 'flex'\n    },\n    name: {\n        marginLeft: '2px',\n        fontWeight: 400\n    },\n    ScrollHeight: {\n        height: '100%',\n        maxHeight: 'calc(100vh - 250px)',\n        overflowX: 'hidden'\n    },\n    badgeyellow: {\n        backgroundColor: theme.palette.warning.dark,\n        color: '#fff'\n    }\n}));\n\nconst ProfileSection = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const history = useHistory();\n    const customization = useSelector((state) => state.customization);\n    const [sdm, setSdm] = React.useState(false);\n    const [value, setValue] = React.useState('');\n    const [notification, setNotification] = React.useState(false);\n    const [selectedIndex] = React.useState(1);\n    const BASE_URL = 'https://backend-test.alsahaba.sa';\n\n    const [open, setOpen] = React.useState(false);\n    const anchorRef = React.useRef(null);\n    const {state} = useLocation();\n    const handleLogout = async () => {\n        history.push('/');\n    };\n    //     await axios({\n    //         method: \"post\",\n    //         url: `${BASE_URL}/logout-all/`,\n    //         headers: { \"Authorization\": `Token ${state.state.logInToken}` },\n    //     })\n    //         .then(function (response) {\n    //             history.push(\"/\")\n    //         })\n    //         .catch(function (response) {\n    //             history.push(\"/\")\n    //         });\n    // }\n    // const handleLogout = async () => {\n    //     try {\n    //         //handleClose();\n    //         //await logout();\n    //     } catch (err) {\n    //         console.error(err);\n    //     }\n    // };\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n    const getEnabledConsultations = async () => {\n        try {\n            const response = await axios.get(`${BASE_URL}/enable-consultation/`);\n            if (response.data && response.data.length > 0) {\n                const lastObject = response.data[response.data.length - 1].is_enabled;\n                setSdm(lastObject);\n            } else {\n                console.error('Unexpected response data:', response.data);\n            }\n        } catch (error) {\n            console.error('Error fetching consultation price:', error);\n        }\n    };\n    const handleClose = (event) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\n            return;\n        }\n\n        setOpen(false);\n    };\n    const prevOpen = React.useRef(open);\n    React.useEffect(() => {\n        if (prevOpen.current === true && open === false) {\n            anchorRef.current.focus();\n        }\n\n        prevOpen.current = open;\n    }, [open]);\n    const handleUpdateEnableConsultations = async (event) => {\n        event.preventDefault(); // Prevents the form from submitting and triggering a page reload\n        try {\n            console.log(sdm);\n            // Assuming you want to send the consultationCosts as the 'amount' field in the POST request\n            await axios.put(`${BASE_URL}/update-enable-consultation/1/`, {is_enabled: !sdm});\n            setSdm(!sdm);\n        } catch (error) {\n            console.error('Error updating amount:', error);\n        }\n    };\n\n    React.useEffect(() => {\n        getEnabledConsultations();\n    }, []);\n    return (\n        <React.Fragment>\n            <Chip\n                classes={{label: classes.profileLabel}}\n                className={classes.profileChip}\n                icon={\n                    <Avatar\n                        src={User1}\n                        className={classes.headerAvtar}\n                        ref={anchorRef}\n                        aria-controls={open ? 'menu-list-grow' : undefined}\n                        aria-haspopup=\"true\"\n                        color=\"inherit\"\n                    />\n                }\n                label={<IconSettings stroke={1.5} size=\"1.5rem\" color={theme.palette.primary.main} />}\n                variant=\"outlined\"\n                ref={anchorRef}\n                aria-controls={open ? 'menu-list-grow' : undefined}\n                aria-haspopup=\"true\"\n                onClick={handleToggle}\n                color=\"primary\"\n            />\n            <Popper\n                placement=\"bottom-end\"\n                open={open}\n                anchorEl={anchorRef.current}\n                role={undefined}\n                transition\n                disablePortal\n                popperOptions={{\n                    modifiers: [\n                        {\n                            name: 'offset',\n                            options: {\n                                offset: [0, 14]\n                            }\n                        }\n                    ]\n                }}\n            >\n                {({TransitionProps, placement}) => (\n                    <Fade {...TransitionProps}>\n                        <Paper>\n                            <ClickAwayListener onClickAway={handleClose}>\n                                <Card elevation={16}>\n                                    <CardContent className={classes.cardContent}>\n                                        <Grid container direction=\"column\" spacing={0}>\n                                            <Grid item className={classes.flex}>\n                                                <Typography variant=\"h4\">Good Morning,</Typography>\n                                                <Typography component=\"span\" variant=\"h4\" className={classes.name}>\n                                                    Admin\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"subtitle2\">WebApp Admin</Typography>\n                                            </Grid>\n                                        </Grid>\n                                        {/* <OutlinedInput\n                                            className={classes.searchControl}\n                                            id=\"input-search-profile\"\n                                            value={value}\n                                            onChange={(e) => setValue(e.target.value)}\n                                            placeholder=\"Search profile options\"\n                                            startAdornment={\n                                                <InputAdornment position=\"start\">\n                                                    <IconSearch stroke={1.5} size=\"1.3rem\" className={classes.startAdornment} />\n                                                </InputAdornment>\n                                            }\n                                            aria-describedby=\"search-helper-text\"\n                                            inputProps={{\n                                                'aria-label': 'weight'\n                                            }}\n                                            labelWidth={0}\n                                        /> */}\n                                        <Divider />\n                                        <PerfectScrollbar className={classes.ScrollHeight}>\n                                            <UpgradePlanCard />\n                                            <Divider />\n                                            <Card className={classes.card}>\n                                                <CardContent>\n                                                    <Grid container spacing={3} direction=\"column\">\n                                                        <Grid item>\n                                                            <Grid item container alignItems=\"center\" justifyContent=\"space-between\">\n                                                                <Grid item>\n                                                                    <Typography variant=\"subtitle1\">Enable consultations</Typography>\n                                                                </Grid>\n                                                                <Grid item>\n                                                                    <Switch\n                                                                        color=\"primary\"\n                                                                        checked={sdm}\n                                                                        onChange={handleUpdateEnableConsultations}\n                                                                        name=\"sdm\"\n                                                                        size=\"small\"\n                                                                    />\n                                                                </Grid>\n                                                            </Grid>\n                                                        </Grid>\n                                                    </Grid>\n                                                </CardContent>\n                                            </Card>\n                                            <Divider />\n                                            <List component=\"nav\" className={classes.navContainer}>\n                                                <ListItem\n                                                    className={classes.listItem}\n                                                    sx={{borderRadius: customization.borderRadius + 'px'}}\n                                                    button\n                                                    selected={selectedIndex === 4}\n                                                    onClick={handleLogout}\n                                                >\n                                                    <ListItemIcon>\n                                                        <IconLogout stroke={1.5} size=\"1.3rem\" />\n                                                    </ListItemIcon>\n                                                    <ListItemText primary={<Typography variant=\"body2\">Logout</Typography>} />\n                                                </ListItem>\n                                            </List>\n                                        </PerfectScrollbar>\n                                    </CardContent>\n                                </Card>\n                            </ClickAwayListener>\n                        </Paper>\n                    </Fade>\n                )}\n            </Popper>\n        </React.Fragment>\n    );\n};\n\nexport default ProfileSection;\n","import React from 'react';\n\nimport {\n    Avatar,\n    Box,\n    Button,\n    ButtonBase,\n    Card,\n    CardActions,\n    CardContent,\n    Chip,\n    ClickAwayListener,\n    Divider,\n    Fade,\n    Grid,\n    Link,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText,\n    makeStyles,\n    Paper,\n    Popper,\n    Stack,\n    TextField,\n    Typography,\n    useMediaQuery,\n    useTheme\n} from '@material-ui/core';\n\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\nimport {IconBell, IconBrandTelegram, IconBuildingStore, IconMailbox, IconPhoto} from '@tabler/icons';\nimport User1 from './../../../../assets/images/users/user-round.svg';\n\nconst useStyles = makeStyles((theme) => ({\n    navContainer: {\n        width: '100%',\n        maxWidth: '330px',\n        paddingTop: 0,\n        paddingBottom: 0,\n        borderRadius: '10px',\n        [theme.breakpoints.down('sm')]: {\n            maxWidth: '300px'\n            //maxWidth: '100%'\n        }\n    },\n    listAction: {\n        top: '22px'\n    },\n    actionColor: {\n        color: theme.palette.grey[500]\n    },\n    ScrollHeight: {\n        height: '100%',\n        maxHeight: 'calc(100vh - 205px)',\n        overflowX: 'hidden'\n    },\n    listItem: {\n        padding: 0\n    },\n    sendIcon: {\n        marginLeft: '8px',\n        marginTop: '-3px'\n    },\n    headerAvtar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.mediumAvatar,\n        transition: 'all .2s ease-in-out',\n        background: theme.palette.purple.light,\n        color: theme.palette.purple.dark,\n        '&[aria-controls=\"menu-list-grow\"],&:hover': {\n            background: theme.palette.purple.main,\n            color: theme.palette.purple.light\n        }\n    },\n    cardContent: {\n        padding: '0px !important'\n    },\n    notificationChip: {\n        color: '#fff',\n        backgroundColor: theme.palette.warning.dark\n    },\n    divider: {\n        marginTop: 0,\n        marginBottom: 0\n    },\n    listDivider: {\n        marginTop: 0,\n        marginBottom: 0\n    },\n    listChipError: {\n        color: theme.palette.orange.dark,\n        backgroundColor: theme.palette.orange.light,\n        height: '24px',\n        padding: '0 6px',\n        marginRight: '5px'\n    },\n    listChipWarning: {\n        color: theme.palette.warning.dark,\n        backgroundColor: theme.palette.warning.light,\n        height: '24px',\n        padding: '0 6px'\n    },\n    listChipSuccess: {\n        color: theme.palette.success.dark,\n        backgroundColor: theme.palette.success.light,\n        height: '24px',\n        padding: '0 6px'\n    },\n    listAvatarSuccess: {\n        color: theme.palette.success.dark,\n        backgroundColor: theme.palette.success.light,\n        border: 'none',\n        borderColor: theme.palette.success.main\n    },\n    listAvatarPrimary: {\n        color: theme.palette.primary.dark,\n        backgroundColor: theme.palette.primary.light,\n        border: 'none',\n        borderColor: theme.palette.primary.main\n    },\n    listContainer: {\n        paddingLeft: '56px'\n    },\n    uploadCard: {\n        backgroundColor: theme.palette.purple.light\n    },\n    cardAction: {\n        padding: '10px',\n        justifyContent: 'center'\n    },\n    paddingBottom: {\n        paddingBottom: '16px'\n    },\n    box: {\n        marginLeft: '16px',\n        marginRight: '24px',\n        [theme.breakpoints.down('sm')]: {\n            marginRight: '16px'\n        }\n    },\n    bodyspacing: {\n        padding: '16px 16px 0'\n    },\n    textboxspacing: {\n        padding: '0px 16px'\n    },\n    itemaction: {\n        cursor: 'pointer',\n        padding: '16px',\n        '&:hover': {\n            background: theme.palette.primary.light\n        }\n    }\n    // notificationpoper: {\n    //     [theme.breakpoints.down('sm')]: {\n    //         maxWidth: '100% ',\n    //         //transform: 'none !important',\n    //         top: '100% !important',\n    //         left: '0px',\n    //         right: '0px'\n    //     }\n    // }\n}));\n\nconst status = [\n    {\n        value: 'all',\n        label: 'All Notification'\n    },\n    {\n        value: 'new',\n        label: 'New'\n    },\n    {\n        value: 'unread',\n        label: 'Unread'\n    },\n    {\n        value: 'other',\n        label: 'Other'\n    }\n];\n\nconst NotificationSection = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const matchesXs = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const [open, setOpen] = React.useState(false);\n    const [value, setValue] = React.useState('');\n    const anchorRef = React.useRef(null);\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    const handleClose = (event) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\n            return;\n        }\n        setOpen(false);\n    };\n\n    const prevOpen = React.useRef(open);\n    React.useEffect(() => {\n        if (prevOpen.current === true && open === false) {\n            anchorRef.current.focus();\n        }\n        prevOpen.current = open;\n    }, [open]);\n\n    const handleChange = (event) => {\n        setValue(event.target.value);\n    };\n\n    return (\n        <React.Fragment>\n            {/* <Box component=\"span\" className={classes.box}>\n                <ButtonBase sx={{borderRadius: '12px'}}>\n                    <Avatar\n                        variant=\"rounded\"\n                        className={classes.headerAvtar}\n                        ref={anchorRef}\n                        aria-controls={open ? 'menu-list-grow' : undefined}\n                        aria-haspopup=\"true\"\n                        onClick={handleToggle}\n                        color=\"inherit\"\n                    >\n                        <IconBell stroke={1.5} size=\"1.3rem\" />\n                    </Avatar>\n                </ButtonBase>\n            </Box> */}\n            <Popper\n                placement={matchesXs ? 'bottom' : 'bottom-end'}\n                open={open}\n                anchorEl={anchorRef.current}\n                role={undefined}\n                transition\n                disablePortal\n                className={classes.notificationpoper}\n                popperOptions={{\n                    modifiers: [\n                        {\n                            name: 'offset',\n                            options: {\n                                offset: [matchesXs ? 5 : 0, 20]\n                            }\n                        }\n                    ]\n                }}\n            >\n                {({TransitionProps, placement}) => (\n                    <Fade {...TransitionProps}>\n                        <Paper>\n                            <ClickAwayListener onClickAway={handleClose}>\n                                <Card elevation={16}>\n                                    <CardContent className={classes.cardContent}>\n                                        <Grid container direction=\"column\" spacing={2}>\n                                            <Grid item xs={12}>\n                                                <div className={classes.bodyspacing}>\n                                                    <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                        <Grid item>\n                                                            <Stack direction=\"row\" spacing={2}>\n                                                                <Typography variant=\"subtitle1\">All Notification</Typography>\n                                                                <Chip size=\"small\" label=\"01\" className={classes.notificationChip} />\n                                                            </Stack>\n                                                        </Grid>\n                                                        <Grid item>\n                                                            <Link href=\"#\">\n                                                                <Typography variant=\"subtitle2\" color=\"primary\">\n                                                                    Mark as all read\n                                                                </Typography>\n                                                            </Link>\n                                                        </Grid>\n                                                    </Grid>\n                                                </div>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <PerfectScrollbar className={classes.ScrollHeight}>\n                                                    <Grid container direction=\"column\" spacing={2}>\n                                                        <Grid item xs={12}>\n                                                            <div className={classes.textboxspacing}>\n                                                                <TextField\n                                                                    id=\"outlined-select-currency-native\"\n                                                                    select\n                                                                    fullWidth\n                                                                    value={value}\n                                                                    onChange={handleChange}\n                                                                    SelectProps={{\n                                                                        native: true\n                                                                    }}\n                                                                    variant=\"outlined\"\n                                                                >\n                                                                    {status.map((option) => (\n                                                                        <option key={option.value} value={option.value}>\n                                                                            {option.label}\n                                                                        </option>\n                                                                    ))}\n                                                                </TextField>\n                                                            </div>\n                                                        </Grid>\n                                                        <Grid item xs={12} p={0}>\n                                                            <Divider className={classes.divider} />\n                                                        </Grid>\n                                                        <Grid item xs={12}>\n                                                            <List className={classes.navContainer}>\n                                                                <div className={classes.itemaction}>\n                                                                    <ListItem alignItems=\"center\" className={classes.listItem}>\n                                                                        <ListItemAvatar>\n                                                                            <Avatar alt=\"John Doe\" src={User1} />\n                                                                        </ListItemAvatar>\n                                                                        <ListItemText\n                                                                            primary={\n                                                                                <Typography variant=\"subtitle1\">Admin</Typography>\n                                                                            }\n                                                                        />\n                                                                        <ListItemSecondaryAction className={classes.listAction}>\n                                                                            <Grid container justifyContent=\"flex-end\">\n                                                                                <Grid item xs={12}>\n                                                                                    <Typography\n                                                                                        variant=\"caption\"\n                                                                                        display=\"block\"\n                                                                                        gutterBottom\n                                                                                        className={classes.actionColor}\n                                                                                    >\n                                                                                        2 min ago\n                                                                                    </Typography>\n                                                                                </Grid>\n                                                                            </Grid>\n                                                                        </ListItemSecondaryAction>\n                                                                    </ListItem>\n                                                                    <Grid container direction=\"column\" className={classes.listContainer}>\n                                                                        <Grid item xs={12} className={classes.paddingBottom}>\n                                                                            <Typography variant=\"subtitle2\">\n                                                                                It is a long established fact that a reader will be\n                                                                                distracted\n                                                                            </Typography>\n                                                                        </Grid>\n                                                                        <Grid item xs={12}>\n                                                                            <Grid container>\n                                                                                <Grid item>\n                                                                                    <Chip\n                                                                                        label=\"Unread\"\n                                                                                        className={classes.listChipError}\n                                                                                    />\n                                                                                </Grid>\n                                                                                <Grid item>\n                                                                                    <Chip label=\"New\" className={classes.listChipWarning} />\n                                                                                </Grid>\n                                                                            </Grid>\n                                                                        </Grid>\n                                                                    </Grid>\n                                                                </div>\n                                                                <Divider className={classes.listDivider} />\n                                                                <div className={classes.itemaction}>\n                                                                    <ListItem alignItems=\"center\" className={classes.listItem}>\n                                                                        <ListItemAvatar>\n                                                                            <Avatar className={classes.listAvatarSuccess}>\n                                                                                <IconBuildingStore stroke={1.5} size=\"1.3rem\" />\n                                                                            </Avatar>\n                                                                        </ListItemAvatar>\n                                                                        <ListItemText\n                                                                            primary={\n                                                                                <Typography variant=\"subtitle1\">\n                                                                                    Store Verification Done\n                                                                                </Typography>\n                                                                            }\n                                                                        />\n                                                                        <ListItemSecondaryAction className={classes.listAction}>\n                                                                            <Grid container justifyContent=\"flex-end\">\n                                                                                <Grid item xs={12}>\n                                                                                    <Typography\n                                                                                        variant=\"caption\"\n                                                                                        display=\"block\"\n                                                                                        gutterBottom\n                                                                                        className={classes.actionColor}\n                                                                                    >\n                                                                                        2 min ago\n                                                                                    </Typography>\n                                                                                </Grid>\n                                                                            </Grid>\n                                                                        </ListItemSecondaryAction>\n                                                                    </ListItem>\n                                                                    <Grid container direction=\"column\" className={classes.listContainer}>\n                                                                        <Grid item xs={12} className={classes.paddingBottom}>\n                                                                            <Typography variant=\"subtitle2\">\n                                                                                We have sucessfully recieved your request.\n                                                                            </Typography>\n                                                                        </Grid>\n                                                                        <Grid item xs={12}>\n                                                                            <Grid container>\n                                                                                <Grid item>\n                                                                                    <Chip\n                                                                                        label=\"Unread\"\n                                                                                        className={classes.listChipError}\n                                                                                    />\n                                                                                </Grid>\n                                                                            </Grid>\n                                                                        </Grid>\n                                                                    </Grid>\n                                                                </div>\n                                                                <Divider className={classes.listDivider} />\n                                                                <div className={classes.itemaction}>\n                                                                    <ListItem alignItems=\"center\" className={classes.listItem}>\n                                                                        <ListItemAvatar>\n                                                                            <Avatar className={classes.listAvatarPrimary}>\n                                                                                <IconMailbox stroke={1.5} size=\"1.3rem\" />\n                                                                            </Avatar>\n                                                                        </ListItemAvatar>\n                                                                        <ListItemText\n                                                                            primary={\n                                                                                <Typography variant=\"subtitle1\">\n                                                                                    Check Your Mail.\n                                                                                </Typography>\n                                                                            }\n                                                                        />\n                                                                        <ListItemSecondaryAction className={classes.listAction}>\n                                                                            <Grid container justifyContent=\"flex-end\">\n                                                                                <Grid item>\n                                                                                    <Typography\n                                                                                        variant=\"caption\"\n                                                                                        display=\"block\"\n                                                                                        gutterBottom\n                                                                                        className={classes.actionColor}\n                                                                                    >\n                                                                                        2 min ago\n                                                                                    </Typography>\n                                                                                </Grid>\n                                                                            </Grid>\n                                                                        </ListItemSecondaryAction>\n                                                                    </ListItem>\n                                                                    <Grid container direction=\"column\" className={classes.listContainer}>\n                                                                        <Grid item xs={12} className={classes.paddingBottom}>\n                                                                            <Typography variant=\"subtitle2\">\n                                                                                All done! Now check your inbox as you're in for a sweet\n                                                                                treat!\n                                                                            </Typography>\n                                                                        </Grid>\n                                                                        <Grid item xs={12}>\n                                                                            <Grid container>\n                                                                                <Grid item>\n                                                                                    <Button\n                                                                                        variant=\"contained\"\n                                                                                        color=\"primary\"\n                                                                                        disableElevation\n                                                                                    >\n                                                                                        Mail\n                                                                                        <IconBrandTelegram\n                                                                                            stroke={1.5}\n                                                                                            size=\"1.3rem\"\n                                                                                            className={classes.sendIcon}\n                                                                                        />\n                                                                                    </Button>\n                                                                                </Grid>\n                                                                            </Grid>\n                                                                        </Grid>\n                                                                    </Grid>\n                                                                </div>\n                                                                <Divider className={classes.listDivider} />\n                                                                <div className={classes.itemaction}>\n                                                                    <ListItem alignItems=\"center\" className={classes.listItem}>\n                                                                        <ListItemAvatar>\n                                                                            <Avatar alt=\"Jone Doe\" src={User1} />\n                                                                        </ListItemAvatar>\n                                                                        <ListItemText\n                                                                            primary={<Typography variant=\"subtitle1\">Jone Doe</Typography>}\n                                                                        />\n                                                                        <ListItemSecondaryAction className={classes.listAction}>\n                                                                            <Grid container justifyContent=\"flex-end\">\n                                                                                <Grid item xs={12}>\n                                                                                    <Typography\n                                                                                        variant=\"caption\"\n                                                                                        display=\"block\"\n                                                                                        gutterBottom\n                                                                                        className={classes.actionColor}\n                                                                                    >\n                                                                                        2 min ago\n                                                                                    </Typography>\n                                                                                </Grid>\n                                                                            </Grid>\n                                                                        </ListItemSecondaryAction>\n                                                                    </ListItem>\n                                                                    <Grid container direction=\"column\" className={classes.listContainer}>\n                                                                        <Grid item xs={12} className={classes.paddingBottom}>\n                                                                            <Typography component=\"span\" variant=\"subtitle2\">\n                                                                                Uploaded two file on &nbsp;\n                                                                                <Typography component=\"span\" variant=\"h6\">\n                                                                                    21 Jan 2020\n                                                                                </Typography>\n                                                                            </Typography>\n                                                                        </Grid>\n                                                                        <Grid item xs={12}>\n                                                                            <Grid container>\n                                                                                <Grid item xs={12}>\n                                                                                    <Card className={classes.uploadCard}>\n                                                                                        <CardContent>\n                                                                                            <Grid container direction=\"column\">\n                                                                                                <Grid item xs={12}>\n                                                                                                    <Stack direction=\"row\" spacing={2}>\n                                                                                                        <IconPhoto\n                                                                                                            stroke={1.5}\n                                                                                                            size=\"1.3rem\"\n                                                                                                        />\n                                                                                                        <Typography variant=\"subtitle1\">\n                                                                                                            demo.jpg\n                                                                                                        </Typography>\n                                                                                                    </Stack>\n                                                                                                </Grid>\n                                                                                            </Grid>\n                                                                                        </CardContent>\n                                                                                    </Card>\n                                                                                </Grid>\n                                                                            </Grid>\n                                                                        </Grid>\n                                                                    </Grid>\n                                                                </div>\n                                                                <Divider className={classes.listDivider} />\n                                                                <div className={classes.itemaction}>\n                                                                    <ListItem alignItems=\"center\" className={classes.listItem}>\n                                                                        <ListItemAvatar>\n                                                                            <Avatar alt=\"Jone Doe\" src={User1} />\n                                                                        </ListItemAvatar>\n                                                                        <ListItemText\n                                                                            primary={<Typography variant=\"subtitle1\">Jone Doe</Typography>}\n                                                                        />\n                                                                        <ListItemSecondaryAction className={classes.listAction}>\n                                                                            <Grid container justifyContent=\"flex-end\">\n                                                                                <Grid item xs={12}>\n                                                                                    <Typography\n                                                                                        variant=\"caption\"\n                                                                                        display=\"block\"\n                                                                                        gutterBottom\n                                                                                        className={classes.actionColor}\n                                                                                    >\n                                                                                        2 min ago\n                                                                                    </Typography>\n                                                                                </Grid>\n                                                                            </Grid>\n                                                                        </ListItemSecondaryAction>\n                                                                    </ListItem>\n                                                                    <Grid container direction=\"column\" className={classes.listContainer}>\n                                                                        <Grid item xs={12} className={classes.paddingBottom}>\n                                                                            <Typography variant=\"subtitle2\">\n                                                                                It is a long established fact that a reader will be\n                                                                                distracted\n                                                                            </Typography>\n                                                                        </Grid>\n                                                                        <Grid item xs={12}>\n                                                                            <Grid container>\n                                                                                <Grid item>\n                                                                                    <Chip\n                                                                                        label=\"Confirmation of Account.\"\n                                                                                        className={classes.listChipSuccess}\n                                                                                    />\n                                                                                </Grid>\n                                                                            </Grid>\n                                                                        </Grid>\n                                                                    </Grid>\n                                                                </div>\n                                                            </List>\n                                                        </Grid>\n                                                    </Grid>\n                                                </PerfectScrollbar>\n                                            </Grid>\n                                        </Grid>\n                                    </CardContent>\n                                    <Divider />\n                                    <CardActions className={classes.cardAction}>\n                                        <Button size=\"small\" color=\"primary\" disableElevation>\n                                            View All\n                                        </Button>\n                                    </CardActions>\n                                </Card>\n                            </ClickAwayListener>\n                        </Paper>\n                    </Fade>\n                )}\n            </Popper>\n        </React.Fragment>\n    );\n};\n\nexport default NotificationSection;\n","import React from 'react';\nimport {Avatar, ButtonBase, Hidden, makeStyles} from '@material-ui/core';\n\nimport {IconMenu2} from '@tabler/icons';\n\nimport LogoSection from '../LogoSection';\nimport SearchSection from './SearchSection';\n\nimport Customization from './Customization';\n\nimport MobileSection from './MobileSection';\n\nimport ProfileSection from './ProfileSection';\nimport NotificationSection from './NotificationSection';\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1\n    },\n    headerAvtar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.mediumAvatar,\n        transition: 'all .2s ease-in-out',\n        background: theme.palette.primary.light,\n        color: theme.palette.purple.dark,\n        '&:hover': {\n            background: theme.palette.purple.main,\n            color: theme.palette.purple.light\n        }\n    },\n    boxContainer: {\n        width: '228px',\n        display: 'flex',\n        [theme.breakpoints.down('md')]: {\n            width: 'auto'\n        }\n    }\n}));\n\nconst Header = (props) => {\n    const {handleLeftDrawerToggle} = props;\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <div className={classes.boxContainer}>\n                <Hidden mdDown>\n                    <LogoSection />\n                    <div className={classes.grow} />\n                </Hidden>\n                <ButtonBase sx={{borderRadius: '12px'}}>\n                    <Avatar variant=\"rounded\" className={classes.headerAvtar} onClick={handleLeftDrawerToggle}>\n                        <IconMenu2 stroke={1.5} size=\"1.3rem\" />\n                    </Avatar>\n                </ButtonBase>\n            </div>\n            <SearchSection theme=\"light\" />\n            <div className={classes.grow} />\n            <div className={classes.grow} />\n            <Hidden smDown>\n                <Customization />\n            </Hidden>\n\n            <NotificationSection />\n            <ProfileSection />\n            {/* <Hidden smUp>\n                <MobileSection />\n            </Hidden> */}\n        </React.Fragment>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {useMediaQuery, Avatar, Chip, ListItem, ListItemIcon, ListItemText, Typography} from '@material-ui/core';\n\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\n\nimport * as actionTypes from '../../../../../store/actions';\n\nconst useStyles = makeStyles((theme) => ({\n    listIcon: {\n        minWidth: '18px',\n        marginTop: 'auto',\n        marginBottom: 'auto'\n    },\n    listCustomIconSub: {\n        width: '6px',\n        height: '6px'\n    },\n    listCustomIconSubActive: {\n        width: '8px',\n        height: '8px'\n    },\n    listItem: {\n        marginBottom: '5px',\n        alignItems: 'center'\n    },\n    listItemNoBack: {\n        marginBottom: '5px',\n        backgroundColor: 'transparent !important',\n        paddingTop: '8px',\n        paddingBottom: '8px',\n        alignItems: 'flex-start'\n    },\n    subMenuCaption: {\n        ...theme.typography.subMenuCaption\n    }\n}));\n\nconst NavItem = (props) => {\n    const classes = useStyles();\n    const matchesSM = useMediaQuery((theme) => theme.breakpoints.down('md'));\n    const customization = useSelector((state) => state.customization);\n    const dispatch = useDispatch();\n    const {item, level} = props;\n\n    const Icon = item.icon;\n    const itemIcon = item.icon ? (\n        <Icon stroke={1.5} size=\"1.3rem\" className={classes.listCustomIcon} />\n    ) : (\n        <FiberManualRecordIcon\n            className={customization.isOpen === item.id ? classes.listCustomIconSubActive : classes.listCustomIconSub}\n            fontSize={level > 0 ? 'inherit' : 'default'}\n        />\n    );\n\n    let itemIconClass = !item.icon ? classes.listIcon : classes.menuIcon;\n\n    let itemTarget = '';\n    if (item.target) {\n        itemTarget = '_blank';\n    }\n\n    let listItemProps = {component: Link, to: item.url};\n    if (item.external) {\n        listItemProps = {component: 'a', href: item.url};\n    }\n\n    const itemHandler = (id) => {\n        dispatch({type: actionTypes.MENU_OPEN, isOpen: id});\n        matchesSM && dispatch({type: actionTypes.SET_MENU, opened: false});\n    };\n\n    return (\n        <ListItem\n            disabled={item.disabled}\n            className={level > 1 ? classes.listItemNoBack : classes.listItem}\n            sx={{borderRadius: customization.borderRadius + 'px'}}\n            selected={customization.isOpen === item.id}\n            onClick={() => itemHandler(item.id)}\n            button\n            target={itemTarget}\n            style={{paddingLeft: level * 23 + 'px'}}\n            {...listItemProps}\n        >\n            <ListItemIcon className={itemIconClass}>{itemIcon}</ListItemIcon>\n            <ListItemText\n                primary={\n                    <Typography variant={customization.isOpen === item.id ? 'h5' : 'body1'} color=\"inherit\">\n                        {item.title}\n                    </Typography>\n                }\n                secondary={\n                    item.caption && (\n                        <Typography variant=\"caption\" className={classes.subMenuCaption} display=\"block\" gutterBottom>\n                            {item.caption}\n                        </Typography>\n                    )\n                }\n            />\n            {item.chip && (\n                <Chip\n                    color={item.chip.color}\n                    variant={item.chip.variant}\n                    size={item.chip.size}\n                    label={item.chip.label}\n                    avatar={item.chip.avatar && <Avatar>{item.chip.avatar}</Avatar>}\n                />\n            )}\n        </ListItem>\n    );\n};\n\nexport default NavItem;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {Collapse, List, ListItem, ListItemIcon, ListItemText, makeStyles, Typography} from '@material-ui/core';\n\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\n\nimport {IconChevronDown, IconChevronUp} from '@tabler/icons';\n\nimport NavItem from './../NavItem';\n\nconst useStyles = makeStyles((theme) => ({\n    collapseIcon: {\n        fontSize: '1rem',\n        marginTop: 'auto',\n        marginBottom: 'auto'\n    },\n    collapseIconSub: {\n        fontSize: '1rem',\n        marginTop: 'auto',\n        marginBottom: 'auto'\n    },\n    menuIcon: {\n        marginTop: 'auto',\n        marginBottom: 'auto'\n    },\n    listIcon: {\n        minWidth: '18px',\n        marginTop: 'auto',\n        marginBottom: 'auto'\n    },\n    listCustomIconSub: {\n        width: '6px',\n        height: '6px'\n    },\n    listCustomIconSubActive: {\n        width: '8px',\n        height: '8px'\n    },\n    listItem: {\n        marginBottom: '5px',\n        alignItems: 'flex-start'\n    },\n    listItemNoBack: {\n        marginBottom: '5px',\n        backgroundColor: 'transparent !important',\n        paddingTop: '8px',\n        paddingBottom: '8px',\n        alignItems: 'flex-start'\n    },\n    subMenuCaption: {\n        ...theme.typography.subMenuCaption\n    },\n    collapseWrapper: {\n        position: 'relative',\n        '&:after': {\n            content: \"''\",\n            position: 'absolute',\n            left: '32px',\n            top: 0,\n            height: '100%',\n            width: '1px',\n            opacity:  1,\n            background: theme.palette.primary.light\n        }\n    }\n}));\n\nconst NavCollapse = (props) => {\n    const classes = useStyles();\n    const customization = useSelector((state) => state.customization);\n    const {menu, level} = props;\n    const [open, setOpen] = React.useState(false);\n    const [selected, setSelected] = React.useState(null);\n\n    const handleClick = () => {\n        setOpen(!open);\n        setSelected(!selected ? menu.id : null);\n    };\n\n    const menus = menu.children.map((item) => {\n        switch (item.type) {\n            case 'collapse':\n                return <NavCollapse key={item.id} menu={item} level={level + 1} />;\n            case 'item':\n                return <NavItem key={item.id} item={item} level={level + 1} />;\n            default:\n                return (\n                    <Typography key={item.id} variant=\"h6\" color=\"error\" align=\"center\">\n                        Menu Items Error\n                    </Typography>\n                );\n        }\n    });\n\n    const Icon = menu.icon;\n    const menuIcon = menu.icon ? (\n        <Icon stroke={1.5} size=\"1.3rem\" className={classes.listCustomIcon} />\n    ) : (\n        <FiberManualRecordIcon\n            className={selected === menu.id ? classes.listCustomIconSubActive : classes.listCustomIconSub}\n            fontSize={level > 0 ? 'inherit' : 'default'}\n        />\n    );\n\n    let menuIconClass = !menu.icon ? classes.listIcon : classes.menuIcon;\n\n    return (\n        <React.Fragment>\n            <ListItem\n                className={level > 1 ? classes.listItemNoBack : classes.listItem}\n                sx={{borderRadius: customization.borderRadius + 'px'}}\n                selected={selected === menu.id}\n                button\n                onClick={handleClick}\n                style={{paddingLeft: level * 23 + 'px'}}\n            >\n                <ListItemIcon className={menuIconClass}>{menuIcon}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant={selected === menu.id ? 'h5' : 'body1'} color=\"inherit\" className={classes.listItemTypography}>\n                            {menu.title}\n                        </Typography>\n                    }\n                    secondary={\n                        menu.caption && (\n                            <Typography variant=\"caption\" className={classes.subMenuCaption} display=\"block\" gutterBottom>\n                                {menu.caption}\n                            </Typography>\n                        )\n                    }\n                />\n                {open ? (\n                    <IconChevronUp stroke={1.5} size=\"1rem\" className={level > 1 ? classes.collapseIconSub : classes.collapseIcon} />\n                ) : (\n                    <IconChevronDown stroke={1.5} size=\"1rem\" className={level > 1 ? classes.collapseIconSub : classes.collapseIcon} />\n                )}\n            </ListItem>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding className={classes.collapseWrapper}>\n                    {menus}\n                </List>\n            </Collapse>\n        </React.Fragment>\n    );\n};\n\nexport default NavCollapse;\n","import React from 'react';\n\nimport {Divider, List, makeStyles, Typography} from '@material-ui/core';\n\nimport NavItem from './../NavItem';\nimport NavCollapse from './../NavCollapse';\n\nconst useStyles = makeStyles((theme) => ({\n    menuCaption: {\n        ...theme.typography.menuCaption\n    },\n    subMenuCaption: {\n        ...theme.typography.subMenuCaption\n    },\n    menuDivider: {\n        marginTop: '2px',\n        marginBottom: '10px'\n    }\n}));\n\nconst NavGroup = (props) => {\n    const {item} = props;\n    const classes = useStyles();\n\n    const items = item.children.map((menu) => {\n        switch (menu.type) {\n            case 'collapse':\n                return <NavCollapse key={menu.id} menu={menu} level={1} />;\n            case 'item':\n                return <NavItem key={menu.id} item={menu} level={1} />;\n            default:\n                return (\n                    <Typography key={menu.id} variant=\"h6\" color=\"error\" align=\"center\">\n                        Menu Items Error\n                    </Typography>\n                );\n        }\n    });\n\n    return (\n        <React.Fragment>\n            <List\n                subheader={\n                    item.title && (\n                        <Typography variant=\"caption\" className={classes.menuCaption} display=\"block\" gutterBottom>\n                            {item.title}\n                            {item.caption && (\n                                <Typography variant=\"caption\" className={classes.subMenuCaption} display=\"block\" gutterBottom>\n                                    {item.caption}\n                                </Typography>\n                            )}\n                        </Typography>\n                    )\n                }\n            >\n                {items}\n            </List>\n            <Divider className={classes.menuDivider} />\n        </React.Fragment>\n    );\n};\n\nexport default NavGroup;\n","import React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {\n    IconAtom,\n    IconBasket,\n    IconBellRinging,\n    IconBorderAll,\n    IconBorderRadius,\n    IconBoxMultiple,\n    IconBrandChrome,\n    IconBrandGravatar,\n    IconBrush,\n    IconBug,\n    IconCalendar,\n    IconChartArcs,\n    IconChartCandle,\n    IconChartInfographic,\n    IconCircle,\n    IconCircleOff,\n    IconClipboardList,\n    IconDashboard,\n    IconDeviceAnalytics,\n    IconFiles,\n    IconForms,\n    IconHelp,\n    IconId,\n    IconKey,\n    IconLayoutList,\n    IconLoader,\n    IconLockAccess,\n    IconMail,\n    IconMenu,\n    IconMessages,\n    IconNfc,\n    IconPalette,\n    IconPencil,\n    IconPhoneCall,\n    IconPictureInPicture,\n    IconReceipt2,\n    IconRun,\n    IconShadow,\n    IconShape,\n    IconShieldLock,\n    IconSitemap,\n    IconTools,\n    IconTypography,\n    IconUser,\n    IconUserCheck\n} from '@tabler/icons';\n\nconst icons = {\n    IconDashboard: IconDashboard,\n    IconDeviceAnalytics,\n\n    IconChartArcs: IconChartArcs,\n    IconClipboardList: IconClipboardList,\n    IconChartInfographic: IconChartInfographic,\n\n    IconForms: IconForms,\n    IconReceipt2: IconReceipt2,\n    IconPencil: IconPencil,\n    IconPalette: IconPalette,\n    IconShadow: IconShadow,\n    IconPhoneCall: IconPhoneCall,\n    IconBrandChrome: IconBrandChrome,\n    IconFiles: IconFiles,\n    IconAtom: IconAtom,\n    IconTools: IconTools,\n    IconBrush: IconBrush,\n    IconLockAccess: IconLockAccess,\n    IconShieldLock: IconShieldLock,\n    IconKey: IconKey,\n    IconTypography: IconTypography,\n    IconMenu: IconMenu,\n    IconBoxMultiple: IconBoxMultiple,\n    IconCircleOff: IconCircleOff,\n    IconCircle: IconCircle,\n    IconBorderRadius: IconBorderRadius,\n    IconBrandGravatar: IconBrandGravatar,\n    IconShape: IconShape,\n    IconUserCheck: IconUserCheck,\n    IconId: IconId,\n    IconLayoutList: IconLayoutList,\n    IconBug: IconBug,\n    IconLoader: IconLoader,\n    IconRun: IconRun,\n    IconUser: IconUser,\n    IconHelp: IconHelp,\n    IconSitemap: IconSitemap,\n    IconPictureInPicture: IconPictureInPicture,\n    IconMail: IconMail,\n    IconMessages: IconMessages,\n    IconNfc: IconNfc,\n    IconCalendar: IconCalendar,\n    IconBellRinging: IconBellRinging,\n    IconBorderAll: IconBorderAll,\n    IconChartCandle: IconChartCandle,\n    IconBasket: IconBasket\n};\n\nconst menuItems = {\n    items: [\n        {\n            id: 'dashboard',\n            title: <FormattedMessage id=\"dashboard\" />,\n            type: 'group',\n            children: [\n                {\n                    id: 'dash-default',\n                    title: <FormattedMessage id=\"Medical Cloud Company Dashboard\" />,\n                    type: 'item',\n                    url: '/dashboard/default',\n                    icon: icons['IconDashboard'],\n                    breadcrumbs: false\n                }\n            ]\n        }\n    ]\n};\n\nexport default menuItems;\n","import React from 'react';\nimport {Typography} from '@material-ui/core';\n\nimport NavGroup from './NavGroup';\nimport menuItem from './../../../../menu-items/main-menu-items';\n\nconst MenuList = () => {\n    const navItems = menuItem.items.map((item) => {\n        switch (item.type) {\n            case 'group':\n                return <NavGroup key={item.id} item={item} />;\n            default:\n                return (\n                    <Typography key={item.id} variant=\"h6\" color=\"error\" align=\"center\">\n                        Menu Items Error\n                    </Typography>\n                );\n        }\n    });\n\n    return navItems;\n};\n\nexport default MenuList;\n","import React from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {Drawer, Hidden, makeStyles, useMediaQuery, useTheme} from '@material-ui/core';\n\nimport MenuList from './MenuList';\n\nimport LogoSection from '../LogoSection';\n\nimport {drawerWidth} from './../../../store/constant';\nimport UpgradePlanCard from '../../../ui-component/cards/UpgradePlanCard';\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        [theme.breakpoints.up('md')]: {\n            width: drawerWidth,\n            flexShrink: 0\n        }\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        background: theme.palette.background.default,\n        color: theme.palette.text.primary,\n        borderRight: 'none',\n        [theme.breakpoints.up('md')]: {\n            top: '88px'\n        }\n    },\n    ScrollHeight: {\n        height: 'calc(100vh - 88px)',\n        paddingLeft: '16px',\n        paddingRight: '16px',\n        [theme.breakpoints.down('sm')]: {\n            height: 'calc(100vh - 56px)'\n        }\n    },\n    boxContainer: {\n        display: 'flex',\n        padding: '16px',\n        marginLeft: 'auto',\n        marginRight: 'auto'\n    }\n}));\n\nconst Sidebar = (props) => {\n    const {drawerOpen, drawerToggle, window} = props;\n    const classes = useStyles();\n    const theme = useTheme();\n    const matchUpMd = useMediaQuery(theme.breakpoints.up('md'));\n\n    const drawer = (\n        <React.Fragment>\n            <Hidden mdUp>\n                <div className={classes.boxContainer}>\n                    <LogoSection />\n                </div>\n            </Hidden>\n            <PerfectScrollbar className={classes.ScrollHeight}>\n                <MenuList />\n                <UpgradePlanCard/>\n            </PerfectScrollbar>\n        </React.Fragment>\n    );\n\n    const container = window !== undefined ? () => window().document.body : undefined;\n\n    return (\n        <nav className={classes.drawer} aria-label=\"mailbox folders\">\n            <Drawer\n                container={container}\n                variant={matchUpMd ? 'persistent' : 'temporary'}\n                anchor=\"left\"\n                open={drawerOpen}\n                onClose={drawerToggle}\n                classes={{\n                    paper: classes.drawerPaper\n                }}\n                ModalProps={{keepMounted: true}}\n                color=\"inherit\"\n            >\n                {drawer}\n            </Drawer>\n        </nav>\n    );\n};\n\nexport default Sidebar;\n","import React, {useEffect, useState} from 'react';\nimport {Card, CardContent, Divider, Grid, Link, makeStyles, Typography} from '@material-ui/core';\nimport {Link as RouterLink} from 'react-router-dom';\nimport MuiBreadcrumbs from '@material-ui/core/Breadcrumbs';\n\nimport AccountTreeTwoToneIcon from '@material-ui/icons/AccountTreeTwoTone';\nimport HomeTwoToneIcon from '@material-ui/icons/HomeTwoTone';\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport {gridSpacing} from '../../../store/constant';\n\nimport config from '../../../config';\n\nconst useStyles = makeStyles((theme) => ({\n    link: {\n        display: 'flex',\n        color: theme.palette.grey[900],\n        textDecoration: 'none',\n        alignContent: 'center',\n        alignItems: 'center'\n    },\n    activeLink: {\n        display: 'flex',\n        textDecoration: 'none',\n        alignContent: 'center',\n        alignItems: 'center',\n        color: theme.palette.grey[500]\n    },\n    icon: {\n        marginRight: theme.spacing(0.75),\n        marginTop: '-' + theme.spacing(0.25),\n        width: '1rem',\n        height: '1rem',\n        color: theme.palette.purple.main\n    },\n    content: {\n        padding: '16px !important'\n    },\n    noPadding: {\n        padding: '16px !important',\n        paddingLeft: '0 !important'\n    },\n    card: {\n        marginBottom: theme.spacing(gridSpacing)\n    },\n    root: {\n        background: 'transparent',\n        boxShadow: 'none',\n        border: 'none'\n    },\n    titleTop: {\n        marginBottom: theme.spacing(1)\n    },\n    titleBottom: {\n        marginTop: theme.spacing(1)\n    },\n    divider: {\n        borderColor: theme.palette.primary.main,\n        marginBottom: theme.spacing(gridSpacing)\n    }\n}));\n\nconst Breadcrumbs = (props) => {\n    const classes = useStyles();\n    const {separator, title, titleBottom, icons, icon, maxItems, card, divider, rightAlign, ...rest} = props;\n\n    const [main, setMain] = useState([]);\n    const [item, setItem] = useState([]);\n\n    useEffect(() => {\n        props.navigation.items.map((item, index) => {\n            if (item.type && item.type === 'group') {\n                getCollapse(item, index);\n            }\n            return false;\n        });\n    });\n\n    const getCollapse = (item) => {\n        if (item.children) {\n            item.children.filter((collapse) => {\n                if (collapse.type && collapse.type === 'collapse') {\n                    getCollapse(collapse);\n                } else if (collapse.type && collapse.type === 'item') {\n                    if (document.location.pathname === config.basename + collapse.url) {\n                        setMain(item);\n                        setItem(collapse);\n                    }\n                }\n                return false;\n            });\n        }\n    };\n\n    const SeparatorIcon = separator;\n    const separatorIcon = separator ? <SeparatorIcon stroke={1.5} size=\"1rem\" /> : '/';\n\n    let cardClass = classes.card;\n    if (card === false) {\n        cardClass = classes.root;\n    }\n\n    let contentClass = classes.content;\n    if (card === false) {\n        contentClass = classes.noPadding;\n    }\n\n    let mainContent, itemContent;\n    let breadcrumbContent = '';\n    let itemTitle = '';\n    let CollapseIcon;\n    let ItemIcon;\n\n    if (main && main.type === 'collapse') {\n        CollapseIcon = main.icon ? main.icon : AccountTreeTwoToneIcon;\n        mainContent = (\n            <Link component={RouterLink} to=\"#\" variant=\"subtitle1\" className={classes.link}>\n                {icons && <CollapseIcon className={classes.icon} />}\n                {main.title}\n            </Link>\n        );\n    }\n\n    if (item && item.type === 'item') {\n        itemTitle = item.title;\n\n        ItemIcon = item.icon ? item.icon : AccountTreeTwoToneIcon;\n        itemContent = (\n            <Typography variant=\"subtitle1\" className={classes.activeLink}>\n                {icons && <ItemIcon className={classes.icon} />}\n                {itemTitle}\n            </Typography>\n        );\n\n        if (item.breadcrumbs !== false) {\n            breadcrumbContent = (\n                <Card className={cardClass} {...rest}>\n                    <CardContent className={contentClass}>\n                        <Grid\n                            container\n                            direction={rightAlign ? 'row' : 'column'}\n                            justifyContent={rightAlign ? 'space-between' : 'flex-start'}\n                            alignItems={rightAlign ? 'center' : 'flex-start'}\n                            spacing={1}\n                        >\n                            {title && !titleBottom && (\n                                <Grid item>\n                                    <Typography variant=\"h3\"> {item.title} </Typography>\n                                </Grid>\n                            )}\n                            <Grid item>\n                                <MuiBreadcrumbs aria-label=\"breadcrumb\" maxItems={maxItems ? maxItems : 8} separator={separatorIcon}>\n                                    <Link component={RouterLink} to=\"/\" color=\"inherit\" variant=\"subtitle1\" className={classes.link}>\n                                        {icons && <HomeTwoToneIcon className={classes.icon} />}\n                                        {icon && <HomeIcon className={classes.icon} style={{marginRight: 0}} />}\n                                        {!icon && 'Dashboard'}\n                                    </Link>\n                                    {mainContent}\n                                    {itemContent}\n                                </MuiBreadcrumbs>\n                            </Grid>\n                            {title && titleBottom && (\n                                <Grid item>\n                                    <Typography variant=\"h3\"> {item.title} </Typography>\n                                </Grid>\n                            )}\n                        </Grid>\n                    </CardContent>\n                    {card === false && divider !== false && <Divider className={classes.divider} />}\n                </Card>\n            );\n        }\n\n        // document.title = itemTitle + config.title;\n    }\n\n    return breadcrumbContent;\n};\n\nexport default Breadcrumbs;\n","import React from 'react';\nimport clsx from 'clsx';\nimport {AppBar, CssBaseline, makeStyles, Toolbar, useMediaQuery, useTheme} from '@material-ui/core';\n\nimport {drawerWidth} from '../../store/constant';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\n\nimport Breadcrumb from './../../ui-component/extended/Breadcrumb';\nimport navigation from './../../menu-items/main-menu-items';\n\nimport {IconChevronRight} from '@tabler/icons';\nimport {useDispatch, useSelector} from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex'\n    },\n    appBar: {\n        backgroundColor: theme.palette.background.default\n    },\n    appBarWidth: {\n        transition: theme.transitions.create('width'),\n        backgroundColor: theme.palette.background.default\n    },\n    content: {\n        ...theme.typography.mainContent,\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        [theme.breakpoints.up('md')]: {\n            marginLeft: -(drawerWidth - 20),\n            width: `calc(100% - ${drawerWidth}px)`\n        },\n        [theme.breakpoints.down('md')]: {\n            marginLeft: '20px',\n            width: `calc(100% - ${drawerWidth}px)`,\n            padding: '16px'\n        },\n        [theme.breakpoints.down('sm')]: {\n            marginLeft: '10px',\n            width: `calc(100% - ${drawerWidth}px)`,\n            padding: '16px',\n            marginRight: '10px'\n        }\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen\n        }),\n        marginLeft: 0,\n        [theme.breakpoints.down('md')]: {\n            marginLeft: '20px'\n        },\n        [theme.breakpoints.down('sm')]: {\n            marginLeft: '10px'\n        }\n    }\n}));\n\nconst MainLayout = ({children, showBreadcrumb = true}) => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const matchUpMd = useMediaQuery(theme.breakpoints.up('md'));\n\n    // Handle left drawer\n    const leftDrawerOpened = useSelector((state) => state.customization.opened);\n    const dispatch = useDispatch();\n    const handleLeftDrawerToggle = () => {\n        dispatch({type: 'SET_MENU', opened: !leftDrawerOpened});\n    };\n\n    React.useEffect(() => {\n        const openLeftDrawerState = (val) => {\n            dispatch({type: 'SET_MENU', opened: val});\n        };\n        openLeftDrawerState(matchUpMd);\n    }, [dispatch, matchUpMd]);\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar position=\"fixed\" color=\"inherit\" elevation={0} className={leftDrawerOpened ? classes.appBarWidth : classes.appBar}>\n                <Toolbar>\n                    <Header handleLeftDrawerToggle={handleLeftDrawerToggle} />\n                </Toolbar>\n            </AppBar>\n            <Sidebar drawerOpen={leftDrawerOpened} drawerToggle={handleLeftDrawerToggle} />\n            <main\n                className={clsx([\n                    classes.content,\n                    {\n                        [classes.contentShift]: leftDrawerOpened\n                    }\n                ])}\n            >\n                {showBreadcrumb && <Breadcrumb separator={IconChevronRight} navigation={navigation} icon title rightAlign />}\n                <div>{children}</div>\n            </main>\n        </div>\n    );\n};\n\nexport default MainLayout;\n","import React, {lazy} from 'react';\nimport {Route, Switch, useLocation} from 'react-router-dom';\n\nimport MainLayout from './../layout/MainLayout';\n\nconst DashboardDefault = lazy(() => import('../views/dashboard/Default'));\n\nconst TableBasic = lazy(() => import('../views/forms/tables/TableBasic'));\nconst TableDense = lazy(() => import('../views/forms/tables/TableDense'));\n\nconst Consultations = lazy(() => import('../views/pages/Consultations'));\nconst Payments = lazy(() => import('../views/pages/Payments'));\nconst Doctors = lazy(() => import('../views/pages/Doctors'));\nconst Patients = lazy(() => import('../views/pages/Patients'));\n\nconst UtilsTypography = lazy(() => import('../views/utilities/typography'));\nconst UtilsColor = lazy(() => import('../views/utilities/color'));\nconst UtilsShadow = lazy(() => import('../views/utilities/shadow'));\nconst UtilsMaterialIcons = lazy(() => import('../views/utilities/icons/MaterialIcons'));\nconst UtilsTablerIcons = lazy(() => import('../views/utilities/icons/TablerIcons'));\n\nconst SamplePage = lazy(() => import('../views/sample-page'));\n\nconst MainRoutes = () => {\n    const location = useLocation();\n\n    return (\n        <Route\n            path={[\n                '/dashboard/default',\n\n                '/tables/tbl-basic',\n                '/tables/tbl-dense',\n\n                '/consultations',\n                '/doctors',\n                '/patients',\n                '/payments',\n\n                '/utils/util-typography',\n                '/utils/util-color',\n                '/utils/util-shadow',\n                '/icons/tabler-icons',\n                '/icons/material-icons',\n\n                '/sample-page'\n            ]}\n        >\n            <MainLayout showBreadcrumb={true}>\n                <Switch location={location} key={location.pathname}>\n                    <Route path=\"/dashboard/default\" component={DashboardDefault} />\n\n                    <Route path=\"/tables/tbl-basic\" component={TableBasic} />\n                    <Route path=\"/tables/tbl-dense\" component={TableDense} />\n\n                    <Route path=\"/consultations\" component={Consultations} />\n                    <Route path=\"/payments\" component={Payments} />\n                    <Route path=\"/doctors\" component={Doctors} />\n                    <Route path=\"/patients\" component={Patients} />\n\n                    <Route path=\"/utils/util-typography\" component={UtilsTypography} />\n                    <Route path=\"/utils/util-color\" component={UtilsColor} />\n                    <Route path=\"/utils/util-shadow\" component={UtilsShadow} />\n                    <Route path=\"/icons/tabler-icons\" component={UtilsTablerIcons} />\n                    <Route path=\"/icons/material-icons\" component={UtilsMaterialIcons} />\n\n                    <Route path=\"/sample-page\" component={SamplePage} />\n                </Switch>\n            </MainLayout>\n        </Route>\n    );\n};\n\nexport default MainRoutes;\n","const MinimalLayout = (props) => {\n    return props.children;\n};\n\nexport default MinimalLayout;\n","import React from 'react';\nimport {motion} from 'framer-motion';\n\nconst NavMotion = ({children}) => {\n    const motionVariants = {\n        initial: {\n            opacity: 0,\n            scale: 0.99\n        },\n        in: {\n            opacity: 1,\n            scale: 1\n        },\n        out: {\n            opacity: 0,\n            scale: 1.01\n        }\n    };\n\n    const motionTransition = {\n        type: 'tween',\n        ease: 'anticipate',\n        duration: 0.4\n    };\n\n    return (\n        <motion.div initial=\"initial\" animate=\"in\" exit=\"out\" variants={motionVariants} transition={motionTransition}>\n            {children}\n        </motion.div>\n    );\n};\n\nexport default NavMotion;\n","import React, {lazy} from 'react';\nimport {Route, Switch, useLocation} from 'react-router-dom';\nimport MinimalLayout from '../layout/MinimalLayout';\nimport NavMotion from '../layout/NavMotion';\n\n\nconst AuthLogin = lazy(() => import('../views/pages/authentication/login'));\n\nconst LoginRoutes = () => {\n    const location = useLocation();\n\n    return (\n        <Route path={['/login']}>\n            <MinimalLayout>\n                <Switch location={location} key={location.pathname}>\n                    <NavMotion>\n\n                            <Route path=\"/login\" component={AuthLogin} />\n\n                    </NavMotion>\n                </Switch>\n            </MinimalLayout>\n        </Route>\n    );\n};\n\nexport default LoginRoutes;\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2)\n        }\n    }\n}));\n\nconst Loader = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <LinearProgress color=\"primary\" />\n        </div>\n    );\n};\n\nexport default Loader;\n","import React, {lazy} from 'react';\nimport {Route, Switch, useLocation} from 'react-router-dom';\nimport MinimalLayout from './../layout/MinimalLayout';\n\n// login option 3\nconst AuthLogin3 = lazy(() => import('../views/pages/authentication/authentication3/Login3'));\nconst AuthRegister3 = lazy(() => import('../views/pages/authentication/authentication3/Register3'));\n\n\nconst AuthenticationRoutes = () => {\n    const location = useLocation();\n\n    return (\n        <Route\n            path={[\n                '/pages/login/login3',\n                '/pages/register/register3'\n            ]}\n        >\n            <MinimalLayout>\n                <Switch location={location} key={location.pathname}>\n\n                    <Route path=\"/pages/login/login3\" component={AuthLogin3} />\n                    <Route path=\"/pages/register/register3\" component={AuthRegister3} />\n\n                </Switch>\n            </MinimalLayout>\n        </Route>\n    );\n};\n\nexport default AuthenticationRoutes;\n","import React, {Suspense} from 'react';\nimport {Redirect, Switch} from 'react-router-dom';\nimport {AnimatePresence} from 'framer-motion';\n\nimport config from './../config';\nimport MainRoutes from './MainRoutes';\nimport LoginRoutes from './LoginRoutes';\n\nimport Loader from '../ui-component/extended/Loader/Loader';\n\nimport AuthenticationRoutes from './AuthenticationRoutes';\n\nconst Routes = () => {\n    return (\n        <AnimatePresence>\n            <Suspense fallback={<Loader />}>\n                <Switch>\n                    <Redirect exact from=\"/\" to={config.defaultPath} />\n                    <>\n                        {/* Routes for authetication pages */}\n                        <AuthenticationRoutes />\n\n                        {/* Route for login */}\n                        <LoginRoutes />\n\n                        {/* Routes for main layouts */}\n                        <MainRoutes />\n                    </>\n                </Switch>\n            </Suspense>\n        </AnimatePresence>\n    );\n};\n\nexport default Routes;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {Alert, Button, Fade, Grow, IconButton, Slide} from '@material-ui/core';\nimport MuiSnackbar from '@material-ui/core/Snackbar';\n\nimport CloseIcon from '@material-ui/icons/Close';\n\nfunction TransitionSlideLeft(props) {\n    return <Slide {...props} direction=\"left\" />;\n}\n\nfunction TransitionSlideUp(props) {\n    return <Slide {...props} direction=\"up\" />;\n}\n\nfunction TransitionSlideRight(props) {\n    return <Slide {...props} direction=\"right\" />;\n}\n\nfunction TransitionSlideDown(props) {\n    return <Slide {...props} direction=\"down\" />;\n}\n\nfunction GrowTransition(props) {\n    return <Grow {...props} />;\n}\n\nconst transition = {\n    SlideLeft: TransitionSlideLeft,\n    SlideUp: TransitionSlideUp,\n    SlideRight: TransitionSlideRight,\n    SlideDown: TransitionSlideDown,\n    Grow: GrowTransition,\n    Fade: Fade\n};\n\nconst Snackbar = (props) => {\n    const [open, setOpen] = React.useState(false);\n    const snackbarInitial = useSelector((state) => state.snackbar);\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n    };\n\n    React.useEffect(() => {\n        setOpen(snackbarInitial.open);\n    }, [snackbarInitial.action, snackbarInitial.open]);\n\n    return (\n        <React.Fragment>\n            {snackbarInitial.variant === 'default' && (\n                <MuiSnackbar\n                    anchorOrigin={snackbarInitial.anchorOrigin}\n                    open={open}\n                    autoHideDuration={6000}\n                    onClose={handleClose}\n                    message={snackbarInitial.message}\n                    TransitionComponent={transition[snackbarInitial.transition]}\n                    action={\n                        <React.Fragment>\n                            <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\n                                UNDO\n                            </Button>\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                />\n            )}\n            {snackbarInitial.variant === 'alert' && (\n                <MuiSnackbar\n                    TransitionComponent={transition[snackbarInitial.transition]}\n                    anchorOrigin={snackbarInitial.anchorOrigin}\n                    open={open}\n                    autoHideDuration={6000}\n                    onClose={handleClose}\n                >\n                    <Alert\n                        variant=\"filled\"\n                        severity={snackbarInitial.alertSeverity}\n                        sx={{\n                            bgcolor: snackbarInitial.alertSeverity + '.dark',\n                            color: snackbarInitial.alertSeverity === 'warning' ? 'grey.900' : ''\n                        }}\n                        action={\n                            <React.Fragment>\n                                {snackbarInitial.actionButton !== false && (\n                                    <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\n                                        UNDO\n                                    </Button>\n                                )}\n                                {snackbarInitial.close !== false && (\n                                    <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n                                        <CloseIcon fontSize=\"small\" />\n                                    </IconButton>\n                                )}\n                            </React.Fragment>\n                        }\n                    >\n                        {snackbarInitial.message}\n                    </Alert>\n                </MuiSnackbar>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default Snackbar;\n","import {useEffect} from 'react';\nimport {withRouter} from 'react-router-dom';\n\nconst NavigationScroll = ({children, location: {pathname}}) => {\n    useEffect(() => {\n        window.scrollTo({\n            top: 0,\n            left: 0,\n            behavior: 'smooth'\n        });\n    }, [pathname]);\n\n    return children || null;\n};\n\nexport default withRouter(NavigationScroll);\n","import React, {useEffect, useState} from 'react';\nimport {useSelector} from 'react-redux';\nimport {IntlProvider} from 'react-intl';\nimport {jssPreset, StylesProvider, ThemeProvider} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport StyledEngineProvider from '@material-ui/core/StyledEngineProvider';\n\n\nimport theme from './themes';\nimport Routes from './routes';\nimport Snackbar from './ui-component/extended/Snackbar';\nimport NavigationScroll from './layout/NavigationScroll';\n\nimport rtlPlugin from 'stylis-plugin-rtl';\nimport {CacheProvider} from '@emotion/react';\nimport createCache from '@emotion/cache';\n\nimport {create} from 'jss';\nimport rtl from 'jss-rtl';\n\nconst jss = create({\n    plugins: [...jssPreset().plugins, rtl()]\n});\n\nconst cacheRtl = createCache({\n    key: 'muirtl',\n    stylisPlugins: [rtlPlugin]\n});\n\nconst loadLocaleData = (locale) => {\n    switch (locale) {\n        default:\n            return import('./utils/locals/en.json');\n    }\n};\n\nconst App = () => {\n    const customization = useSelector((state) => state.customization);\n    const [messages, setMessages] = useState();\n\n    useEffect(() => {\n        loadLocaleData(customization.locale).then((d) => {\n            setMessages(d.default);\n        });\n    }, [customization]);\n\n    if (customization.rtlLayout) {\n        document.querySelector('body').setAttribute('dir', 'rtl');\n    }\n\n    return (\n        <React.Fragment>\n            <StylesProvider jss={jss}>\n                <CacheProvider value={cacheRtl}>\n                    {messages && (\n                        <IntlProvider locale={customization.locale} defaultLocale=\"en\" messages={messages}>\n                            <StyledEngineProvider injectFirst>\n                                <NavigationScroll>\n                                    <ThemeProvider theme={theme(customization)}>\n                                        <CssBaseline />\n                                            <Routes />\n                                            <Snackbar />\n                                    </ThemeProvider>\n                                </NavigationScroll>\n                            </StyledEngineProvider>\n                        </IntlProvider>\n                    )}\n                </CacheProvider>\n            </StylesProvider>\n        </React.Fragment>\n    );\n};\n\nexport default App;\n","import * as actionTypes from './actions';\nimport config from '../config';\n\nexport const initialState = {\n    isOpen: 'dashboard', //for active default menu\n    fontFamily: config.fontFamily,\n    borderRadius: config.borderRadius,\n    navType: config.theme,\n    locale: config.i18n,\n    rtlLayout: false, // rtlLayout: config.rtlLayout,\n    opened: true\n};\n\nconst customizationReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.MENU_OPEN:\n            return {\n                ...state,\n                isOpen: action.isOpen\n            };\n        case actionTypes.MENU_TYPE:\n            return {\n                ...state,\n                navType: action.navType\n            };\n        case actionTypes.THEME_LOCALE:\n            return {\n                ...state,\n                locale: action.locale\n            };\n        case actionTypes.THEME_RTL:\n            return {\n                ...state,\n                rtlLayout: action.rtlLayout\n            };\n        case actionTypes.SET_MENU:\n            return {\n                ...state,\n                opened: action.opened\n            };\n        case actionTypes.SET_FONT_FAMILY:\n            return {\n                ...state,\n                fontFamily: action.fontFamily\n            };\n        case actionTypes.SET_BORDER_RADIUS:\n            return {\n                ...state,\n                borderRadius: action.borderRadius\n            };\n        default:\n            return state;\n    }\n};\n\nexport default customizationReducer;\n","import * as actionTypes from './actions';\n\nconst initialState = {\n    action: false,\n    open: false,\n    message: 'Note archived',\n    anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n    },\n    variant: 'default',\n    alertSeverity: 'success',\n    transition: 'Fade',\n    close: true,\n    actionButton: false\n};\n\nconst snackbarReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SNACKBAR_OPEN:\n            return {\n                ...state,\n                action: !state.action,\n                open: action.open ? action.open : initialState.open,\n                message: action.message ? action.message : initialState.message,\n                anchorOrigin: action.anchorOrigin ? action.anchorOrigin : initialState.anchorOrigin,\n                variant: action.variant ? action.variant : initialState.variant,\n                alertSeverity: action.alertSeverity ? action.alertSeverity : initialState.alertSeverity,\n                transition: action.transition ? action.transition : initialState.transition,\n                close: action.close === false ? action.close : initialState.close,\n                actionButton: action.actionButton ? action.actionButton : initialState.actionButton\n            };\n        default:\n            return state;\n    }\n};\n\nexport default snackbarReducer;\n","import {combineReducers} from 'redux';\nimport customizationReducer from './customizationReducer';\nimport snackbarReducer from './snackbarReducer';\n\nconst reducer = combineReducers({\n    customization: customizationReducer,\n    snackbar: snackbarReducer\n});\n\nexport default reducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\n\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\n\nimport App from './App';\nimport reducer from './store/reducer';\nimport config from './config';\nimport './assets/scss/style.scss';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter basename={config.basename}>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const gridSpacing = 3;\nexport const drawerWidth = 260;\n"],"sourceRoot":""}