{"version":3,"sources":["views/pages/ShowConsultationCallID.js","views/pages/ShowSelectedPayment.js","views/pages/Payments.js"],"names":["ShowConsultationCallID","props","BASE_URL","_useState","useState","_useState2","_slicedToArray","consultations","setConsultations","_useState3","_useState4","calls","setCalls","_useState5","_useState6","users","setUsers","fetchConsultations","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","get","concat","then","response","data","stop","apply","arguments","fetchCalls","_ref2","_callee2","_context2","fetchUsers","_ref3","_callee3","_context3","formatDate","date","_formattedDate$split","Date","toLocaleDateString","day","month","year","hour","minute","split","_formattedDate$split2","capitalizedMonth","toUpperCase","useEffect","_jsx","_Fragment","children","Modal","open","showModal","onClose","handleCloseConsultation","aria-labelledby","aria-describedby","Grid","container","spacing","gridSpacing","item","xs","Card","className","_jsxs","CardContent","style","top","overflowY","height","Button","id","onClick","sm","payment_status","filter","consultation","map","filteredConsultation","index","matchingPatient","find","user","patient_id","matchingDoctor","doctor_id","SubCard","title","full_name","iqama_number","chief_complaint","history_of_illness","review_of_systems","examination","assessment","medication","sick_leave","created_at","call","payment_id","filteredCall","ShowSelectedPayment","_props$payment","_React$useState","React","_React$useState2","showConsultation","setShowConsultation","_React$useState3","_React$useState4","openModal","setOpenModal","selectedConsultation","setSelectedConsultation","showSelectedConsultation","call_id","Container","payment","CardHeader","Divider","handleClose","order_id","direction","MuiTypography","variant","gutterBottom","creation_time","message","status","total_authorized_amount","total_captured_amount","payment_info","payment_mechanism","brand","scheme","expiry_month","expiry_year","color","disableElevation","type","useStyles","makeStyles","table","minWidth","searchControl","width","paddingRight","paddingLeft","marginBottom","marginTop","Payments","classes","payments","setPayments","value","setValue","currentPage","setCurrentPage","_React$useState5","_React$useState6","selectedPayment","setSelectedPayment","selectedStatus","setSelectedStatus","_React$useState7","_React$useState8","visible","setVisibility","fetchPayments","fetchSearch","startIndex","endIndex","displayedPayments","slice","isLastPage","length","Fragment","justifyContent","alignItems","onChange","e","target","marginRight","OutlinedInput","event","placeholder","startAdornment","InputAdornment","position","IconSearch","stroke","size","inputProps","labelWidth","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","showSelectedPayment","component","prevPage","Math","max"],"mappings":"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","file":"static/js/17.8d694c22.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Card, CardHeader, Divider, CardContent, Grid, Button, Modal} from '@material-ui/core';\r\nimport {gridSpacing} from '../../store/constant';\r\nimport SubCard from '../../ui-component/cards/SubCard';\r\nimport axios from 'axios';\r\n\r\nexport const ShowConsultationCallID = (props) => {\r\n    const BASE_URL = 'https://backend-test.alsahaba.sa/api';\r\n    const [consultations, setConsultations] = useState([]);\r\n    const [calls, setCalls] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n\r\n    const fetchConsultations = async () => {\r\n        await axios.get(`${BASE_URL}/consultations/`).then((response) => {\r\n            setConsultations(response.data);\r\n        });\r\n    };\r\n    const fetchCalls = async () => {\r\n        await axios.get(`${BASE_URL}/calls/`).then((response) => {\r\n            setCalls(response.data);\r\n        });\r\n    };\r\n\r\n    const fetchUsers = async () => {\r\n        await axios.get(`${BASE_URL}/users/`).then((response) => {\r\n            setUsers(response.data);\r\n        });\r\n    };\r\n    const formatDate = (date) => {\r\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\r\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\r\n\r\n        // Split the formatted date into day, month, and year parts\r\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\r\n\r\n        // Convert the month abbreviation to uppercase\r\n        const capitalizedMonth = month.toUpperCase();\r\n\r\n        // Return the formatted date with uppercase month abbreviation and desired format\r\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\r\n    };\r\n    useEffect(() => {\r\n        fetchConsultations();\r\n        fetchCalls();\r\n        fetchUsers();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                open={props?.showModal}\r\n                onClose={props?.handleCloseConsultation}\r\n                aria-labelledby=\"total-income-pattern-modal-title\"\r\n                aria-describedby=\"total-income-pattern-modal-description\"\r\n            >\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <Card className=\"popup-container\">\r\n                            <CardContent className=\"popup-body\" style={{top: '250px', overflowY: 'auto', height: '75vh'}}>\r\n                                <Button id=\"closeBtn\" onClick={props?.handleCloseConsultation}>\r\n                                    X\r\n                                </Button>\r\n                                <Grid container spacing={gridSpacing}>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <>\r\n                                            {props?.payment_status === 'consultation_created' &&\r\n                                                consultations &&\r\n                                                consultations\r\n                                                    ?.filter((consultation) => consultation.id === props?.consultation)\r\n                                                    .map((filteredConsultation, index) => {\r\n                                                        const matchingPatient = users.find(\r\n                                                            (user) => user.id === filteredConsultation.patient_id\r\n                                                        );\r\n                                                        const matchingDoctor = users.find(\r\n                                                            (user) => user.id === filteredConsultation.doctor_id\r\n                                                        );\r\n\r\n                                                        return (\r\n                                                            <SubCard title=\"Consultation\" key={filteredConsultation.id}>\r\n                                                                <div className=\"mt-4 mb-4\">\r\n                                                                    <h5>Patient's Name:</h5>\r\n                                                                    <strong>\r\n                                                                        {matchingPatient ? matchingPatient.full_name : 'N/A'}\r\n                                                                    </strong>{' '}\r\n                                                                    <strong>\r\n                                                                        ID/Iqama {matchingPatient ? matchingPatient.iqama_number : 'N/A'}\r\n                                                                    </strong>\r\n                                                                </div>\r\n                                                                <div className=\"mt-4 mb-4\">\r\n                                                                    <h5>Doctor's Name:</h5>\r\n                                                                    <strong>\r\n                                                                        {matchingDoctor ? matchingDoctor.full_name : 'N/A'}\r\n                                                                    </strong>{' '}\r\n                                                                    <strong>\r\n                                                                        ID/Iqama {matchingDoctor ? matchingDoctor.iqama_number : 'N/A'}\r\n                                                                    </strong>\r\n                                                                </div>\r\n                                                                <div className=\"mt-4\">\r\n                                                                    <h5>Chief Complaint:</h5>\r\n                                                                    <strong>{filteredConsultation.chief_complaint}</strong>\r\n                                                                </div>\r\n                                                                <div className=\"mt-4\">\r\n                                                                    <h5>History of Illness:</h5>\r\n                                                                    <strong>{filteredConsultation.history_of_illness}</strong>\r\n                                                                </div>\r\n                                                                <div className=\"mt-4\">\r\n                                                                    <h5>Review of systems:</h5>\r\n                                                                    <strong>{filteredConsultation.review_of_systems}</strong>\r\n                                                                </div>\r\n                                                                <div className=\"mt-4\">\r\n                                                                    <h5>Examinations:</h5>\r\n                                                                    <strong>{filteredConsultation.examination}</strong>\r\n                                                                </div>\r\n                                                                <div className=\"mt-4\">\r\n                                                                    <h5>Assessments/Plans:</h5>\r\n                                                                    <strong>{filteredConsultation.assessment}</strong>\r\n                                                                </div>\r\n                                                                <div className=\"mt-4\">\r\n                                                                    <h5>Medication:</h5>\r\n                                                                    <strong>{filteredConsultation.medication}</strong>\r\n                                                                </div>\r\n                                                                <div className=\"mt-4\">\r\n                                                                    <h5>Sick leave:</h5>\r\n                                                                    <strong>{filteredConsultation.sick_leave}</strong>\r\n                                                                </div>\r\n                                                                <div className=\"mt-4 mb-4\">\r\n                                                                    <h5>Created At:</h5>\r\n                                                                    <strong>{formatDate(filteredConsultation.created_at)}</strong>\r\n                                                                </div>\r\n                                                            </SubCard>\r\n                                                        );\r\n                                                    })}\r\n                                            {props?.payment_status === 'doctor_joined' &&\r\n                                                calls &&\r\n                                                calls\r\n                                                    ?.filter((call) => call.payment_id === props?.payment_id)\r\n                                                    .map((filteredCall, index) => {\r\n                                                        const matchingPatient = users.find((user) => user.id === filteredCall.patient_id);\r\n                                                        const matchingDoctor = users.find((user) => user.id === filteredCall.doctor_id);\r\n\r\n                                                        return (\r\n                                                            <SubCard title=\"Consultation\" key={filteredCall.id}>\r\n                                                                <div className=\"mt-4 mb-4\">\r\n                                                                    <h5>Patient's Name:</h5>\r\n                                                                    <strong>\r\n                                                                        {matchingPatient ? matchingPatient.full_name : 'N/A'}\r\n                                                                    </strong>{' '}\r\n                                                                    <strong>\r\n                                                                        ID/Iqama {matchingPatient ? matchingPatient.iqama_number : 'N/A'}\r\n                                                                    </strong>\r\n                                                                </div>\r\n                                                                <div className=\"mt-4 mb-4\">\r\n                                                                    <h5>Doctor's Name:</h5>\r\n                                                                    <strong>\r\n                                                                        {matchingDoctor ? matchingDoctor.full_name : 'N/A'}\r\n                                                                    </strong>{' '}\r\n                                                                    <strong>\r\n                                                                        ID/Iqama {matchingDoctor ? matchingDoctor.iqama_number : 'N/A'}\r\n                                                                    </strong>\r\n                                                                </div>\r\n                                                            </SubCard>\r\n                                                        );\r\n                                                    })}\r\n                                            {props?.payment_status === 'call_initiated' &&\r\n                                                calls &&\r\n                                                calls\r\n                                                    ?.filter((call) => call.payment_id === props?.payment_id)\r\n                                                    .map((filteredCall, index) => {\r\n                                                        const matchingPatient = users.find((user) => user.id === filteredCall.patient_id);\r\n\r\n                                                        return (\r\n                                                            <SubCard title=\"Consultation\" key={filteredCall.id}>\r\n                                                                <div className=\"mt-4 mb-4\">\r\n                                                                    <h5>Patient's Name:</h5>\r\n                                                                    <strong>\r\n                                                                        {matchingPatient ? matchingPatient.full_name : 'N/A'}\r\n                                                                    </strong>{' '}\r\n                                                                    <strong>\r\n                                                                        ID/Iqama {matchingPatient ? matchingPatient.iqama_number : 'N/A'}\r\n                                                                    </strong>\r\n                                                                </div>\r\n                                                            </SubCard>\r\n                                                        );\r\n                                                    })}\r\n                                        </>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Container, Modal} from 'react-bootstrap';\r\nimport {Card, CardHeader, Divider, CardContent, Grid, Button} from '@material-ui/core';\r\nimport {gridSpacing} from '../../store/constant';\r\nimport MuiTypography from '@material-ui/core/Typography';\r\nimport SubCard from '../../ui-component/cards/SubCard';\r\nimport {ShowConsultationCallID} from './ShowConsultationCallID';\r\n\r\nexport const ShowSelectedPayment = (props) => {\r\n    const [showConsultation, setShowConsultation] = React.useState(false);\r\n    const [openModal, setOpenModal] = React.useState(false);\r\n    const [selectedConsultation, setSelectedConsultation] = useState([]);\r\n\r\n    const formatDate = (date) => {\r\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\r\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\r\n\r\n        // Split the formatted date into day, month, and year parts\r\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\r\n\r\n        // Convert the month abbreviation to uppercase\r\n        const capitalizedMonth = month.toUpperCase();\r\n\r\n        // Return the formatted date with uppercase month abbreviation and desired format\r\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\r\n    };\r\n    const closeConsultationPopup = () => {\r\n        setShowConsultation(false);\r\n    };\r\n    const closeModal = () => {\r\n        setOpenModal(false);\r\n    };\r\n\r\n    const showSelectedConsultation = (call_id) => {\r\n        closeConsultationPopup(); // Close the previous modal before showing the new one\r\n        setSelectedConsultation(call_id);\r\n        setShowConsultation(true);\r\n        setOpenModal(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                {showConsultation && (\r\n                    <ShowConsultationCallID\r\n                        consultation={selectedConsultation}\r\n                        payment_status={props.payment.payment_status}\r\n                        payment_id={props.payment.id}\r\n                        showModal={openModal}\r\n                        handleCloseConsultation={closeModal}\r\n                    />\r\n                )}\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <Card className=\"popup-container\">\r\n                            <CardHeader title=\"Payment Info\" />\r\n                            <Divider />\r\n                            <CardContent className=\"popup-body\" id=\"popupCustom\">\r\n                                <Button id=\"closeBtn\" onClick={() => props.handleClose()}>\r\n                                    X\r\n                                </Button>\r\n                                <Grid container spacing={gridSpacing}>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <SubCard title={props.payment.order_id}>\r\n                                            <Grid container direction=\"column\" id=\"poppins\" spacing={1}>\r\n                                                <Grid item>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Order ID: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.order_id}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Creation Time: &nbsp;\r\n                                                        <span id=\"small-text\">{formatDate(props.payment.creation_time)}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Message: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.message}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Status: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.status}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Total Authorized Amount: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.total_authorized_amount}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Total Cuthorized Amount: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.total_captured_amount}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Payment Info: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.payment_info}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Payment Mechanism: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.payment_mechanism}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Brand: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.brand}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Scheme: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.scheme}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Expiry Month: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.expiry_month}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Expiry Month: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.expiry_year}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Consultation Status: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.payment_status}</span>\r\n                                                    </MuiTypography>\r\n                                                    {props?.payment?.call_id && (\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            onClick={() => showSelectedConsultation(props?.payment.call_id)}\r\n                                                            disableElevation\r\n                                                            type=\"submit\"\r\n                                                        >\r\n                                                            Show Consultation\r\n                                                        </Button>\r\n                                                    )}\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </SubCard>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport {Card, CardHeader, Divider, Grid, OutlinedInput, InputAdornment} from '@material-ui/core';\r\n\r\nimport {gridSpacing} from '../../store/constant';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\nimport {IconSearch} from '@tabler/icons';\r\n\r\nimport axios from 'axios';\r\nimport {ShowSelectedPayment} from './ShowSelectedPayment';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 350\r\n    },\r\n    searchControl: {\r\n        width: '100%',\r\n        paddingRight: '8px',\r\n        paddingLeft: '16px',\r\n        marginBottom: '16px',\r\n        marginTop: '16px'\r\n    }\r\n});\r\n\r\nexport default function Payments() {\r\n    const classes = useStyles();\r\n    const BASE_URL = 'https://backend-test.alsahaba.sa/api';\r\n    const [payments, setPayments] = React.useState([]);\r\n    const [value, setValue] = React.useState('');\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [selectedPayment, setSelectedPayment] = React.useState([]);\r\n    const [selectedStatus, setSelectedStatus] = useState('');\r\n\r\n    const itemsPerPage = 10;\r\n    const [visible, setVisibility] = React.useState(false);\r\n\r\n    const fetchPayments = async () => {\r\n        await axios.get(`${BASE_URL}/payments`).then((response) => {\r\n            setPayments(response.data);\r\n        });\r\n    };\r\n    const fetchSearch = async () => {\r\n        await axios.get(`${BASE_URL}/payment-search?query=${value}`).then((response) => {\r\n            setPayments(response.data);\r\n            setCurrentPage(1);\r\n        });\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        if (event.target.value === '') {\r\n            setValue(event.target.value);\r\n            fetchPayments();\r\n        } else {\r\n            setValue(event.target.value);\r\n            fetchSearch();\r\n        }\r\n    };\r\n    const showSelectedPayment = (payment) => {\r\n        setVisibility(true);\r\n        setSelectedPayment(payment);\r\n    };\r\n    const closePopup = () => {\r\n        setVisibility(false);\r\n    };\r\n    const formatDate = (date) => {\r\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\r\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\r\n\r\n        // Split the formatted date into day, month, and year parts\r\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\r\n\r\n        // Convert the month abbreviation to uppercase\r\n        const capitalizedMonth = month.toUpperCase();\r\n\r\n        // Return the formatted date with uppercase month abbreviation and desired format\r\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchPayments();\r\n    }, []);\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    const displayedPayments = payments\r\n        .filter((payment) => !selectedStatus || payment.status === selectedStatus)\r\n        .slice(startIndex, endIndex);\r\n    const isLastPage = currentPage * itemsPerPage >= payments.length;\r\n\r\n    const handleShowPrevious = () => {\r\n        setCurrentPage((prevPage) => Math.max(prevPage - 1, 1));\r\n    };\r\n\r\n    const handleShowMore = () => {\r\n        setCurrentPage((prevPage) => prevPage + 1);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {visible && <ShowSelectedPayment payment={selectedPayment} handleClose={closePopup} />}\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Card>\r\n                        <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems={'center'}>\r\n                            <Grid item>\r\n                                <CardHeader title=\"All Payments\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <select\r\n                                    value={selectedStatus}\r\n                                    className={classes.searchControl}\r\n                                    onChange={(e) => setSelectedStatus(e.target.value)}\r\n                                    style={{height: '40px'}}\r\n                                >\r\n                                    <option value=\"\">All Status</option>\r\n                                    <option value=\"CAPTURED\">Success</option>\r\n                                    <option value=\"FAILED\">Failed</option>\r\n                                </select>\r\n                            </Grid>\r\n                            <Grid item style={{marginRight: '25px'}}>\r\n                                <OutlinedInput\r\n                                    className={classes.searchControl}\r\n                                    id=\"input-search-profile\"\r\n                                    value={value}\r\n                                    onChange={handleChange}\r\n                                    placeholder=\"Order ID\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                            <IconSearch stroke={1.5} size=\"1.3rem\" className={classes.startAdornment} />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                    aria-describedby=\"search-helper-text\"\r\n                                    inputProps={{\r\n                                        'aria-label': 'weight'\r\n                                    }}\r\n                                    labelWidth={0}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <TableContainer>\r\n                            <Table className={classes.table} aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>#</TableCell>\r\n                                        <TableCell>Order ID</TableCell>\r\n                                        <TableCell align=\"left\">Creation Time</TableCell>\r\n                                        <TableCell align=\"left\">Message</TableCell>\r\n                                        <TableCell align=\"left\">Status</TableCell>\r\n                                        <TableCell align=\"left\">Total Authorized Amount</TableCell>\r\n                                        <TableCell align=\"left\">Total Captured Amount</TableCell>\r\n                                        <TableCell align=\"left\">Payment Info</TableCell>\r\n                                        <TableCell align=\"left\">Consultation Status</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {displayedPayments.map((payment, index) => (\r\n                                        <TableRow key={payment.id} onClick={() => showSelectedPayment(payment)}>\r\n                                            <TableCell align=\"left\">{index + 1}</TableCell>\r\n                                            <TableCell component=\"th\">{payment.order_id}</TableCell>\r\n                                            <TableCell align=\"left\">{formatDate(payment.creation_time)}</TableCell>\r\n                                            <TableCell align=\"left\">{payment.message}</TableCell>\r\n                                            <TableCell align=\"left\">{payment.status}</TableCell>\r\n                                            <TableCell align=\"left\">{payment.total_authorized_amount}</TableCell>\r\n                                            <TableCell align=\"left\">{payment.total_captured_amount}</TableCell>\r\n                                            <TableCell align=\"left\">\r\n                                                <div>\r\n                                                    {payment.payment_mechanism}\r\n                                                    {': '} {payment.payment_info} {payment.expiry_month}\r\n                                                    {'/'}\r\n                                                    {payment.expiry_year}\r\n                                                </div>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">{payment.payment_status ? payment.payment_status : 'none'}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        <Grid container justifyContent=\"center\">\r\n                            {' '}\r\n                            {currentPage > 1 && (\r\n                                <Button onClick={handleShowPrevious} variant=\"outlined\">\r\n                                    Show Previous Page\r\n                                </Button>\r\n                            )}\r\n                            {!isLastPage && (\r\n                                <Button onClick={handleShowMore} variant=\"outlined\">\r\n                                    Show More\r\n                                </Button>\r\n                            )}\r\n                        </Grid>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n"],"sourceRoot":""}