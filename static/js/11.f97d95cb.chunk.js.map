{"version":3,"sources":["hooks/useScriptRef.js","assets/images/icons/social-google.svg","views/pages/authentication/login/FirebaseLogin.js","assets/images/logo.svg","assets/images/auth/auth-pattern.svg","assets/images/auth/auth-blue.svg","assets/images/auth/auth-purple.svg","assets/images/auth/auth-blue-card.svg","assets/images/auth/auth-purple-card.svg","views/pages/authentication/login/index.js"],"names":["useScriptRef","scripted","useRef","useEffect","current","useStyles","makeStyles","theme","root","redButton","_defineProperty","fontSize","fontWeight","backgroundColor","palette","grey","border","borderColor","color","textTransform","primary","light","breakpoints","down","signDivider","flexGrow","signText","cursor","margin","spacing","padding","marginTop","marginBottom","forgot","textDecoration","purple","main","loginIcon","marginRight","title","login","dark","loginput","top","left","display","startAdornment","width","FirebaseLogin","props","_ref","className","rest","_objectWithoutProperties","classes","scriptedRef","useSelector","state","customization","_React$useState","React","useState","_React$useState2","_slicedToArray","showPassword","setShowPassword","_React$useState3","_React$useState4","checked","setChecked","history","useHistory","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","handleLoginSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","e","bodyFormData","wrap","_context2","prev","next","FormData","append","target","iqama_number","value","password","axios","method","url","concat","data","headers","then","response","user","is_staff","push","logInToken","token","loggedInUser","catch","console","log","stop","_x","apply","arguments","_jsxs","Fragment","children","_jsx","Grid","container","direction","justifyContent","Formik","initialValues","submit","onSubmit","_ref5","_callee3","values","_ref4","setErrors","setStatus","setSubmitting","_context3","success","err","error","message","_x2","_x3","_ref6","errors","handleBlur","handleChange","isSubmitting","handleSubmit","touched","_objectSpread","noValidate","clsx","FormControl","fullWidth","Boolean","variant","InputLabel","htmlFor","OutlinedInput","id","type","name","onBlur","onChange","label","inputProps","notchedOutline","FormHelperText","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","onMouseDown","edge","Visibility","VisibilityOff","alignItems","item","FormControlLabel","control","Checkbox","Box","mt","Button","disableElevation","disabled","size","_card","height","minHeight","card","maxWidth","overflow","flexBasis","content","icon","indicator","activeIndicator","authBlue","backgroundImage","AuthBlue","backgroundRepeat","backgroundPosition","animation","AuthPurple","animationDelay","authPurpleCard","backgroundSize","AuthPurpleCard","AuthBlueCard","Item","textAlign","md","Typography","description","Login","useTheme","matchDownSM","useMediaQuery","Card","CardContent","xs","gutterBottom","RouterLink","to","alt","src","logo","Divider","component","Hidden","mdDown","sx","alignSelf","bgcolor","AuthPattern","p","Carousel","navButtonsAlwaysInvisible","autoPlay","indicatorIconButtonProps","activeIndicatorIconButtonProps","indicatorContainerProps","style","map","i"],"mappings":"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","file":"static/js/11.f97d95cb.chunk.js","sourcesContent":["import {useEffect, useRef} from 'react';\n\nconst useScriptRef = () => {\n    const scripted = useRef(true);\n\n    useEffect(\n        () => () => {\n            scripted.current = false;\n        },\n        []\n    );\n\n    return scripted;\n};\n\nexport default useScriptRef;\n","export default __webpack_public_path__ + \"static/media/social-google.9887eb8e.svg\";","import React from 'react';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom'\nimport {\n    Box,\n    Button,\n    Checkbox,\n    Divider,\n    FormControl,\n    FormControlLabel,\n    FormHelperText,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    makeStyles,\n    OutlinedInput,\n    Typography\n} from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nimport useScriptRef from '../../../../hooks/useScriptRef';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport Google from './../../../../assets/images/icons/social-google.svg';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    redButton: {\n        fontSize: '1rem',\n        fontWeight: 500,\n        backgroundColor: theme.palette.grey[50],\n        border: '1px solid',\n        borderColor: theme.palette.grey[100],\n        color: theme.palette.grey[600],\n        textTransform: 'none',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.light\n        },\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '0.875rem'\n        }\n    },\n    signDivider: {\n        flexGrow: 1\n    },\n    signText: {\n        cursor: 'unset',\n        margin: theme.spacing(2),\n        padding: '5px 56px',\n        borderColor: theme.palette.grey[100] + ' !important',\n        color: theme.palette.grey[900] + '!important',\n        fontWeight: 500\n    },\n    margin: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(1)\n    },\n    forgot: {\n        textDecoration: 'none',\n        color: theme.palette.purple.main\n    },\n    loginIcon: {\n        marginRight: '16px',\n        [theme.breakpoints.down('sm')]: {\n            marginRight: '8px'\n        }\n    },\n    title: {\n        color: theme.palette.grey[600]\n    },\n    login: {\n        backgroundColor: theme.palette.purple.main,\n        '&:hover': {\n            backgroundColor: theme.palette.purple.dark\n        }\n    },\n    loginput: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n        '& > label': {\n            top: '23px',\n            left: 0,\n            color: theme.palette.grey[500],\n            '&[data-shrink=\"false\"]': {\n                top: '5px'\n            }\n        },\n        '& > div > input': {\n            padding: '30.5px 14px 11.5px !important'\n        },\n        '& legend': {\n            display: 'none'\n        },\n        '& fieldset': {\n            top: 0\n        }\n    },\n    startAdornment: {\n        color: theme.palette.grey[500],\n        marginTop: '18px',\n        width: 'auto'\n    }\n}));\n\nconst FirebaseLogin = (props, { className, ...rest }) => {\n    const classes = useStyles();\n    const customization = useSelector((state) => state.customization);\n    const scriptedRef = useScriptRef();\n    const [showPassword, setShowPassword] = React.useState(false);\n    const [checked, setChecked] = React.useState(true);\n    const BASE_URL = 'https://backend-test.alsahaba.sa/api';\n    const history = useHistory();\n    const googleHandler = async () => {\n\n    };\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const handleLoginSubmit = async (e) => {\n        e.preventDefault();\n        var bodyFormData = new FormData();\n        bodyFormData.append(\"iqama_number\", e.target.iqama_number.value);\n        bodyFormData.append(\"password\", e.target.password.value);\n        axios({\n            method: \"post\",\n            url: `${BASE_URL}/login/`,\n            data: bodyFormData,\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n        })\n            .then(function (response) {\n                if (response.data.user.is_staff) {\n                    history.push(\"/dashboard/default\", {\n                        state: {\n                            logInToken: response.data.token,\n                            loggedInUser: response.data.user\n                        }\n                    });\n                    \n                }\n                else {\n                    history.push(\"/\")\n                }\n            })\n            .catch(function (response) {\n                console.log(response)\n            });\n\n    };\n\n    return (\n        <React.Fragment>\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n                {/* <Grid item xs={12}>\n                    <Button\n                        disableElevation\n                        fullWidth={true}\n                        className={classes.redButton}\n                        onClick={googleHandler}\n                        size=\"large\"\n                        variant=\"contained\"\n                    >\n                        <img src={Google} alt=\"google\" width=\"20px\" className={classes.loginIcon} /> Sign in with Google\n                    </Button>\n                </Grid> */}\n                {/* <Grid item xs={12}>\n                    <Box alignItems=\"center\" display=\"flex\">\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\n                        <Button\n                            variant=\"outlined\"\n                            className={classes.signText}\n                            sx={{borderRadius: customization.borderRadius + 'px'}}\n                            disableRipple\n                            disabled\n                        >\n                            OR\n                        </Button>\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\n                    </Box>\n                </Grid> */}\n                {/* <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n                    <Box mb={2}>\n                        <Typography variant=\"subtitle1\" className={classes.title}>\n                            Sign in with Email address\n                        </Typography>\n                    </Box>\n                </Grid> */}\n            </Grid>\n\n            <Formik\n                initialValues={{\n                    iqama_number: '',\n                    password: '',\n                    submit: null\n                }}\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n                    try {\n\n                        if (scriptedRef.current) {\n                            setStatus({ success: true });\n                            setSubmitting(false);\n                        }\n                    } catch (err) {\n                        console.error(err);\n                        if (scriptedRef.current) {\n                            setStatus({ success: false });\n                            setErrors({ submit: err.message });\n                            setSubmitting(false);\n                        }\n                    }\n                }}\n            >\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                    <form noValidate onSubmit={handleLoginSubmit} className={clsx(classes.root, className)} {...rest}>\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.iqama_number && errors.iqama_number)}\n                            className={classes.loginput}\n                            variant=\"outlined\"\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">ID/Iqama Number</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-login\"\n                                type=\"text\"\n                                value={values.iqama_number}\n                                name=\"iqama_number\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                label='Email Address / Username'\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.iqama_number && errors.iqama_number && (\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                                    {' '}\n                                    {errors.iqama_number}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <FormControl\n                            fullWidth\n                            error={Boolean(touched.password && errors.password)}\n                            className={classes.loginput}\n                            variant=\"outlined\"\n                        >\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-login\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                name=\"password\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                label='Password'\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.password && errors.password && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\n                                    {' '}\n                                    {errors.password}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                            <Grid item>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={checked}\n                                            onChange={(event) => setChecked(event.target.checked)}\n                                            name=\"checked\"\n                                            color=\"primary\"\n                                        />\n                                    }\n                                    label={<React.Fragment>Keep me logged in</React.Fragment>}\n                                />\n                            </Grid>\n                            {/* <Grid item>\n                                <Typography\n                                    variant=\"subtitle1\">\n                                    Forgot Password?\n                                </Typography>\n                            </Grid> */}\n                        </Grid>\n                        {errors.submit && (\n                            <Box mt={3}>\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )}\n\n                        <Box mt={2}>\n                            <Button\n                                disableElevation\n                                disabled={isSubmitting}\n                                fullWidth\n                                size=\"large\"\n                                type=\"submit\"\n                                variant=\"contained\"\n                                className={classes.login}\n                            >\n                                Sign in\n                            </Button>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </React.Fragment>\n    );\n};\n\nexport default FirebaseLogin;\n","export default __webpack_public_path__ + \"static/media/logo.0cdd96fa.svg\";","export default __webpack_public_path__ + \"static/media/auth-pattern.df3f321b.svg\";","export default __webpack_public_path__ + \"static/media/auth-blue.de806050.svg\";","export default __webpack_public_path__ + \"static/media/auth-purple.15fc76c7.svg\";","export default __webpack_public_path__ + \"static/media/auth-blue-card.7e8e3774.svg\";","export default __webpack_public_path__ + \"static/media/auth-purple-card.a34aad52.svg\";","import React from 'react';\nimport {Link as RouterLink} from 'react-router-dom';\nimport {Box, Card, CardContent, Divider, Grid, Hidden, makeStyles, Typography, useMediaQuery, useTheme} from '@material-ui/core';\n\nimport Carousel from 'react-material-ui-carousel';\n\n//import JWTLogin from './JWTLogin';\n//import Auth0Login from './Auth0Login';\nimport FirebaseLogin from './FirebaseLogin';\n\nimport logo from './../../../../assets/images/logo.svg';\nimport AuthPattern from './../../../../assets/images/auth/auth-pattern.svg';\nimport AuthBlue from './../../../../assets/images/auth/auth-blue.svg';\nimport AuthPurple from './../../../../assets/images/auth/auth-purple.svg';\nimport AuthBlueCard from './../../../../assets/images/auth/auth-blue-card.svg';\nimport AuthPurpleCard from './../../../../assets/images/auth/auth-purple-card.svg';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.primary.light,\n        height: '100%',\n        minHeight: '100vh',\n        width: '100%'\n    },\n    card: {\n        marginTop: theme.spacing(6),\n        marginBottom: theme.spacing(6),\n        maxWidth: '475px',\n        overflow: 'visible',\n        display: 'flex',\n        position: 'relative',\n        '& > *': {\n            flexGrow: 1,\n            flexBasis: '50%'\n        },\n        [theme.breakpoints.down('sm')]: {\n            margin: '20px'\n        },\n        [theme.breakpoints.down('lg')]: {\n            maxWidth: '400px'\n        }\n    },\n    content: {\n        padding: theme.spacing(5),\n        [theme.breakpoints.down('lg')]: {\n            padding: theme.spacing(3)\n        }\n    },\n    icon: {\n        [theme.breakpoints.down('sm')]: {\n            marginBottom: '24px'\n        }\n    },\n    title: {\n        color: theme.palette.grey[600],\n        textDecoration: 'none'\n    },\n    login: {\n        fontWeight: 500,\n        color: theme.palette.purple.main,\n        borderColor: theme.palette.purple.light,\n        '&:hover': {\n            borderColor: theme.palette.primary.light,\n            backgroundColor: theme.palette.primary.light\n        }\n    },\n    indicator: {\n        color: theme.palette.purple.light,\n        '&:hover': {\n            color: theme.palette.purple.main\n        }\n    },\n    activeIndicator: {\n        color: theme.palette.purple.main\n    },\n    authBlue: {\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '225px',\n            height: '130px',\n            left: '435px',\n            top: '529px',\n            backgroundImage: `url(${AuthBlue})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            animation: '15s blink ease-in-out infinite',\n            [theme.breakpoints.down('lg')]: {\n                top: '465px',\n                left: '325px'\n            }\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '225px',\n            height: '130px',\n            top: '76px',\n            left: '103px',\n            backgroundImage: `url(${AuthPurple})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            animation: '15s blink ease-in-out infinite',\n            animationDelay: '1s',\n            [theme.breakpoints.down('lg')]: {\n                top: '140px',\n                left: '-10px'\n            }\n        }\n    },\n    authPurpleCard: {\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            top: '32%',\n            left: '40%',\n            width: '313px',\n            backgroundSize: '380px',\n            height: '280px',\n            backgroundImage: `url(${AuthPurpleCard})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            animation: '15s wings ease-in-out infinite'\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            top: '23%',\n            left: '37%',\n            width: '243px',\n            height: '210px',\n            backgroundSize: '380px',\n            backgroundImage: `url(${AuthBlueCard})`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            animation: '15s wings ease-in-out infinite',\n            animationDelay: '1s'\n        }\n    }\n}));\n\nconst Item = (props) => {\n    return (\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3} textAlign=\"center\">\n            <Grid item md={4} width={350}>\n                <Typography variant=\"h1\">{props.item.title}</Typography>\n            </Grid>\n            <Grid item md={2} width={200}>\n                <Typography variant=\"subtitle2\">{props.item.description}</Typography>\n            </Grid>\n        </Grid>\n    );\n};\n\nconst Login = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const items = [\n        {\n            title: 'Components Based Design System',\n            description: 'Powerfull and easy to use multipurpose theme'\n        },\n        {\n            title: 'Components Based Design System',\n            description: 'Powerfull and easy to use multipurpose theme'\n        },\n        {\n            title: 'Components Based Design System',\n            description: 'Powerfull and easy to use multipurpose theme'\n        }\n    ];\n\n    return (\n        <Grid container justifyContent=\"space-between\" alignItems=\"center\" className={classes.root}>\n            <Grid item container justifyContent=\"center\" md={7}>\n                <Card className={classes.card}>\n                    <CardContent className={classes.content}>\n                        <Grid container direction=\"column\" spacing={2} justifyContent=\"center\">\n                            <Grid item xs={12}>\n                                <Grid\n                                    container\n                                    direction={matchDownSM ? 'column-reverse' : 'row'}\n                                    alignItems={matchDownSM && 'center'}\n                                    justifyContent={matchDownSM ? 'center' : 'space-between'}\n                                >\n                                    <Grid item>\n                                        <Grid container direction=\"column\" spacing={1}>\n                                            <Grid item container direction=\"column\" alignItems={matchDownSM && 'center'}>\n                                                <Grid item>\n                                                    <Typography\n                                                        color={theme.palette.purple.main}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\n                                                    >\n                                                        Hi, Welcome Back\n                                                    </Typography>\n                                                </Grid>\n                                                <Grid item>\n                                                    <Typography color=\"textPrimary\" gutterBottom variant={matchDownSM ? 'h4' : 'h3'}>\n                                                        Login in to your account\n                                                    </Typography>\n                                                </Grid>\n                                            </Grid>\n                                            {/* <Grid item>\n                                                <Typography variant=\"caption\">\n                                                    Enter your credentials to continue.\n                                                </Typography>\n                                            </Grid> */}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item className={classes.icon}>\n                                        <RouterLink to=\"#\">\n                                            <img alt=\"Auth method\" src={logo} width=\"100\" />\n                                        </RouterLink>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={12}>\n                                {/* <JWTLogin /> */}\n                                {/* <Auth0Login /> */}\n                                <FirebaseLogin />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Divider />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Grid item container direction=\"column\" alignItems=\"flex-end\" xs={12}>\n                                    <Typography component={RouterLink} to=\"#\" variant=\"subtitle1\" className={classes.title}>\n                                        Don't have an account?\n                                    </Typography>\n                                    {/* <Box mt={1} width='100%'>\n                                    <Button\n                                        disableElevation\n                                        fullWidth\n                                        size=\"large\"\n                                        type=\"submit\"\n                                        variant=\"outlined\"\n                                        className={classes.login}\n                                    >\n                                        Sign up now\n                                    </Button>\n                                </Box> */}\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </Card>\n            </Grid>\n            <Hidden mdDown>\n                <Grid item md={5} sx={{alignSelf: 'stretch'}}>\n                    <Box\n                        component=\"span\"\n                        sx={{\n                            display: 'flex',\n                            maxWidth: 770,\n                            minHeight: '100%',\n                            height: '100vh',\n                            bgcolor: '#fff',\n                            backgroundImage: `url(${AuthPattern})`,\n                            position: 'relative',\n                            backgroundPosition: '0 0',\n                            overflow: 'hidden',\n                            margin: '0 0 0 auto'\n                        }}\n                    >\n                        <Grid item container direction=\"column\" justifyContent=\"flex-end\">\n                            <Grid item>\n                                <span className={classes.authBlue}></span>\n                                <span className={classes.authPurpleCard}></span>\n                            </Grid>\n                            <Grid item>\n                                <Box p={10}>\n                                    <Carousel\n                                        animation=\"slide\"\n                                        navButtonsAlwaysInvisible\n                                        autoPlay={false}\n                                        indicatorIconButtonProps={{\n                                            className: classes.indicator\n                                        }}\n                                        activeIndicatorIconButtonProps={{\n                                            className: classes.activeIndicator\n                                        }}\n                                        indicatorContainerProps={{\n                                            style: {\n                                                marginTop: '32px'\n                                            }\n                                        }}\n                                    >\n                                        {items.map((item, i) => (\n                                            <Item key={i} item={item} />\n                                        ))}\n                                    </Carousel>\n                                </Box>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Grid>\n            </Hidden>\n        </Grid>\n    );\n};\n\nexport default Login;\n"],"sourceRoot":""}