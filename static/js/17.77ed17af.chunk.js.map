{"version":3,"sources":["ui-component/cards/PatientsCard/index.js","ui-component/cards/DoctorsCard/index.js","ui-component/cards/ChartCard/chart/bar-chart.js","ui-component/cards/ChartCard/index.js","ui-component/cards/PopularCard/index.js","ui-component/cards/ConsultationsCard/index.js","ui-component/cards/TotalIncomePatternCard/index.js","ui-component/cards/TotalIncomeCard/index.js","ui-component/UpdatePaymentAmount.js","ui-component/AdminMessageModal.js","ui-component/cards/AdminMessageCard/index.js","views/dashboard/Default.js"],"names":["useStyles","makeStyles","theme","card","backgroundColor","palette","purple","main","color","overflow","position","_defineProperty","content","width","height","dark","borderRadius","top","right","breakpoints","down","opacity","padding","avatar","_objectSpread","typography","commonAvatar","largeAvatar","marginTop","avatarRight","mediumAvatar","zIndex","cardHeading","fontSize","fontWeight","marginRight","marginBottom","subHeading","avatarCricle","cursor","smallAvatar","circleIcon","transform","menuItem","EarningCard","classes","count","_React$useState","React","useState","_React$useState2","_slicedToArray","patients","setPatients","fetchPatients","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","get","concat","then","response","data","stop","apply","arguments","useEffect","_jsx","Card","className","children","CardContent","_jsxs","Grid","container","direction","item","alignItems","style","display","map","patient","is_doctor","Typography","primary","TotalChartCard","_React$useState3","_React$useState4","doctors","setDoctors","fetchDoctors","doctor","chartData","type","options","chart","stacked","toolbar","show","zoom","enabled","colors","value","responsive","breakpoint","legend","offsetX","offsetY","plotOptions","bar","horizontal","xaxis","categories","labels","yaxis","fontFamily","useSeriesColors","markers","radius","itemMargin","vertical","fill","dataLabels","grid","series","name","status","label","ChartCard","setValue","useTheme","count2","_useState","_useState2","_useState3","_useState4","calls","setCalls","secondary","barChart","borderColor","light","fetchCalls","spacing","gridSpacing","xs","justifyContent","variant","call","is_new","TextField","id","select","onChange","e","target","option","MenuItem","Chart","cardAction","paddingTop","primaryLight","divider","avatarSuccess","success","marginLeft","successDark","avatarError","orange","errorDark","PopularCard","BASE_URL","consultations","setConsultations","selectedConsultation","setSelectedConsultation","visible","setVisibility","_React$useState5","_React$useState6","visibleCreateConsultation","setVisiblityCreateConsultation","_React$useState7","_React$useState8","users","setUsers","fetchUsers","fetchConsultations","_ref2","_callee2","_context2","reverse","formatDate","date","_formattedDate$split","Date","toLocaleDateString","day","month","year","hour","minute","split","_formattedDate$split2","capitalizedMonth","toUpperCase","ShowSelectedConsultation","consultation","handleClose","CreateConsultation","alignContent","Button","disableElevation","onClick","slice","consultaion","chief_complaint","user","patient_id","full_name","created_at","doctor_id","Divider","CardActions","Link","component","RouterLink","to","props","_React$useState9","_React$useState10","_ref3","_callee3","_context3","_formattedDate$split3","_formattedDate$split4","console","log","CardHeader","title","sm","SubCard","MuiTypography","gutterBottom","history_of_illness","review_of_systems","examination","assessment","order_labs","upload_order_labs","href","sick_leave","updated_at","useCustomStyles","table","minWidth","searchControl","paddingRight","paddingLeft","_React$useState11","_React$useState12","_React$useState13","_React$useState14","patientSearchResult","setPatientSearchResult","_React$useState15","_React$useState16","setShow","_React$useState17","_React$useState18","showPatient","setShowPatient","_React$useState19","_React$useState20","doctorSearchResult","setDoctorSearchResult","_React$useState21","_React$useState22","patientId","setPatientId","_React$useState23","_React$useState24","doctorId","setDoctorId","setVisible","_ref4","_callee4","_context4","Popup","_ref5","modalRef","useRef","closeWithAnimation","current","classList","add","remove","ref","src","alt","setTimeout","fetchSearch","_ref6","_callee5","_context5","_x","handleSubmit","_ref7","_callee6","bodyFormData","_context6","preventDefault","FormData","append","undefined","medication","method","url","headers","showPopup","catch","_x2","onSubmit","FormControl","fullWidth","InputLabel","OutlinedInput","event","placeholder","startAdornment","InputAdornment","IconSearch","stroke","size","aria-describedby","inputProps","labelWidth","_Fragment","filter","iqama_number","index","TextareaAutosize","defaultValue","ConsultationsCard","background","paddingBottom","TotalIncomePatternCard","consultationCosts","List","ListItem","disableGutters","ListItemAvatar","Avatar","TableChartOutlinedIcon","ListItemText","warning","grey","TotalIncomeCard","StorefrontTwoToneIcon","UpdatePaymentAmount","isModalOpen","handleModalClose","onConsultationCostsChange","setConsultationCosts","getConsultationPrice","lastObject","sent","length","amount","toString","error","t0","handleUpdateAmount","updatedResponse","post","window","location","reload","Modal","open","onClose","aria-labelledby","left","outline","textAlign","Input","border","AdminMessageModal","onAdminMessageTitleChange","onAdminMessageChange","setTitle","message","setMessage","getAdminMessageData","lastObjectTitle","lastObjectMessage","message_title","handleUpdateAdminMessage","put","flexDirection","gap","borderBottom","AdminMessageCard","Dashboard","history","useHistory","routeChange","route","path","push","setModalOpen","isAdminMessageModalOpen","setAdminMessageModalOpen","_useState5","_useState6","_useState7","_useState8","setAdminMessageTitle","_useState9","_useState10","setAdminMessage","md","PatientsCard","DoctorsCard"],"mappings":"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","file":"static/js/17.77ed17af.chunk.js","sourcesContent":["import React from 'react';\nimport {Avatar, Card, CardContent, Grid, makeStyles, Menu, MenuItem, Typography} from '@material-ui/core';\n\nimport axios from 'axios';\nimport {useEffect} from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        backgroundColor: theme.palette.purple.main,\n        color: '#fff',\n        overflow: 'hidden',\n        position: 'relative',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            backgroundColor: theme.palette.purple.dark,\n            borderRadius: '50%',\n            top: '-85px',\n            right: '-95px',\n            [theme.breakpoints.down('xs')]: {\n                top: '-105px',\n                right: '-140px'\n            }\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            backgroundColor: theme.palette.purple.dark,\n            borderRadius: '50%',\n            top: '-125px',\n            right: '-15px',\n            opacity: 0.7,\n            [theme.breakpoints.down('xs')]: {\n                top: '-155px',\n                right: '-70px'\n            }\n        }\n    },\n    content: {\n        padding: '20px !important'\n    },\n    avatar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        backgroundColor: theme.palette.purple.dark,\n        marginTop: '8px'\n    },\n    avatarRight: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.mediumAvatar,\n        backgroundColor: theme.palette.purple.main,\n        color: theme.palette.purple[200],\n        zIndex: 1\n    },\n    cardHeading: {\n        fontSize: '2.125rem',\n        fontWeight: 500,\n        marginRight: '8px',\n        marginTop: '18px',\n        marginBottom: '8px'\n    },\n    subHeading: {\n        fontSize: '1.5rem',\n        fontWeight: 500,\n        color: theme.palette.purple[200]\n    },\n    avatarCricle: {\n        cursor: 'pointer',\n        ...theme.typography.smallAvatar,\n        backgroundColor: theme.palette.purple[200],\n        color: theme.palette.purple.dark\n    },\n    circleIcon: {\n        transform: 'rotate3d(1, 1, 1, 45deg)'\n    },\n    menuItem: {\n        marginRight: '14px',\n        fontSize: '1.25rem'\n    }\n}));\n\nconst EarningCard = () => {\n    const classes = useStyles();\n    var count = 0;\n    const BASE_URL = 'https://backend-test.alsahaba.sa/api';\n    const [patients, setPatients] = React.useState([]);\n\n    const fetchPatients = async () => {\n        await axios.get(`${BASE_URL}/users/`).then((response) => {\n            setPatients(response.data);\n        });\n    };\n\n    useEffect(() => {\n        fetchPatients();\n    }, []);\n\n    return (\n        <Card className={classes.card}>\n            <CardContent className={classes.content}>\n                <Grid container direction=\"column\">\n                    <Grid item>\n                        <Grid container alignItems=\"center\">\n                            <Grid item>\n                                <div style={{display: 'none'}}>{patients?.map((patient) => !patient.is_doctor && count++)}</div>\n                                <Typography className={classes.cardHeading}>{count}</Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item>\n                        <Typography className={classes.subHeading}>Registered Patients</Typography>\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default EarningCard;\n","import React from 'react';\nimport {Avatar, Card, CardContent, Grid, makeStyles, Menu, MenuItem, Typography} from '@material-ui/core';\nimport axios from 'axios';\nimport {useEffect} from 'react';\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        backgroundColor: theme.palette.primary.main,\n        color: '#fff',\n        overflow: 'hidden',\n        position: 'relative',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            backgroundColor: theme.palette.primary.dark,\n            borderRadius: '50%',\n            top: '-85px',\n            right: '-95px',\n            [theme.breakpoints.down('xs')]: {\n                top: '-105px',\n                right: '-140px'\n            }\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            backgroundColor: theme.palette.primary.dark,\n            borderRadius: '50%',\n            top: '-125px',\n            right: '-15px',\n            opacity: 0.7,\n            [theme.breakpoints.down('xs')]: {\n                top: '-155px',\n                right: '-70px'\n            }\n        }\n    },\n    content: {\n        padding: '20px !important'\n    },\n    avatar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        backgroundColor: theme.palette.primary.dark,\n        color: '#fff',\n        marginTop: '8px'\n    },\n    avatarRight: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.mediumAvatar,\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary[200],\n        zIndex: 1\n    },\n    cardHeading: {\n        fontSize: '2.125rem',\n        fontWeight: 500,\n        marginRight: '8px',\n        marginTop: '18px',\n        marginBottom: '8px'\n    },\n    subHeading: {\n        fontSize: '1.5rem',\n        fontWeight: 500,\n        color: theme.palette.primary[200]\n    },\n    avatarCricle: {\n        ...theme.typography.smallAvatar,\n        cursor: 'pointer',\n        backgroundColor: theme.palette.primary[200],\n        color: theme.palette.primary.dark\n    },\n    circleIcon: {\n        transform: 'rotate3d(1, 1, 1, 45deg)'\n    },\n    menuItem: {\n        marginRight: '14px',\n        fontSize: '1.25rem'\n    }\n}));\n\nconst TotalChartCard = () => {\n    const classes = useStyles();\n    var count = 0;\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const BASE_URL = 'https://backend-test.alsahaba.sa/api';\n    const [doctors, setDoctors] = React.useState([]);\n\n    const fetchDoctors = async () => {\n        await axios.get(`${BASE_URL}/users/`).then((response) => {\n            setDoctors(response.data);\n        });\n    };\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    useEffect(() => {\n        fetchDoctors();\n    }, []);\n    return (\n        <Card className={classes.card}>\n            <CardContent className={classes.content}>\n                <Grid container direction=\"column\">\n                    <Grid item>\n                        <Grid container alignItems=\"center\">\n                            <Grid item>\n                                <div style={{display: 'none'}}>{doctors?.map((doctor) => doctor.is_doctor && count++)}</div>\n                                <Typography className={classes.cardHeading}>{count}</Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item>\n                        <Typography className={classes.subHeading}>Registered Doctors</Typography>\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default TotalChartCard;\n","import value from '../../../../assets/scss/_themes-vars.module.scss';\n\nconst chartData = {\n    height: 480,\n    type: 'bar',\n    options: {\n        chart: {\n            stacked: true,\n            toolbar: {\n                show: true\n            },\n            zoom: {\n                enabled: true\n            }\n        },\n        colors: [value['deepPurple500'], value['blue500'], value['blue200'], value['deepPurple50']],\n        responsive: [\n            {\n                breakpoint: 480,\n                options: {\n                    legend: {\n                        position: 'bottom',\n                        offsetX: -10,\n                        offsetY: 0\n                    }\n                }\n            }\n        ],\n        plotOptions: {\n            bar: {\n                horizontal: false\n            }\n        },\n        xaxis: {\n            type: 'string',\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n            labels: {\n                style: {\n                    colors: []\n                }\n            }\n        },\n        yaxis: {\n            labels: {\n                style: {\n                    colors: []\n                }\n            }\n        },\n        legend: {\n            show: true,\n            fontSize: '14px',\n            fontFamily: `'Roboto', sans-serif`,\n            position: 'bottom',\n            offsetX: 10,\n            labels: {\n                colors: value['grey500'],\n                useSeriesColors: false\n            },\n            markers: {\n                width: 16,\n                height: 16,\n                radius: 5\n            },\n            itemMargin: {\n                horizontal: 15,\n                vertical: 8\n            }\n        },\n        fill: {\n            type: 'solid'\n        },\n        dataLabels: {\n            enabled: false\n        },\n        grid: {\n            show: true\n        }\n    },\n    series: [\n        {\n            name: 'Patients',\n            data: [32, 124, 32, 32, 32, 80, 32]\n        },\n        {\n            name: 'Consultations',\n            data: [32, 15, 15, 32, 64, 38, 78]\n        },\n    ]\n};\nexport default chartData;\n","import React, {useState} from 'react';\nimport {Card, CardContent, Grid, MenuItem, TextField, Typography, useTheme} from '@material-ui/core';\nimport Chart from 'react-apexcharts';\nimport barChart from './chart/bar-chart';\nimport {gridSpacing} from '../../../store/constant';\nimport axios from 'axios';\nimport {useEffect} from 'react';\n\nconst status = [\n    // {\n    //     value: 'today',\n    //     label: 'Today'\n    // },\n    {\n        value: 'month',\n        label: 'This Month'\n    },\n    {\n        value: 'year',\n        label: 'This Year'\n    }\n];\n\nconst ChartCard = () => {\n    const [value, setValue] = React.useState('month');\n    const theme = useTheme();\n    var count = 0;\n    var count2 = 0;\n    const BASE_URL = 'https://backend-test.alsahaba.sa/api';\n    const [consultations, setConsultations] = useState([]);\n    const [calls, setCalls] = useState([]);\n\n    const primary = theme.palette.secondary.main;\n    barChart.options.grid.borderColor = theme.palette.primary.light;\n    barChart.options.yaxis.labels.style.colors = [theme.palette.secondary.main];\n    barChart.options.xaxis.labels.style.colors = [primary, primary, primary, primary, primary, primary, primary];\n    const fetchCalls = async () => {\n        await axios.get(`${BASE_URL}/calls/`).then((response) => {\n            setCalls(response.data);\n        });\n    };\n    useEffect(() => {\n        fetchCalls();\n    }, []);\n    return (\n        <Card>\n            <CardContent>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12}>\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                            <Grid item>\n                                <Grid container direction=\"column\" spacing={1}>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\">Requested Consultations</Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"h3\">\n                                            <div style={{display: 'none'}}>{calls?.map((call) => call && count2++)}</div>\n                                            {count2}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\">Accepted Consultations</Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"h3\">\n                                            <div style={{display: 'none'}}>{calls?.map((call) => !call.is_new && count++)}</div>\n                                            {count}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <TextField\n                                    id=\"standard-select-currency\"\n                                    select\n                                    value={value}\n                                    onChange={(e) => setValue(e.target.value)}\n                                    variant=\"outlined\"\n                                >\n                                    {status.map((option) => (\n                                        <MenuItem key={option.value} value={option.value}>\n                                            {option.label}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Chart {...barChart} />\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default ChartCard;\n","import React, {useState, useRef} from 'react';\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardActions,\n    CardContent,\n    Divider,\n    Grid,\n    Link,\n    makeStyles,\n    FormControl,\n    TextareaAutosize,\n    InputLabel,\n    MenuItem,\n    Typography,\n    TextField,\n    OutlinedInput,\n    InputAdornment\n} from '@material-ui/core';\nimport {IconSearch} from '@tabler/icons';\n\nimport {gridSpacing} from '../../../store/constant';\nimport axios from 'axios';\nimport {useEffect} from 'react';\nimport {Link as RouterLink} from 'react-router-dom';\n\nimport MuiTypography from '@material-ui/core/Typography';\n\nimport SubCard from '../../../ui-component/cards/SubCard';\n\nconst useStyles = makeStyles((theme) => ({\n    cardAction: {\n        padding: '10px',\n        paddingTop: 0,\n        justifyContent: 'center'\n    },\n    primaryLight: {\n        color: theme.palette.primary[200],\n        cursor: 'pointer'\n    },\n    divider: {\n        marginTop: '12px',\n        marginBottom: '12px'\n    },\n    avatarSuccess: {\n        width: '16px',\n        height: '16px',\n        borderRadius: '5px',\n        backgroundColor: theme.palette.success.light,\n        color: theme.palette.success.dark,\n        marginLeft: '15px'\n    },\n    successDark: {\n        color: theme.palette.success.dark\n    },\n    avatarError: {\n        width: '16px',\n        height: '16px',\n        borderRadius: '5px',\n        backgroundColor: theme.palette.orange.light,\n        color: theme.palette.orange.dark,\n        marginLeft: '15px'\n    },\n    errorDark: {\n        color: theme.palette.orange.dark\n    }\n}));\n\nconst PopularCard = () => {\n    const classes = useStyles();\n    const BASE_URL = 'https://backend-test.alsahaba.sa/api';\n    const [consultations, setConsultations] = useState([]);\n    const [selectedConsultation, setSelectedConsultation] = React.useState([]);\n    const [visible, setVisibility] = React.useState(false);\n    const [visibleCreateConsultation, setVisiblityCreateConsultation] = React.useState(false);\n    const [users, setUsers] = React.useState([]);\n\n    const fetchUsers = async () => {\n        await axios.get(`${BASE_URL}/users/`).then((response) => {\n            setUsers(response.data);\n        });\n    };\n    const fetchConsultations = async () => {\n        await axios.get(`${BASE_URL}/consultations/`).then((response) => {\n            setConsultations(response.data.reverse());\n        });\n    };\n    const closePopup = () => {\n        setVisibility(false);\n    };\n    const showSelectedConsultation = (consultaion) => {\n        setVisibility(true);\n        setSelectedConsultation(consultaion);\n    };\n    const formatDate = (date) => {\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\n\n        // Split the formatted date into day, month, and year parts\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\n\n        // Convert the month abbreviation to uppercase\n        const capitalizedMonth = month.toUpperCase();\n\n        // Return the formatted date with uppercase month abbreviation and desired format\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\n    };\n    const showCreatePopUp = () => {\n        setVisiblityCreateConsultation(true);\n    };\n    const hideCreatePopUp = () => {\n        setVisiblityCreateConsultation(false);\n    };\n    useEffect(() => {\n        fetchConsultations();\n        fetchUsers();\n    }, []);\n    return (\n        <Card>\n            {visible && <ShowSelectedConsultation consultation={selectedConsultation} handleClose={closePopup} />}\n            {visibleCreateConsultation && <CreateConsultation handleClose={hideCreatePopUp} />}\n            <CardContent>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12}>\n                        <Grid container alignContent=\"center\" justifyContent=\"space-between\">\n                            <Grid item>\n                                <Typography variant=\"h4\">Recent Consultations</Typography>\n                            </Grid>\n                            <Grid item>\n                                <Button variant=\"contained\" color=\"primary\" disableElevation onClick={showCreatePopUp}>\n                                    Create Consultation\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        {consultations.slice(0, 5).map((consultation) => (\n                            <Grid\n                                container\n                                direction=\"column\"\n                                className=\"consultations\"\n                                key={consultation.id}\n                                onClick={() => showSelectedConsultation(consultation)}\n                            >\n                                <Grid item>\n                                    <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                        <Grid item>\n                                            <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                {consultation.chief_complaint}\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item>\n                                            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                <Grid item>\n                                                    {users.map(\n                                                        (user) =>\n                                                            consultation.patient_id === user.id && (\n                                                                <div key={user.id}>\n                                                                    <Typography variant=\"subtitle1\" color=\"primary\">\n                                                                        {user.full_name}\n                                                                    </Typography>\n                                                                    <Typography variant=\"subtitle2\" style={{color: 'black'}}>\n                                                                        {formatDate(consultation.created_at)}\n                                                                    </Typography>\n                                                                </div>\n                                                            )\n                                                    )}\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Grid item>\n                                    <Typography variant=\"subtitle2\" color=\"black\">\n                                        {users.map((user) => consultation.doctor_id === user.id && user.full_name)}\n                                    </Typography>\n                                </Grid>\n                                <Divider className={classes.divider} />\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Grid>\n            </CardContent>\n            <CardActions className={classes.cardAction}>\n                <Link component={RouterLink} to={'/consultations'}>\n                    View All\n                </Link>\n            </CardActions>\n        </Card>\n    );\n};\n\nexport default PopularCard;\n\nconst ShowSelectedConsultation = (props) => {\n    const BASE_URL = 'https://backend-test.alsahaba.sa/api';\n    const [users, setUsers] = React.useState([]);\n\n    const fetchUsers = async () => {\n        await axios.get(`${BASE_URL}/users/`).then((response) => {\n            setUsers(response.data);\n        });\n    };\n    const formatDate = (date) => {\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\n\n        // Split the formatted date into day, month, and year parts\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\n\n        // Convert the month abbreviation to uppercase\n        const capitalizedMonth = month.toUpperCase();\n\n        // Return the formatted date with uppercase month abbreviation and desired format\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\n    };\n    useEffect(() => {\n        fetchUsers();\n    }, []);\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <Card className=\"popup-container\">\n                    {console.log(props)}\n                    <CardHeader title=\"Consultation\" />\n                    <Divider />\n                    <CardContent className=\"popup-body\">\n                        <Button id=\"closeBtn\" onClick={() => props.handleClose()}>\n                            X\n                        </Button>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item xs={12} sm={6}>\n                                <SubCard\n                                    title={users.map((user) =>\n                                        props.consultation.patient_id == user.id ? user.full_name + ' Consultation' : ''\n                                    )}\n                                >\n                                    <Grid container direction=\"column\" id=\"poppins\" spacing={1}>\n                                        <Grid item>\n                                            <MuiTypography variant=\"h3\" gutterBottom>\n                                                Doctor name: &nbsp;\n                                                <span id=\"small-text\">\n                                                    {users.map((user) => (props.consultation.doctor_id == user.id ? user.full_name : ''))}\n                                                </span>\n                                            </MuiTypography>\n                                            <MuiTypography variant=\"h3\" gutterBottom>\n                                                Patient name: &nbsp;\n                                                <span id=\"small-text\">\n                                                    {users.map((user) => (props.consultation.patient_id == user.id ? user.full_name : ''))}\n                                                </span>\n                                            </MuiTypography>\n                                            <MuiTypography variant=\"h3\" gutterBottom>\n                                                Date: &nbsp;\n                                                <span id=\"small-text\">{formatDate(props.consultation.created_at)}</span>\n                                            </MuiTypography>\n                                            <MuiTypography variant=\"h3\" gutterBottom>\n                                                Chief Complaint: &nbsp;\n                                                <span id=\"small-text\">{props.consultation.chief_complaint}</span>\n                                            </MuiTypography>\n                                            <MuiTypography variant=\"h3\" gutterBottom>\n                                                History of illness: &nbsp;\n                                                <span id=\"small-text\">{props.consultation.history_of_illness}</span>\n                                            </MuiTypography>\n                                            <MuiTypography variant=\"h3\" gutterBottom>\n                                                Review of systems: &nbsp;\n                                                <span id=\"small-text\">{props.consultation.review_of_systems}</span>\n                                            </MuiTypography>\n                                            <MuiTypography variant=\"h3\" gutterBottom>\n                                                Examination: &nbsp;\n                                                <span id=\"small-text\">{props.consultation.examination}</span>\n                                            </MuiTypography>\n                                            <MuiTypography variant=\"h3\" gutterBottom>\n                                                Assessment: &nbsp;\n                                                <span id=\"small-text\">{props.consultation.assessment}</span>\n                                            </MuiTypography>\n                                            <MuiTypography variant=\"h3\" gutterBottom>\n                                                Order labs: &nbsp;\n                                                <span id=\"small-text\">{props.consultation.order_labs}</span>\n                                            </MuiTypography>\n                                            <MuiTypography variant=\"h3\" gutterBottom>\n                                                Order labs result: &nbsp;\n                                                <span id=\"small-text\">\n                                                    {props.consultation.upload_order_labs ? (\n                                                        <a href={props.consultation.upload_order_labs}>View result</a>\n                                                    ) : (\n                                                        'none'\n                                                    )}\n                                                </span>\n                                            </MuiTypography>\n                                            <MuiTypography variant=\"h3\" gutterBottom>\n                                                Sick leave: &nbsp;\n                                                <span id=\"small-text\">{props.consultation.sick_leave}</span>\n                                            </MuiTypography>\n                                            <MuiTypography variant=\"h3\" gutterBottom>\n                                                Last updated: &nbsp;\n                                                <span id=\"small-text\">{formatDate(props.consultation.updated_at)}</span>\n                                            </MuiTypography>\n                                        </Grid>\n                                    </Grid>\n                                </SubCard>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </Card>\n            </Grid>\n        </Grid>\n    );\n};\nconst useCustomStyles = makeStyles({\n    table: {\n        minWidth: 350\n    },\n    searchControl: {\n        width: '100%',\n        paddingRight: '8px',\n        paddingLeft: '16px',\n        marginBottom: '16px',\n        marginTop: '16px'\n    }\n});\nconst CreateConsultation = (props) => {\n    const classes = useCustomStyles();\n    const BASE_URL = 'https://backend-test.alsahaba.sa/api';\n    const [users, setUsers] = React.useState([]);\n    const [patientSearchResult, setPatientSearchResult] = React.useState('');\n    const [show, setShow] = React.useState(false);\n    const [showPatient, setShowPatient] = React.useState(false);\n    const [doctorSearchResult, setDoctorSearchResult] = React.useState('');\n    const [patientId, setPatientId] = React.useState(null);\n    const [doctorId, setDoctorId] = React.useState(null);\n\n    const [visible, setVisible] = useState(false);\n    const fetchUsers = async () => {\n        await axios.get(`${BASE_URL}/users/`).then((response) => {\n            setUsers(response.data);\n        });\n    };\n    const Popup = ({handleClose}) => {\n        const modalRef = useRef(null);\n\n        const closeWithAnimation = () => {\n            if (modalRef.current) {\n                modalRef.current.classList.add('closing');\n                modalRef.current.classList.remove('closing');\n                handleClose();\n            }\n        };\n        return (\n            <div ref={modalRef} className=\"graphpop\">\n                <div className=\"content\">\n                    <div className=\"logo-img\">\n                        <a href=\"/\">\n                            <img src={process.env.PUBLIC_URL + '/images/double-check.gif'} alt=\"\" />\n                        </a>\n                    </div>\n                    <h2>\n                        <span style={{color: '#ba8abb'}}>Consultation</span> saved <span style={{color: '#24ab94'}}>successfully!</span>\n                    </h2>\n                    <div className=\"cancel-btn\">\n                        <img src={process.env.PUBLIC_URL + '/images/cancel.png'} id=\"cancel-here\" onClick={closeWithAnimation} />\n                    </div>\n                    <div style={{display: 'none'}}>\n                        {setTimeout(() => {\n                            closeWithAnimation();\n                        }, 2000)}\n                    </div>\n                </div>\n            </div>\n        );\n    };\n    const fetchSearch = async (user) => {\n        await axios.get(`${BASE_URL}/search?query=${user === 'patient' ? patientSearchResult : doctorSearchResult}`).then((response) => {\n            setUsers(response.data);\n        });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        console.log(doctorId);\n        console.log(patientId);\n        var bodyFormData = new FormData();\n        bodyFormData.append('doctor_id', doctorId);\n        bodyFormData.append('patient_id', patientId);\n        bodyFormData.append('chief_complaint', e.target.chief_complaint.value);\n        bodyFormData.append('history_of_illness', e.target.history_of_illness.value);\n        bodyFormData.append('review_of_systems', e.target.review_of_systems.value);\n        bodyFormData.append('examination', e.target.examination.value);\n        bodyFormData.append('assessment', e.target.assessment.value);\n        if (e.target.medication == undefined) {\n            bodyFormData.append('medication', 'No');\n        } else {\n            bodyFormData.append('medication', e.target.medication.value);\n        }\n        if (e.target.order_labs === undefined) {\n            bodyFormData.append('order_labs', 'No');\n        } else {\n            bodyFormData.append('order_labs', e.target.order_labs.value);\n        }\n        if (e.target.sick_leave == undefined) {\n            bodyFormData.append('sick_leave', 0);\n        } else {\n            bodyFormData.append('sick_leave', e.target.sick_leave.value);\n        }\n        await axios({\n            method: 'post',\n            url: `${BASE_URL}/create-consultation/`,\n            data: bodyFormData,\n            headers: {'Content-Type': 'multipart/form-data'}\n        })\n            .then(function (response) {\n                showPopup();\n                console.log(response);\n            })\n            .catch(function (response) {\n                console.log(response);\n            });\n    };\n    const showPopup = () => {\n        setVisible(true);\n    };\n    const closePopup = () => {\n        setVisible(false);\n    };\n    const handleSearchPatients = (event) => {\n        setShowPatient(true);\n        console.log(event.target.value);\n        if (event.target.value === '') {\n            setPatientSearchResult(event.target.value);\n            fetchUsers();\n        } else {\n            setPatientSearchResult(event.target.value);\n            fetchSearch('patient');\n        }\n    };\n    const handleDoctorInputHide = (iqama_number, doctor_id) => {\n        setDoctorSearchResult(iqama_number);\n        setDoctorId(doctor_id);\n        setShow(false);\n    };\n    const handlePatientInputHide = (iqama_number, patient_id) => {\n        setPatientSearchResult(iqama_number);\n        setPatientId(patient_id);\n        setShowPatient(false);\n    };\n    const handlSearcheDoctors = (event) => {\n        console.log(event.target.value);\n        setShow(true);\n        if (event.target.value === '') {\n            setDoctorSearchResult(event.target.value);\n            fetchUsers();\n        } else {\n            setDoctorSearchResult(event.target.value);\n            fetchSearch('doctor');\n        }\n    };\n    useEffect(() => {\n        fetchUsers();\n    }, []);\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <Card className=\"popup-container\">\n                    <CardHeader title=\"Consultation\" />\n                    <Divider />\n                    <CardContent className=\"popup-body overflowY\" id=\"popupCustom\">\n                        <Button id=\"closeBtn\" onClick={() => props.handleClose()}>\n                            X\n                        </Button>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item xs={12} sm={6}>\n                                <SubCard title=\"Create Consultation\">\n                                    <form onSubmit={handleSubmit}>\n                                        <Grid container direction=\"column\" id=\"poppins\" spacing={1} className=\"overflowY\">\n                                            <Grid item>\n                                                <FormControl fullWidth className=\"mt-5\">\n                                                    <InputLabel id=\"demo-simple-select-label\">Doctor's Iqama Number:</InputLabel>\n\n                                                    <OutlinedInput\n                                                        className={classes.searchControl}\n                                                        id=\"input-search-profile\"\n                                                        name=\"doctor_id\"\n                                                        value={doctorSearchResult}\n                                                        onChange={handlSearcheDoctors}\n                                                        placeholder=\"Search Doctors\"\n                                                        startAdornment={\n                                                            <InputAdornment position=\"start\">\n                                                                <IconSearch stroke={1.5} size=\"1.3rem\" className={classes.startAdornment} />\n                                                            </InputAdornment>\n                                                        }\n                                                        aria-describedby=\"search-helper-text\"\n                                                        inputProps={{\n                                                            'aria-label': 'weight'\n                                                        }}\n                                                        labelWidth={0}\n                                                    />\n                                                    {doctorSearchResult && (\n                                                        <>\n                                                            {users\n                                                                ?.filter((user) => user.is_doctor)\n                                                                .map(\n                                                                    (doctor) =>\n                                                                        show && (\n                                                                            <MenuItem\n                                                                                key={doctor.id}\n                                                                                onClick={() =>\n                                                                                    handleDoctorInputHide(doctor.iqama_number, doctor.id)\n                                                                                }\n                                                                            >\n                                                                                {doctor.iqama_number}\n                                                                            </MenuItem>\n                                                                        )\n                                                                )}\n                                                        </>\n                                                    )}\n                                                </FormControl>\n                                            </Grid>\n                                            <Grid item>\n                                                <FormControl fullWidth className=\"mt-5\">\n                                                    <InputLabel id=\"demo-simple-select-label\">Patient's Iqama Number:</InputLabel>\n                                                    <OutlinedInput\n                                                        className={classes.searchControl}\n                                                        id=\"input-search-profile\"\n                                                        value={patientSearchResult}\n                                                        onChange={handleSearchPatients}\n                                                        placeholder=\"Search patients\"\n                                                        startAdornment={\n                                                            <InputAdornment position=\"start\">\n                                                                <IconSearch stroke={1.5} size=\"1.3rem\" className={classes.startAdornment} />\n                                                            </InputAdornment>\n                                                        }\n                                                        aria-describedby=\"search-helper-text\"\n                                                        inputProps={{\n                                                            'aria-label': 'weight'\n                                                        }}\n                                                        labelWidth={0}\n                                                    />\n                                                    {patientSearchResult && (\n                                                        <>\n                                                            {users\n                                                                .filter((user) => !user?.is_doctor)\n                                                                .map(\n                                                                    (patient, index) =>\n                                                                        showPatient && (\n                                                                            <MenuItem\n                                                                                key={patient.id}\n                                                                                value={patient.id}\n                                                                                name=\"patient_id\"\n                                                                                onClick={() =>\n                                                                                    handlePatientInputHide(patient.iqama_number, patient.id)\n                                                                                }\n                                                                            >\n                                                                                {patient.iqama_number}\n                                                                            </MenuItem>\n                                                                        )\n                                                                )}\n                                                        </>\n                                                    )}\n                                                </FormControl>\n                                            </Grid>\n                                            <Grid item>\n                                                <FormControl fullWidth className=\"mt-5\">\n                                                    <InputLabel id=\"demo-textarea-select-label\">Chief Complaint:</InputLabel>\n                                                    <TextareaAutosize\n                                                        className=\"mt-2\"\n                                                        defaultValue={''}\n                                                        name=\"chief_complaint\"\n                                                    ></TextareaAutosize>\n                                                </FormControl>\n                                            </Grid>\n                                            <Grid item>\n                                                <FormControl fullWidth className=\"mt-5\">\n                                                    <InputLabel id=\"demo-textarea-select-label\">History of illness:</InputLabel>\n                                                    <TextareaAutosize\n                                                        className=\"mt-2\"\n                                                        defaultValue={''}\n                                                        name=\"history_of_illness\"\n                                                    ></TextareaAutosize>\n                                                </FormControl>\n                                            </Grid>\n                                            <Grid item>\n                                                <FormControl fullWidth className=\"mt-5\">\n                                                    <InputLabel id=\"demo-textarea-select-label\">Review of systems:</InputLabel>\n                                                    <TextareaAutosize\n                                                        className=\"mt-2\"\n                                                        defaultValue={''}\n                                                        name=\"review_of_systems\"\n                                                    ></TextareaAutosize>\n                                                </FormControl>\n                                            </Grid>\n                                            <Grid item>\n                                                <FormControl fullWidth className=\"mt-5\">\n                                                    <InputLabel id=\"demo-textarea-select-label\">Examination:</InputLabel>\n                                                    <TextareaAutosize\n                                                        className=\"mt-2\"\n                                                        defaultValue={''}\n                                                        name=\"examination\"\n                                                    ></TextareaAutosize>\n                                                </FormControl>\n                                            </Grid>\n                                            <Grid item>\n                                                <FormControl fullWidth className=\"mt-5\">\n                                                    <InputLabel id=\"demo-textarea-select-label\">Assessment:</InputLabel>\n                                                    <TextareaAutosize\n                                                        className=\"mt-2\"\n                                                        defaultValue={''}\n                                                        name=\"assessment\"\n                                                    ></TextareaAutosize>\n                                                </FormControl>\n                                            </Grid>\n                                            <Grid item>\n                                                <FormControl fullWidth className=\"mt-5\">\n                                                    <InputLabel id=\"demo-textarea-select-label\">Medication:</InputLabel>\n                                                    <TextareaAutosize\n                                                        className=\"mt-2\"\n                                                        defaultValue={''}\n                                                        name=\"medication\"\n                                                    ></TextareaAutosize>\n                                                </FormControl>\n                                            </Grid>\n                                            <Grid item>\n                                                <FormControl fullWidth className=\"mt-5\">\n                                                    <InputLabel id=\"demo-textarea-select-label\">Order labs:</InputLabel>\n                                                    <TextareaAutosize\n                                                        className=\"mt-2\"\n                                                        defaultValue={''}\n                                                        name=\"order_labs\"\n                                                    ></TextareaAutosize>\n                                                </FormControl>\n                                            </Grid>\n                                            <Grid item>\n                                                <FormControl fullWidth className=\"mt-5\">\n                                                    <InputLabel id=\"demo-textarea-select-label\">Sick Leave:</InputLabel>\n                                                    <TextField\n                                                        className=\"mt-2\"\n                                                        defaultValue={''}\n                                                        type=\"number\"\n                                                        name=\"sick_leave\"\n                                                    ></TextField>\n                                                </FormControl>\n                                            </Grid>\n                                            <Grid item>\n                                                <FormControl className=\"mt-5\">\n                                                    <Button variant=\"contained\" color=\"primary\" disableElevation type=\"submit\">\n                                                        Create Consultation\n                                                    </Button>\n                                                </FormControl>\n                                            </Grid>\n                                        </Grid>\n                                    </form>\n                                </SubCard>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </Card>\n            </Grid>\n            {visible && <Popup handleClose={closePopup} />}\n        </Grid>\n    );\n};\n","import React, {useState} from 'react';\nimport {Avatar, Card, CardContent, Grid, makeStyles, Menu, MenuItem, Typography} from '@material-ui/core';\nimport axios from 'axios';\nimport {useEffect} from 'react';\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        backgroundColor: '#212af3',\n        color: '#fff',\n        overflow: 'hidden',\n        position: 'relative',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            backgroundColor: theme.palette.primary.dark,\n            borderRadius: '50%',\n            top: '-85px',\n            right: '-95px',\n            [theme.breakpoints.down('xs')]: {\n                top: '-105px',\n                right: '-140px'\n            }\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            backgroundColor: theme.palette.primary.dark,\n            borderRadius: '50%',\n            top: '-125px',\n            right: '-15px',\n            opacity: 0.7,\n            [theme.breakpoints.down('xs')]: {\n                top: '-155px',\n                right: '-70px'\n            }\n        }\n    },\n    content: {\n        padding: '20px !important'\n    },\n    avatar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        backgroundColor: theme.palette.primary.dark,\n        color: '#fff',\n        marginTop: '8px'\n    },\n    avatarRight: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.mediumAvatar,\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary[200],\n        zIndex: 1\n    },\n    cardHeading: {\n        fontSize: '2.125rem',\n        fontWeight: 500,\n        marginRight: '8px',\n        marginTop: '18px',\n        marginBottom: '8px'\n    },\n    subHeading: {\n        fontSize: '1.5rem',\n        fontWeight: 500,\n        color: theme.palette.primary[200]\n    },\n    avatarCricle: {\n        ...theme.typography.smallAvatar,\n        cursor: 'pointer',\n        backgroundColor: theme.palette.primary[200],\n        color: theme.palette.primary.dark\n    },\n    circleIcon: {\n        transform: 'rotate3d(1, 1, 1, 45deg)'\n    },\n    menuItem: {\n        marginRight: '14px',\n        fontSize: '1.25rem'\n    }\n}));\n\nconst ConsultationsCard = () => {\n    const classes = useStyles();\n    var count = 0;\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const BASE_URL = 'https://backend-test.alsahaba.sa/api';\n    const [consultations, setConsultations] = useState([]);\n\n    const fetchConsultations = async () => {\n        await axios.get(`${BASE_URL}/consultations/`).then((response) => {\n            setConsultations(response.data);\n        });\n    };\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    useEffect(() => {\n        fetchConsultations();\n    }, []);\n    return (\n        <Card className={classes.card}>\n            <CardContent className={classes.content}>\n                <Grid container direction=\"column\">\n                    <Grid item>\n                        <Grid container alignItems=\"center\">\n                            <Grid item>\n                                <div style={{display: 'none'}}>{consultations?.map((consultation) => consultation && count++)}</div>\n                                <Typography className={classes.cardHeading}>{count}</Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item>\n                        <Typography className={classes.subHeading}>Total Consultations</Typography>\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default ConsultationsCard;\n","import React from 'react';\nimport {Avatar, Card, CardContent, List, ListItem, ListItemAvatar, ListItemText, makeStyles, Typography} from '@material-ui/core';\n\nimport TableChartOutlinedIcon from '@material-ui/icons/TableChartOutlined';\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        backgroundColor: theme.palette.primary.dark,\n        color: theme.palette.primary.light,\n        overflow: 'hidden',\n        position: 'relative',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: 'linear-gradient(210.04deg, #90CAF9 -50.94%, rgba(144, 202, 249, 0) 83.49%)',\n            borderRadius: '50%',\n            top: '-30px',\n            right: '-180px'\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: 'linear-gradient(140.9deg, #90CAF9 -14.02%, rgba(144, 202, 249, 0) 77.58%)',\n            borderRadius: '50%',\n            top: '-160px',\n            right: '-130px'\n        }\n    },\n    content: {\n        padding: '5px !important',\n        paddingLeft: '15px !important'\n    },\n    avatar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        backgroundColor: theme.palette.primary[800],\n        color: '#fff'\n    },\n    primary: {\n        color: '#fff'\n    },\n    secondary: {\n        color: theme.palette.primary.light,\n        marginTop: '5px'\n    },\n    padding: {\n        paddingTop: 0,\n        paddingBottom: 0\n    }\n}));\n\nconst TotalIncomePatternCard = ({consultationCosts}) => {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.card}>\n            <CardContent className={classes.content}>\n                <List className={classes.padding}>\n                    <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\n                        <ListItemAvatar>\n                            <Avatar variant=\"rounded\" className={classes.avatar}>\n                                <TableChartOutlinedIcon fontSize=\"inherit\" />\n                            </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText\n                            className={classes.padding}\n                            primary={\n                                <Typography variant=\"h4\" className={classes.primary}>\n                                    {consultationCosts} SAR\n                                </Typography>\n                            }\n                            secondary={\n                                <Typography variant=\"subtitle2\" className={classes.secondary}>\n                                    Amount\n                                </Typography>\n                            }\n                        />\n                    </ListItem>\n                </List>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default TotalIncomePatternCard;\n","import React from 'react';\nimport {Avatar, Card, CardContent, List, ListItem, ListItemAvatar, ListItemText, makeStyles, Typography} from '@material-ui/core';\n\nimport StorefrontTwoToneIcon from '@material-ui/icons/StorefrontTwoTone';\n\nconst useStyles = makeStyles((theme) => ({\n    content: {\n        padding: '5px !important',\n        paddingLeft: '15px !important',\n        backgroundColor: '#333333',\n        color: 'white'\n    },\n    avatar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        backgroundColor: theme.palette.warning.light,\n        color: theme.palette.warning.dark\n    },\n    secondary: {\n        color: theme.palette.grey[500],\n        marginTop: '5px'\n    },\n    padding: {\n        paddingTop: 0,\n        paddingBottom: 0\n    }\n}));\n\nconst TotalIncomeCard = () => {\n    const classes = useStyles();\n\n    return (\n        <Card>\n            <CardContent className={classes.content}>\n                <List className={classes.padding}>\n                    <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\n                        <ListItemAvatar>\n                            <Avatar variant=\"rounded\" className={classes.avatar}>\n                                <StorefrontTwoToneIcon fontSize=\"inherit\" />\n                            </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText\n                            className={classes.padding}\n                            primary={\n                                <Typography variant=\"h4\" style={{color: 'white'}}>\n                                    Payments\n                                </Typography>\n                            }\n                            secondary={\n                                <Typography variant=\"subtitle2\" className={classes.secondary}>\n                                    View all\n                                </Typography>\n                            }\n                        />\n                    </ListItem>\n                </List>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default TotalIncomeCard;\n","// UpdatePaymentAmount.js\r\nimport React, {useEffect, useState} from 'react';\r\nimport {Modal, Typography, Input, Button} from '@material-ui/core';\r\nimport axios from 'axios';\r\n\r\nconst UpdatePaymentAmount = ({isModalOpen, handleModalClose, onConsultationCostsChange}) => {\r\n    const [consultationCosts, setConsultationCosts] = useState('');\r\n    const BASE_URL = 'https://backend-test.alsahaba.sa/api';\r\n\r\n    const getConsultationPrice = async () => {\r\n        try {\r\n            const response = await axios.get(`${BASE_URL}/payment-amount/`);\r\n            if (response.data && response.data.length > 0) {\r\n                const lastObject = response.data[response.data.length - 1].amount;\r\n                setConsultationCosts(lastObject.toString());\r\n                onConsultationCostsChange(lastObject.toString()); // Pass the value to the parent component\r\n            } else {\r\n                console.error('Unexpected response data:', response.data);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching consultation price:', error);\r\n        }\r\n    };\r\n\r\n    const handleConsultationCostsChange = (event) => {\r\n        setConsultationCosts(event.target.value);\r\n    };\r\n\r\n    const handleUpdateAmount = async (event) => {\r\n        event.preventDefault(); // Prevents the form from submitting and triggering a page reload\r\n        try {\r\n            // Assuming you want to send the consultationCosts as the 'amount' field in the POST request\r\n            await axios.post(`${BASE_URL}/payment-amount/`, {amount: consultationCosts});\r\n\r\n            // Fetch the updated amount after submitting the form\r\n            const updatedResponse = await axios.get(`${BASE_URL}/payment-amount/`);\r\n            if (updatedResponse.data && updatedResponse.data.length > 0) {\r\n                const updatedAmount = updatedResponse.data[updatedResponse.data.length - 1].amount;\r\n                window.location.reload();\r\n                // You can use updatedAmount as needed, maybe update state or inform the user\r\n            } else {\r\n                console.error('Unexpected response data:', updatedResponse.data);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating amount:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getConsultationPrice();\r\n    }, [isModalOpen]);\r\n\r\n    return (\r\n        <Modal\r\n            open={isModalOpen}\r\n            onClose={handleModalClose}\r\n            aria-labelledby=\"total-income-pattern-modal-title\"\r\n            aria-describedby=\"total-income-pattern-modal-description\"\r\n        >\r\n            <div\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: '50%',\r\n                    left: '50%',\r\n                    transform: 'translate(-50%, -50%)',\r\n                    backgroundColor: 'white',\r\n                    padding: '20px',\r\n                    outline: 'none'\r\n                }}\r\n            >\r\n                <Typography variant=\"h5\" id=\"total-income-pattern-modal-title\" gutterBottom>\r\n                    Price per consultation:\r\n                </Typography>\r\n                <form style={{textAlign: 'center'}} onSubmit={handleUpdateAmount}>\r\n                    <div style={{marginBottom: '20px', padding: '5px'}}>\r\n                        <Input\r\n                            type=\"number\"\r\n                            id=\"pricePerConsultation\"\r\n                            name=\"pricePerConsultation\"\r\n                            placeholder=\"Consultation costs\"\r\n                            value={consultationCosts}\r\n                            onChange={handleConsultationCostsChange}\r\n                            style={{\r\n                                padding: '5px',\r\n                                border: '0.5px solid black',\r\n                                borderRadius: '10px',\r\n                                outline: 'none'\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <Button variant=\"contained\" color=\"primary\" disableElevation type=\"submit\">\r\n                        Update amount\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default UpdatePaymentAmount;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Modal, Typography, Input, Button, TextareaAutosize} from '@material-ui/core';\r\nimport axios from 'axios';\r\n\r\nconst AdminMessageModal = ({isModalOpen, handleModalClose, onAdminMessageTitleChange, onAdminMessageChange}) => {\r\n    const [title, setTitle] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const BASE_URL = 'https://backend-test.alsahaba.sa/api';\r\n\r\n    const getAdminMessageData = async () => {\r\n        try {\r\n            const response = await axios.get(`${BASE_URL}/admin-message/`);\r\n            if (response.data && response.data.length > 0) {\r\n                const lastObjectTitle = response.data[0].message_title;\r\n                const lastObjectMessage = response.data[0].message;\r\n                setTitle(lastObjectTitle.toString());\r\n                setMessage(lastObjectMessage.toString());\r\n                onAdminMessageTitleChange(lastObjectTitle.toString()); // Pass the value to the parent component\r\n                onAdminMessageChange(lastObjectMessage.toString()); // Pass the value to the parent component\r\n            } else {\r\n                console.error('Unexpected response data:', response.data);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching', error);\r\n        }\r\n    };\r\n\r\n    const handleTitleChange = (event) => {\r\n        setTitle(event.target.value);\r\n    };\r\n    const handleMessageChange = (event) => {\r\n        setMessage(event.target.value);\r\n    };\r\n\r\n    const handleUpdateAdminMessage = async (event) => {\r\n        event.preventDefault(); // Prevents the form from submitting and triggering a page reload\r\n        try {\r\n            // Assuming you want to send the consultationCosts as the 'amount' field in the POST request\r\n            await axios.put(`${BASE_URL}/update-admin-message/1/`, {message_title: title, message: message});\r\n            window.location.reload();\r\n        } catch (error) {\r\n            console.error('Error updating amount:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getAdminMessageData();\r\n    }, [isModalOpen]);\r\n\r\n    return (\r\n        <Modal\r\n            open={isModalOpen}\r\n            onClose={handleModalClose}\r\n            aria-labelledby=\"total-income-pattern-modal-title\"\r\n            aria-describedby=\"total-income-pattern-modal-description\"\r\n        >\r\n            <div\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: '50%',\r\n                    left: '50%',\r\n                    transform: 'translate(-50%, -50%)',\r\n                    backgroundColor: 'white',\r\n                    padding: '20px',\r\n                    outline: 'none'\r\n                }}\r\n            >\r\n                <Typography variant=\"h5\" id=\"total-income-pattern-modal-title\" gutterBottom>\r\n                    Set admin title and message:\r\n                </Typography>\r\n                <form style={{textAlign: 'center'}} onSubmit={handleUpdateAdminMessage}>\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            gap: '25px',\r\n                            marginBottom: '20px',\r\n                            padding: '5px',\r\n                            width: '350px'\r\n                        }}\r\n                    >\r\n                        <Input\r\n                            type=\"text\"\r\n                            id=\"pricePerConsultation\"\r\n                            name=\"pricePerConsultation\"\r\n                            placeholder=\"Admin message title\"\r\n                            value={title}\r\n                            onChange={handleTitleChange}\r\n                        />\r\n                        <TextareaAutosize\r\n                            placeholder=\"Admin message\"\r\n                            value={message}\r\n                            onChange={handleMessageChange}\r\n                            style={{borderBottom: '2px solid #2196f3'}}\r\n                        />\r\n                    </div>\r\n                    <Button variant=\"contained\" color=\"success\" disableElevation type=\"submit\">\r\n                        Set admin message\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default AdminMessageModal;\r\n","import React from 'react';\nimport {Avatar, Card, CardContent, List, ListItem, ListItemText, makeStyles, Typography} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        backgroundColor: theme.palette.secondary.dark,\n        color: theme.palette.secondary.light,\n        overflow: 'hidden',\n        position: 'relative',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: 'linear-gradient(210.04deg, #90CAF9 -50.94%, rgba(144, 202, 249, 0) 83.49%)',\n            borderRadius: '50%',\n            top: '-30px',\n            right: '-180px'\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: 'linear-gradient(140.9deg, #90CAF9 -14.02%, rgba(144, 202, 249, 0) 77.58%)',\n            borderRadius: '50%',\n            top: '-160px',\n            right: '-130px'\n        }\n    },\n    content: {\n        padding: '5px !important',\n        paddingLeft: '15px !important'\n    },\n    avatar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        backgroundColor: theme.palette.primary[800],\n        color: '#fff'\n    },\n    primary: {\n        color: '#fff'\n    },\n    secondary: {\n        color: theme.palette.primary.light,\n        marginTop: '5px'\n    },\n    padding: {\n        paddingTop: 0,\n        paddingBottom: 0\n    }\n}));\n\nconst AdminMessageCard = () => {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.card}>\n            <CardContent className={classes.content}>\n                <List className={classes.padding}>\n                    <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\n                        <ListItemText\n                            className={classes.padding}\n                            primary={\n                                <Typography variant=\"h4\" className={classes.primary}>\n                                    Set\n                                </Typography>\n                            }\n                            secondary={\n                                <Typography variant=\"subtitle2\" className={classes.secondary}>\n                                    admin message\n                                </Typography>\n                            }\n                        />\n                    </ListItem>\n                </List>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default AdminMessageCard;\n","// Dashboard.js\nimport React, {useState} from 'react';\nimport {Grid, Modal, Typography, Paper, Button} from '@material-ui/core';\n\nimport {gridSpacing} from '../../store/constant';\nimport PatientsCard from '../../ui-component/cards/PatientsCard';\nimport DoctorsCard from '../../ui-component/cards/DoctorsCard';\nimport ChartCard from '../../ui-component/cards/ChartCard';\nimport PopularCard from '../../ui-component/cards/PopularCard';\nimport ConsultationsCard from '../../ui-component/cards/ConsultationsCard';\nimport {useHistory} from 'react-router-dom';\nimport TotalIncomePatternCard from '../../ui-component/cards/TotalIncomePatternCard';\nimport TotalIncomeCard from '../../ui-component/cards/TotalIncomeCard';\nimport UpdatePaymentAmount from '../../ui-component/UpdatePaymentAmount';\nimport AdminMessageModal from '../../ui-component/AdminMessageModal';\nimport AdminMessageCard from '../../ui-component/cards/AdminMessageCard';\n\nconst Dashboard = () => {\n    let history = useHistory();\n    const routeChange = (route) => {\n        let path = `/${route}`;\n        history.push(path);\n    };\n    const [isModalOpen, setModalOpen] = useState(false);\n    const [isAdminMessageModalOpen, setAdminMessageModalOpen] = useState(false);\n    const [consultationCosts, setConsultationCosts] = useState('');\n    const [adminMessageTitle, setAdminMessageTitle] = useState('');\n    const [adminMessage, setAdminMessage] = useState('');\n\n    const handleAdminMessageModalOpen = () => {\n        setAdminMessageModalOpen(true);\n    };\n\n    const handleAdminMessageModalClose = () => {\n        setAdminMessageModalOpen(false);\n    };\n\n    const handleModalOpen = () => {\n        setModalOpen(true);\n    };\n\n    const handleModalClose = () => {\n        setModalOpen(false);\n    };\n\n    const handleConsultationCostsChange = (value) => {\n        setConsultationCosts(value);\n    };\n    const handleAdminMessageTitle = (value) => {\n        setAdminMessageTitle(value);\n    };\n    const handleAdminMessage = (value) => {\n        setAdminMessage(value);\n    };\n\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12} md={3} onClick={() => routeChange('patients')} style={{cursor: 'pointer'}}>\n                <PatientsCard />\n            </Grid>\n            <Grid item xs={12} md={3} onClick={() => routeChange('doctors')} style={{cursor: 'pointer'}}>\n                <DoctorsCard />\n            </Grid>\n            <Grid item xs={12} md={3} onClick={() => routeChange('consultations')} style={{cursor: 'pointer'}}>\n                <ConsultationsCard />\n            </Grid>\n            <Grid item xs={12} md={3}>\n                <Grid container spacing={1.5}>\n                    <Grid item xs={12} md={6} style={{cursor: 'pointer'}} onClick={handleModalOpen}>\n                        <TotalIncomePatternCard consultationCosts={consultationCosts} />\n                    </Grid>\n                    <Grid item xs={12} md={6} style={{cursor: 'pointer'}} onClick={handleAdminMessageModalOpen}>\n                        <AdminMessageCard />\n                    </Grid>\n\n                    <Grid item xs={12} md={12} onClick={() => routeChange('payments')} style={{cursor: 'pointer'}}>\n                        <TotalIncomeCard />\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12} md={9}>\n                <ChartCard />\n            </Grid>\n            <Grid item xs={12} md={3}>\n                <PopularCard />\n            </Grid>\n            <UpdatePaymentAmount\n                isModalOpen={isModalOpen}\n                handleModalClose={handleModalClose}\n                onConsultationCostsChange={handleConsultationCostsChange}\n            />\n            <AdminMessageModal\n                isModalOpen={isAdminMessageModalOpen}\n                handleModalClose={handleAdminMessageModalClose}\n                onAdminMessageTitleChange={handleAdminMessageTitle}\n                onAdminMessageChange={handleAdminMessage}\n            />\n        </Grid>\n    );\n};\n\nexport default Dashboard;\n"],"sourceRoot":""}