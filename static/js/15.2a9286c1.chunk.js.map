{"version":3,"sources":["../node_modules/@material-ui/core/InputAdornment/inputAdornmentClasses.js","../node_modules/@material-ui/core/InputAdornment/InputAdornment.js","../node_modules/react-bootstrap/esm/Container.js","views/pages/ShowConsultationCallID.js","views/pages/ShowSelectedPayment.js","views/pages/Payments.js"],"names":["getInputAdornmentUtilityClass","slot","generateUtilityClass","inputAdornmentClasses","generateUtilityClasses","InputAdornmentRoot","experimentalStyled","name","overridesResolver","props","styles","styleProps","deepmerge","_extends","concat","capitalize","position","disablePointerEvents","variant","filled","root","_ref","theme","display","height","maxHeight","alignItems","whiteSpace","color","palette","action","active","_defineProperty","positionStart","hiddenLabel","marginTop","marginRight","marginLeft","pointerEvents","InputAdornment","React","inProps","ref","useThemeProps","children","className","_props$component","component","_props$disablePointer","_props$disableTypogra","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","size","classes","slots","composeClasses","useUtilityClasses","_jsx","FormControlContext","Provider","value","as","clsx","_jsxs","dangerouslySetInnerHTML","__html","Typography","Container","bsPrefix","_ref$fluid","fluid","_ref$as","Component","_objectWithoutProperties","prefix","useBootstrapPrefix","suffix","_objectSpread","classNames","displayName","ShowConsultationCallID","BASE_URL","_useState","useState","_useState2","_slicedToArray","consultations","setConsultations","_useState3","_useState4","calls","setCalls","_useState5","_useState6","users","setUsers","fetchConsultations","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","get","then","response","data","stop","apply","arguments","fetchCalls","_ref2","_callee2","_context2","fetchUsers","_ref3","_callee3","_context3","formatDate","date","_formattedDate$split","Date","toLocaleDateString","day","month","year","hour","minute","split","_formattedDate$split2","capitalizedMonth","toUpperCase","useEffect","_Fragment","Modal","open","showModal","onClose","handleCloseConsultation","aria-labelledby","aria-describedby","Grid","container","spacing","gridSpacing","item","xs","Card","CardContent","style","top","overflowY","Button","id","onClick","sm","payment_status","filter","consultation","map","filteredConsultation","index","matchingPatient","find","user","patient_id","matchingDoctor","doctor_id","SubCard","title","full_name","iqama_number","chief_complaint","history_of_illness","review_of_systems","examination","assessment","medication","order_labs","upload_order_labs","href","sick_leave","created_at","call","payment_id","filteredCall","ShowSelectedPayment","_props$payment","_React$useState","_React$useState2","showConsultation","setShowConsultation","_React$useState3","_React$useState4","openModal","setOpenModal","selectedConsultation","setSelectedConsultation","showSelectedConsultation","call_id","payment","CardHeader","Divider","handleClose","order_id","direction","MuiTypography","gutterBottom","creation_time","message","status","total_authorized_amount","total_captured_amount","payment_info","payment_mechanism","brand","scheme","expiry_month","expiry_year","disableElevation","type","useStyles","makeStyles","table","minWidth","searchControl","width","paddingRight","paddingLeft","marginBottom","Payments","payments","setPayments","setValue","currentPage","setCurrentPage","_React$useState5","_React$useState6","selectedPayment","setSelectedPayment","selectedStatus","setSelectedStatus","_React$useState7","_React$useState8","visible","setVisibility","fetchPayments","fetchSearch","startIndex","endIndex","displayedPayments","slice","isLastPage","length","Fragment","justifyContent","onChange","e","target","OutlinedInput","event","placeholder","startAdornment","IconSearch","stroke","inputProps","labelWidth","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","showSelectedPayment","prevPage","Math","max"],"mappings":"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","file":"static/js/15.2a9286c1.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styles[`position${capitalize(styleProps.position)}`], styleProps.disablePointerEvents === true && styles.disablePointerEvents, styleProps.variant === 'filled' && styles.filled), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = styleProps;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\n\nconst InputAdornmentRoot = experimentalStyled('div', {}, {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: theme.palette.action.active\n}, styleProps.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, styleProps.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, styleProps.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, styleProps.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  const styleProps = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      styleProps: styleProps,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ?\n        /*#__PURE__*/\n\n        /* notranslate needed while Google Translate will not fix zero-width space issue */\n\n        /* eslint-disable-next-line react/no-danger */\n        _jsx(\"span\", {\n          className: \"notranslate\",\n          dangerouslySetInnerHTML: {\n            __html: '&#8203;'\n          }\n        }) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nexport default Container;","import React, {useEffect, useState} from 'react';\r\nimport {Card, CardHeader, Divider, CardContent, Grid, Button, Modal} from '@material-ui/core';\r\nimport {gridSpacing} from '../../store/constant';\r\nimport SubCard from '../../ui-component/cards/SubCard';\r\nimport axios from 'axios';\r\n\r\nexport const ShowConsultationCallID = (props) => {\r\n    const BASE_URL = 'https://backend-test.alsahaba.sa/api';\r\n    const [consultations, setConsultations] = useState([]);\r\n    const [calls, setCalls] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n\r\n    const fetchConsultations = async () => {\r\n        await axios.get(`${BASE_URL}/consultations/`).then((response) => {\r\n            setConsultations(response.data);\r\n        });\r\n    };\r\n    const fetchCalls = async () => {\r\n        await axios.get(`${BASE_URL}/calls/`).then((response) => {\r\n            setCalls(response.data);\r\n        });\r\n    };\r\n\r\n    const fetchUsers = async () => {\r\n        await axios.get(`${BASE_URL}/users/`).then((response) => {\r\n            setUsers(response.data);\r\n        });\r\n    };\r\n    const formatDate = (date) => {\r\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\r\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\r\n\r\n        // Split the formatted date into day, month, and year parts\r\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\r\n\r\n        // Convert the month abbreviation to uppercase\r\n        const capitalizedMonth = month.toUpperCase();\r\n\r\n        // Return the formatted date with uppercase month abbreviation and desired format\r\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\r\n    };\r\n    useEffect(() => {\r\n        fetchConsultations();\r\n        fetchCalls();\r\n        fetchUsers();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                open={props?.showModal}\r\n                onClose={props?.handleCloseConsultation}\r\n                aria-labelledby=\"total-income-pattern-modal-title\"\r\n                aria-describedby=\"total-income-pattern-modal-description\"\r\n            >\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <Card className=\"popup-container\">\r\n                            <CardContent className=\"popup-body\" style={{top: '250px', overflowY: 'auto', height: '75vh'}}>\r\n                                <Button id=\"closeBtn\" onClick={props?.handleCloseConsultation}>\r\n                                    X\r\n                                </Button>\r\n                                <Grid container spacing={gridSpacing}>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <>\r\n                                            {props?.payment_status === 'consultation_created' &&\r\n                                                consultations &&\r\n                                                consultations\r\n                                                    ?.filter((consultation) => consultation.id === props?.consultation)\r\n                                                    .map((filteredConsultation, index) => {\r\n                                                        const matchingPatient = users.find(\r\n                                                            (user) => user.id === filteredConsultation.patient_id\r\n                                                        );\r\n                                                        const matchingDoctor = users.find(\r\n                                                            (user) => user.id === filteredConsultation.doctor_id\r\n                                                        );\r\n\r\n                                                        return (\r\n                                                            <SubCard title=\"Consultation\" key={filteredConsultation.id}>\r\n                                                                <div className=\"mt-4 mb-4\">\r\n                                                                    <h5>Patient's Name:</h5>\r\n                                                                    <strong>\r\n                                                                        {matchingPatient ? matchingPatient.full_name : 'N/A'}\r\n                                                                    </strong>{' '}\r\n                                                                    <strong>\r\n                                                                        ID/Iqama {matchingPatient ? matchingPatient.iqama_number : 'N/A'}\r\n                                                                    </strong>\r\n                                                                </div>\r\n                                                                <div className=\"mt-4 mb-4\">\r\n                                                                    <h5>Doctor's Name:</h5>\r\n                                                                    <strong>\r\n                                                                        {matchingDoctor ? matchingDoctor.full_name : 'N/A'}\r\n                                                                    </strong>{' '}\r\n                                                                    <strong>\r\n                                                                        ID/Iqama {matchingDoctor ? matchingDoctor.iqama_number : 'N/A'}\r\n                                                                    </strong>\r\n                                                                </div>\r\n                                                                <div className=\"mt-4\">\r\n                                                                    <h5>Chief Complaint:</h5>\r\n                                                                    <strong>{filteredConsultation.chief_complaint}</strong>\r\n                                                                </div>\r\n                                                                <div className=\"mt-4\">\r\n                                                                    <h5>History of Illness:</h5>\r\n                                                                    <strong>{filteredConsultation.history_of_illness}</strong>\r\n                                                                </div>\r\n                                                                <div className=\"mt-4\">\r\n                                                                    <h5>Review of systems:</h5>\r\n                                                                    <strong>{filteredConsultation.review_of_systems}</strong>\r\n                                                                </div>\r\n                                                                <div className=\"mt-4\">\r\n                                                                    <h5>Examinations:</h5>\r\n                                                                    <strong>{filteredConsultation.examination}</strong>\r\n                                                                </div>\r\n                                                                <div className=\"mt-4\">\r\n                                                                    <h5>Assessments/Plans:</h5>\r\n                                                                    <strong>{filteredConsultation.assessment}</strong>\r\n                                                                </div>\r\n                                                                <div className=\"mt-4\">\r\n                                                                    <h5>Medication:</h5>\r\n                                                                    <strong>{filteredConsultation.medication}</strong>\r\n                                                                </div>\r\n                                                                <div className=\"mt-4\">\r\n                                                                    <h5>Order labs / Home Medication / Image / Others::</h5>\r\n                                                                    <strong>\r\n                                                                        {filteredConsultation.order_labs\r\n                                                                            ? filteredConsultation.order_labs\r\n                                                                            : 'none'}\r\n                                                                    </strong>\r\n                                                                </div>\r\n                                                                <div className=\"mt-4\">\r\n                                                                    <h5>Order labs / Home Medication / Image / Others: uploads:</h5>\r\n                                                                    <strong>\r\n                                                                        {filteredConsultation.upload_order_labs ? (\r\n                                                                            <a href={filteredConsultation.upload_order_labs}>View</a>\r\n                                                                        ) : (\r\n                                                                            'none'\r\n                                                                        )}\r\n                                                                    </strong>\r\n                                                                </div>\r\n                                                                <div className=\"mt-4\">\r\n                                                                    <h5>Sick leave:</h5>\r\n                                                                    <strong>{filteredConsultation.sick_leave}</strong>\r\n                                                                </div>\r\n                                                                <div className=\"mt-4 mb-4\">\r\n                                                                    <h5>Created At:</h5>\r\n                                                                    <strong>{formatDate(filteredConsultation.created_at)}</strong>\r\n                                                                </div>\r\n                                                            </SubCard>\r\n                                                        );\r\n                                                    })}\r\n                                            {props?.payment_status === 'doctor_joined' &&\r\n                                                calls &&\r\n                                                calls\r\n                                                    ?.filter((call) => call.payment_id === props?.payment_id)\r\n                                                    .map((filteredCall, index) => {\r\n                                                        const matchingPatient = users.find((user) => user.id === filteredCall.patient_id);\r\n                                                        const matchingDoctor = users.find((user) => user.id === filteredCall.doctor_id);\r\n\r\n                                                        return (\r\n                                                            <SubCard title=\"Consultation\" key={filteredCall.id}>\r\n                                                                <div className=\"mt-4 mb-4\">\r\n                                                                    <h5>Patient's Name:</h5>\r\n                                                                    <strong>\r\n                                                                        {matchingPatient ? matchingPatient.full_name : 'N/A'}\r\n                                                                    </strong>{' '}\r\n                                                                    <strong>\r\n                                                                        ID/Iqama {matchingPatient ? matchingPatient.iqama_number : 'N/A'}\r\n                                                                    </strong>\r\n                                                                </div>\r\n                                                                <div className=\"mt-4 mb-4\">\r\n                                                                    <h5>Doctor's Name:</h5>\r\n                                                                    <strong>\r\n                                                                        {matchingDoctor ? matchingDoctor.full_name : 'N/A'}\r\n                                                                    </strong>{' '}\r\n                                                                    <strong>\r\n                                                                        ID/Iqama {matchingDoctor ? matchingDoctor.iqama_number : 'N/A'}\r\n                                                                    </strong>\r\n                                                                </div>\r\n                                                            </SubCard>\r\n                                                        );\r\n                                                    })}\r\n                                            {props?.payment_status === 'call_initiated' &&\r\n                                                calls &&\r\n                                                calls\r\n                                                    ?.filter((call) => call.payment_id === props?.payment_id)\r\n                                                    .map((filteredCall, index) => {\r\n                                                        const matchingPatient = users.find((user) => user.id === filteredCall.patient_id);\r\n\r\n                                                        return (\r\n                                                            <SubCard title=\"Consultation\" key={filteredCall.id}>\r\n                                                                <div className=\"mt-4 mb-4\">\r\n                                                                    <h5>Patient's Name:</h5>\r\n                                                                    <strong>\r\n                                                                        {matchingPatient ? matchingPatient.full_name : 'N/A'}\r\n                                                                    </strong>{' '}\r\n                                                                    <strong>\r\n                                                                        ID/Iqama {matchingPatient ? matchingPatient.iqama_number : 'N/A'}\r\n                                                                    </strong>\r\n                                                                </div>\r\n                                                            </SubCard>\r\n                                                        );\r\n                                                    })}\r\n                                        </>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Container, Modal} from 'react-bootstrap';\r\nimport {Card, CardHeader, Divider, CardContent, Grid, Button} from '@material-ui/core';\r\nimport {gridSpacing} from '../../store/constant';\r\nimport MuiTypography from '@material-ui/core/Typography';\r\nimport SubCard from '../../ui-component/cards/SubCard';\r\nimport {ShowConsultationCallID} from './ShowConsultationCallID';\r\n\r\nexport const ShowSelectedPayment = (props) => {\r\n    const [showConsultation, setShowConsultation] = React.useState(false);\r\n    const [openModal, setOpenModal] = React.useState(false);\r\n    const [selectedConsultation, setSelectedConsultation] = useState([]);\r\n\r\n    const formatDate = (date) => {\r\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\r\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\r\n\r\n        // Split the formatted date into day, month, and year parts\r\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\r\n\r\n        // Convert the month abbreviation to uppercase\r\n        const capitalizedMonth = month.toUpperCase();\r\n\r\n        // Return the formatted date with uppercase month abbreviation and desired format\r\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\r\n    };\r\n    const closeConsultationPopup = () => {\r\n        setShowConsultation(false);\r\n    };\r\n    const closeModal = () => {\r\n        setOpenModal(false);\r\n    };\r\n\r\n    const showSelectedConsultation = (call_id) => {\r\n        closeConsultationPopup(); // Close the previous modal before showing the new one\r\n        setSelectedConsultation(call_id);\r\n        setShowConsultation(true);\r\n        setOpenModal(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                {showConsultation && (\r\n                    <ShowConsultationCallID\r\n                        consultation={selectedConsultation}\r\n                        payment_status={props.payment.payment_status}\r\n                        payment_id={props.payment.id}\r\n                        showModal={openModal}\r\n                        handleCloseConsultation={closeModal}\r\n                    />\r\n                )}\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <Card className=\"popup-container\">\r\n                            <CardHeader title=\"Payment Info\" />\r\n                            <Divider />\r\n                            <CardContent className=\"popup-body\" id=\"popupCustom\">\r\n                                <Button id=\"closeBtn\" onClick={() => props.handleClose()}>\r\n                                    X\r\n                                </Button>\r\n                                <Grid container spacing={gridSpacing}>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <SubCard title={props.payment.order_id}>\r\n                                            <Grid container direction=\"column\" id=\"poppins\" spacing={1}>\r\n                                                <Grid item>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Order ID: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.order_id}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Creation Time: &nbsp;\r\n                                                        <span id=\"small-text\">{formatDate(props.payment.creation_time)}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Message: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.message}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Status: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.status}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Total Authorized Amount: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.total_authorized_amount}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Total Cuthorized Amount: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.total_captured_amount}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Payment Info: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.payment_info}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Payment Mechanism: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.payment_mechanism}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Brand: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.brand}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Scheme: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.scheme}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Expiry Month: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.expiry_month}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Expiry Month: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.expiry_year}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Consultation Status: &nbsp;\r\n                                                        <span id=\"small-text\">{props.payment.payment_status}</span>\r\n                                                    </MuiTypography>\r\n                                                    {props?.payment?.call_id && (\r\n                                                        <Button\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            onClick={() => showSelectedConsultation(props?.payment.call_id)}\r\n                                                            disableElevation\r\n                                                            type=\"submit\"\r\n                                                        >\r\n                                                            Show Consultation\r\n                                                        </Button>\r\n                                                    )}\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </SubCard>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport {Card, CardHeader, Divider, Grid, OutlinedInput, InputAdornment} from '@material-ui/core';\r\n\r\nimport {gridSpacing} from '../../store/constant';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\nimport {IconSearch} from '@tabler/icons';\r\n\r\nimport axios from 'axios';\r\nimport {ShowSelectedPayment} from './ShowSelectedPayment';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 350\r\n    },\r\n    searchControl: {\r\n        width: '100%',\r\n        paddingRight: '8px',\r\n        paddingLeft: '16px',\r\n        marginBottom: '16px',\r\n        marginTop: '16px'\r\n    }\r\n});\r\n\r\nexport default function Payments() {\r\n    const classes = useStyles();\r\n    const BASE_URL = 'https://backend-test.alsahaba.sa/api';\r\n    const [payments, setPayments] = React.useState([]);\r\n    const [value, setValue] = React.useState('');\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [selectedPayment, setSelectedPayment] = React.useState([]);\r\n    const [selectedStatus, setSelectedStatus] = useState('');\r\n\r\n    const itemsPerPage = 10;\r\n    const [visible, setVisibility] = React.useState(false);\r\n\r\n    const fetchPayments = async () => {\r\n        await axios.get(`${BASE_URL}/payments`).then((response) => {\r\n            setPayments(response.data);\r\n        });\r\n    };\r\n    const fetchSearch = async () => {\r\n        await axios.get(`${BASE_URL}/payment-search?query=${value}`).then((response) => {\r\n            setPayments(response.data);\r\n            setCurrentPage(1);\r\n        });\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        if (event.target.value === '') {\r\n            setValue(event.target.value);\r\n            fetchPayments();\r\n        } else {\r\n            setValue(event.target.value);\r\n            fetchSearch();\r\n        }\r\n    };\r\n    const showSelectedPayment = (payment) => {\r\n        setVisibility(true);\r\n        setSelectedPayment(payment);\r\n    };\r\n    const closePopup = () => {\r\n        setVisibility(false);\r\n    };\r\n    const formatDate = (date) => {\r\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\r\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\r\n\r\n        // Split the formatted date into day, month, and year parts\r\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\r\n\r\n        // Convert the month abbreviation to uppercase\r\n        const capitalizedMonth = month.toUpperCase();\r\n\r\n        // Return the formatted date with uppercase month abbreviation and desired format\r\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchPayments();\r\n    }, []);\r\n    const startIndex = (currentPage - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n    const displayedPayments = payments\r\n        .filter((payment) => {\r\n            if (selectedStatus === 'CAPTURED') {\r\n                return payment.status === 'CAPTURED' || payment.status === 'SUCCESS';\r\n            } else {\r\n                return !selectedStatus || payment.status === selectedStatus;\r\n            }\r\n        })\r\n        .slice(startIndex, endIndex);\r\n    const isLastPage = currentPage * itemsPerPage >= payments.length;\r\n\r\n    const handleShowPrevious = () => {\r\n        setCurrentPage((prevPage) => Math.max(prevPage - 1, 1));\r\n    };\r\n\r\n    const handleShowMore = () => {\r\n        setCurrentPage((prevPage) => prevPage + 1);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {visible && <ShowSelectedPayment payment={selectedPayment} handleClose={closePopup} />}\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Card>\r\n                        <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems={'center'}>\r\n                            <Grid item>\r\n                                <CardHeader title=\"All Payments\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <select\r\n                                    value={selectedStatus}\r\n                                    className={classes.searchControl}\r\n                                    onChange={(e) => setSelectedStatus(e.target.value)}\r\n                                    style={{height: '40px'}}\r\n                                >\r\n                                    <option value=\"\">All Status</option>\r\n                                    <option value=\"CAPTURED\">Success</option>\r\n                                    <option value=\"FAILED\">Failed</option>\r\n                                </select>\r\n                            </Grid>\r\n                            <Grid item style={{marginRight: '25px'}}>\r\n                                <OutlinedInput\r\n                                    className={classes.searchControl}\r\n                                    id=\"input-search-profile\"\r\n                                    value={value}\r\n                                    onChange={handleChange}\r\n                                    placeholder=\"Order ID\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                            <IconSearch stroke={1.5} size=\"1.3rem\" className={classes.startAdornment} />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                    aria-describedby=\"search-helper-text\"\r\n                                    inputProps={{\r\n                                        'aria-label': 'weight'\r\n                                    }}\r\n                                    labelWidth={0}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <TableContainer>\r\n                            <Table className={classes.table} aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>#</TableCell>\r\n                                        <TableCell>Order ID</TableCell>\r\n                                        <TableCell align=\"left\">Creation Time</TableCell>\r\n                                        <TableCell align=\"left\">Message</TableCell>\r\n                                        <TableCell align=\"left\">Status</TableCell>\r\n                                        <TableCell align=\"left\">Total Authorized Amount</TableCell>\r\n                                        <TableCell align=\"left\">Total Captured Amount</TableCell>\r\n                                        <TableCell align=\"left\">Payment Info</TableCell>\r\n                                        <TableCell align=\"left\">Consultation Status</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {displayedPayments.map((payment, index) => (\r\n                                        <TableRow key={payment.id} onClick={() => showSelectedPayment(payment)}>\r\n                                            <TableCell align=\"left\">{index + 1}</TableCell>\r\n                                            <TableCell component=\"th\">{payment.order_id}</TableCell>\r\n                                            <TableCell align=\"left\">{formatDate(payment.creation_time)}</TableCell>\r\n                                            <TableCell align=\"left\">{payment.message}</TableCell>\r\n                                            <TableCell align=\"left\">{payment.status}</TableCell>\r\n                                            <TableCell align=\"left\">{payment.total_authorized_amount}</TableCell>\r\n                                            <TableCell align=\"left\">{payment.total_captured_amount}</TableCell>\r\n                                            <TableCell align=\"left\">\r\n                                                <div>\r\n                                                    {payment.payment_mechanism}\r\n                                                    {': '} {payment.payment_info} {payment.expiry_month}\r\n                                                    {'/'}\r\n                                                    {payment.expiry_year}\r\n                                                </div>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\">{payment.payment_status ? payment.payment_status : 'none'}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        <Grid container justifyContent=\"center\">\r\n                            {' '}\r\n                            {currentPage > 1 && (\r\n                                <Button onClick={handleShowPrevious} variant=\"outlined\">\r\n                                    Show Previous Page\r\n                                </Button>\r\n                            )}\r\n                            {!isLastPage && (\r\n                                <Button onClick={handleShowMore} variant=\"outlined\">\r\n                                    Show More\r\n                                </Button>\r\n                            )}\r\n                        </Grid>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n"],"sourceRoot":""}