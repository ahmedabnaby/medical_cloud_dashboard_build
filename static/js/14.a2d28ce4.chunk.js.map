{"version":3,"sources":["views/pages/ConfirmDeleteModal.js","views/pages/ShowSelectedConsultation.js","views/pages/ShowConsultations.js","views/pages/ShowSelectedPatient.js","views/pages/Patients.js"],"names":["ConfirmDeleteModal","props","_useState","useState","_useState2","_slicedToArray","handleDelete","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","method","url","concat","patient","id","then","response","window","location","reload","catch","alert","stop","apply","arguments","_jsx","_Fragment","children","Container","Grid","container","spacing","gridSpacing","item","xs","_jsxs","Card","className","CardHeader","title","Divider","CardContent","style","top","overflowY","height","Button","onClick","handleClose","sm","SubCard","full_name","is_doctor","color","ShowSelectedConsultation","useEffect","document","getElementById","display","handleCloseShowSelectedConsultation","consultation","chief_complaint","history_of_illness","review_of_systems","examination","assessment","medication","order_labs","upload_order_labs","href","sick_leave","date","_formattedDate$split","Date","toLocaleDateString","day","month","year","hour","minute","split","_formattedDate$split2","capitalizedMonth","toUpperCase","formatDate","created_at","ShowConsultations","BASE_URL","consultations","setConsultations","_useState3","_useState4","patients","setPatients","_useState5","_useState6","selectedConsultation","setSelectedConsultation","_useState7","_useState8","newConsultations","setNewConsultations","_useState9","_useState10","visibleSelectedConsultation","setVisibleSelectedConsultation","_useState11","_useState12","setIsLoading","fetchConsultations","get","_props$patient","data","i","length","patient_id","doctor_id","fetchDoctorsOrPatients","_ref2","_callee2","_context2","handleCloseConsultations","filter","_props$patient2","_props$patient3","_props$patient4","map","filteredConsultation","index","ListGroup","as","_props$patient5","filteredDoctor","_props$patient6","Item","cursor","marginLeft","iqama_number","ShowSelectedPatient","_React$useState","React","_React$useState2","showConsultations","setShowConsultations","_React$useState3","_React$useState4","selectedPatient","setShowSelectedPatient","_React$useState5","_React$useState6","isImage","setIsImage","checkFileType","abrupt","Promise","resolve","img","Image","onload","onerror","src","copy_of_iqama_number","t0","console","error","sent","updateIsImage","direction","MuiTypography","variant","gutterBottom","textDecoration","target","rel","alt","date_of_birth","mobile_number","email","nationality","last_login","disableElevation","type","useStyles","makeStyles","table","minWidth","searchControl","width","paddingRight","paddingLeft","marginBottom","marginTop","Patients","classes","setSelectedPatient","value","setValue","_React$useState7","_React$useState8","visible","setVisibility","_React$useState9","_React$useState10","showDeleteModal","setShowDeleteModal","_React$useState11","_React$useState12","fileTypes","setFileTypes","fetchPatients","fetchSearch","_ref3","_callee3","_context3","reject","_x","_ref4","_callee5","_context5","user","forEach","_ref5","_callee4","_context4","prevFileTypes","_objectSpread","_defineProperty","_x2","checkImageType","Fragment","justifyContent","alignItems","marginRight","OutlinedInput","onChange","event","placeholder","startAdornment","InputAdornment","position","IconSearch","stroke","size","aria-describedby","inputProps","labelWidth","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","whiteSpace","TableBody","component","startsWith","showSelectedPatient","showDeletePopUpModal"],"mappings":"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","file":"static/js/14.a2d28ce4.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Card, CardHeader, Divider, CardContent, Grid, Button} from '@material-ui/core';\r\nimport {gridSpacing} from '../../store/constant';\r\nimport {Container, ListGroup} from 'react-bootstrap';\r\nimport SubCard from '../../ui-component/cards/SubCard';\r\nimport axios from 'axios';\r\n\r\nexport const ConfirmDeleteModal = (props) => {\r\n    const BASE_URL = 'https://backend-test.alsahaba.sa/api';\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const handleDelete = async () => {\r\n        await axios({\r\n            method: 'DELETE',\r\n            url: `${BASE_URL}/user/${props?.patient.id}/delete`\r\n        })\r\n            .then(function (response) {\r\n                window.location.reload();\r\n            })\r\n            .catch(function (response) {\r\n                alert('An error occured!');\r\n            });\r\n    };\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <Card className=\"popup-container\">\r\n                            <CardHeader title=\"Consultation\" />\r\n                            <Divider />\r\n                            <CardContent className=\"popup-body\" style={{top: '250px', overflowY: 'auto', height: '75vh'}}>\r\n                                <Button id=\"closeBtn\" onClick={props?.handleClose}>\r\n                                    X\r\n                                </Button>\r\n                                <Grid container spacing={gridSpacing}>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <SubCard title={props?.patient.full_name}>\r\n                                            <h2>Are you sure you want to delete this {props?.patient.is_doctor ? 'doctor?' : 'patient?'}</h2>\r\n                                            <Button style={{color: 'red'}} onClick={handleDelete}>\r\n                                                Yes\r\n                                            </Button>\r\n                                            <Button style={{color: 'green'}} onClick={props?.handleClose}>\r\n                                                No\r\n                                            </Button>\r\n                                        </SubCard>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\nimport {Card, CardHeader, Divider, CardContent, Grid, Button} from '@material-ui/core';\r\nimport {gridSpacing} from '../../store/constant';\r\nimport {Container} from 'react-bootstrap';\r\nimport SubCard from '../../ui-component/cards/SubCard';\r\nexport const ShowSelectedConsultation = (props) => {\r\n    const hideShowModifyConsultation = () => {\r\n        props?.handleCloseShowSelectedConsultation();\r\n    };\r\n\r\n    const formatDate = (date) => {\r\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\r\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\r\n\r\n        // Split the formatted date into day, month, and year parts\r\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\r\n\r\n        // Convert the month abbreviation to uppercase\r\n        const capitalizedMonth = month.toUpperCase();\r\n\r\n        // Return the formatted date with uppercase month abbreviation and desired format\r\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\r\n    };\r\n    const displayImg = () => {\r\n        var dImg = document.getElementById('image-viewer2');\r\n        dImg.style.display = 'block';\r\n    };\r\n    const hideImg = () => {\r\n        var hImg = document.getElementById('image-viewer2');\r\n        hImg.style.display = 'none';\r\n    };\r\n    useEffect(() => {\r\n        displayImg();\r\n    }, []);\r\n\r\n    return (\r\n        <Container id=\"image-viewer2\">\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Card className=\"popup-container\">\r\n                        <CardHeader title=\"Consultation\" />\r\n                        <Divider />\r\n                        <CardContent className=\"popup-body\" style={{top: '250px', overflowY: 'auto', height: '75vh'}}>\r\n                            <Button id=\"closeBtn\" onClick={hideShowModifyConsultation}>\r\n                                X\r\n                            </Button>\r\n                            <Grid container spacing={gridSpacing}>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <SubCard title=\"Consultation\">\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>Chief Complaint:</h5>\r\n                                            <strong>{props?.consultation.chief_complaint}</strong>\r\n                                        </div>\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>History of Illness:</h5>\r\n                                            <strong>{props?.consultation.history_of_illness}</strong>\r\n                                        </div>\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>Review of systems:</h5>\r\n                                            <strong>{props?.consultation.review_of_systems}</strong>\r\n                                        </div>\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>Examinations:</h5>\r\n                                            <strong>{props?.consultation.examination}</strong>\r\n                                        </div>\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>Assessments/Plans:</h5>\r\n                                            <strong>{props?.consultation.assessment}</strong>\r\n                                        </div>\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>Medication:</h5>\r\n                                            <strong>{props?.consultation.medication}</strong>\r\n                                        </div>\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>Order labs:</h5>\r\n                                            <strong>{props?.consultation.order_labs}</strong>\r\n                                        </div>\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>Order labs uploads:</h5>\r\n                                            {props?.consultation.upload_order_labs ? (\r\n                                                <a href={props?.consultation.upload_order_labs}>View file/image</a>\r\n                                            ) : (\r\n                                                'none'\r\n                                            )}\r\n                                        </div>\r\n                                        <div className=\"mt-4\">\r\n                                            <h5>Sick leave:</h5>\r\n                                            <strong>{props?.consultation.sick_leave}</strong>\r\n                                        </div>\r\n                                        <div className=\"mt-4 mb-4\">\r\n                                            <h5>Created At:</h5>\r\n                                            <strong>{formatDate(props?.consultation.created_at)}</strong>\r\n                                        </div>\r\n                                    </SubCard>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Card, CardHeader, Divider, CardContent, Grid, Button} from '@material-ui/core';\r\nimport {gridSpacing} from '../../store/constant';\r\nimport {Container, ListGroup} from 'react-bootstrap';\r\nimport SubCard from '../../ui-component/cards/SubCard';\r\nimport axios from 'axios';\r\nimport {ShowSelectedConsultation} from './ShowSelectedConsultation';\r\n\r\nexport const ShowConsultations = (props) => {\r\n    const BASE_URL = 'https://backend-test.alsahaba.sa/api';\r\n    const [consultations, setConsultations] = useState([]);\r\n    const [patients, setPatients] = useState([]);\r\n    const [selectedConsultation, setSelectedConsultation] = useState(null);\r\n    const [newConsultations, setNewConsultations] = useState(false);\r\n    const [visibleSelectedConsultation, setVisibleSelectedConsultation] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const fetchConsultations = async () => {\r\n        setIsLoading(true);\r\n        await axios.get(`${BASE_URL}/consultations/`).then((response) => {\r\n            setConsultations(response.data);\r\n            setIsLoading(false);\r\n            var i = 0;\r\n            if (props?.patient?.is_doctor === false) {\r\n                while (i < response.data.length) {\r\n                    if (response.data[i].patient_id === props?.patient.id) {\r\n                        setNewConsultations(true);\r\n                        break;\r\n                    } else {\r\n                        setNewConsultations(false);\r\n                    }\r\n                    i++;\r\n                }\r\n            } else {\r\n                while (i < response.data.length) {\r\n                    if (response.data[i].doctor_id === props?.patient.id) {\r\n                        setNewConsultations(true);\r\n                        break;\r\n                    } else {\r\n                        setNewConsultations(false);\r\n                    }\r\n                    i++;\r\n                }\r\n            }\r\n        });\r\n    };\r\n    const fetchDoctorsOrPatients = async () => {\r\n        await axios.get(`${BASE_URL}/users/`).then((response) => {\r\n            setPatients(response.data);\r\n        });\r\n    };\r\n    const showSelectedConsultation = (consultation) => {\r\n        setSelectedConsultation(consultation);\r\n        setVisibleSelectedConsultation(true);\r\n    };\r\n    const hideShowSelectedConsultations = () => {\r\n        setVisibleSelectedConsultation(false);\r\n    };\r\n    const displayImg = () => {\r\n        var dImg = document.getElementById('image-viewer');\r\n        dImg.style.display = 'block';\r\n    };\r\n    const hideImg = () => {\r\n        var hImg = document.getElementById('image-viewer');\r\n        hImg.style.display = 'none';\r\n    };\r\n    const formatDate = (date) => {\r\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\r\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\r\n\r\n        // Split the formatted date into day, month, and year parts\r\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\r\n\r\n        // Convert the month abbreviation to uppercase\r\n        const capitalizedMonth = month.toUpperCase();\r\n\r\n        // Return the formatted date with uppercase month abbreviation and desired format\r\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\r\n    };\r\n    useEffect(() => {\r\n        displayImg();\r\n        fetchConsultations();\r\n        fetchDoctorsOrPatients();\r\n    }, []);\r\n    return (\r\n        <>\r\n            {visibleSelectedConsultation && (\r\n                <ShowSelectedConsultation\r\n                    consultation={selectedConsultation}\r\n                    handleCloseShowSelectedConsultation={hideShowSelectedConsultations}\r\n                />\r\n            )}\r\n\r\n            <Container id=\"image-viewer\" onClick={hideImg}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <Card className=\"popup-container\">\r\n                            <CardHeader title=\"Consultation\" />\r\n                            <Divider />\r\n                            <CardContent className=\"popup-body\" style={{top: '250px', overflowY: 'auto', height: '75vh'}}>\r\n                                <Button id=\"closeBtn\" onClick={props?.handleCloseConsultations}>\r\n                                    X\r\n                                </Button>\r\n                                <Grid container spacing={gridSpacing}>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <SubCard title={props?.patient.full_name}>\r\n                                            {!newConsultations ? (\r\n                                                <h5 className=\"ml-4\">No consultations yet!</h5>\r\n                                            ) : (\r\n                                                <>\r\n                                                    {consultations &&\r\n                                                        consultations\r\n                                                            ?.filter((consultation) =>\r\n                                                                props?.patient?.is_doctor\r\n                                                                    ? consultation.doctor_id === props?.patient?.id\r\n                                                                    : consultation.patient_id === props?.patient?.id\r\n                                                            )\r\n                                                            .map((filteredConsultation, index) => (\r\n                                                                <ListGroup as=\"ol\" key={filteredConsultation.id} className=\"borderBottom\">\r\n                                                                    {patients\r\n                                                                        ?.filter((patient) =>\r\n                                                                            props?.patient?.is_doctor\r\n                                                                                ? filteredConsultation.patient_id === patient.id\r\n                                                                                : filteredConsultation.doctor_id === patient.id\r\n                                                                        )\r\n                                                                        .map((filteredDoctor) => (\r\n                                                                            <ListGroup.Item\r\n                                                                                as=\"li\"\r\n                                                                                className=\"d-flex justify-content-between align-items-center\"\r\n                                                                                style={{cursor: 'pointer', marginLeft: '-25px'}}\r\n                                                                                key={filteredDoctor.id}\r\n                                                                                onClick={() =>\r\n                                                                                    showSelectedConsultation(filteredConsultation)\r\n                                                                                }\r\n                                                                            >\r\n                                                                                {index + 1}.\r\n                                                                                <div className=\"ms-2 me-auto\">\r\n                                                                                    <div className=\"fw-bold\">\r\n                                                                                        {filteredConsultation.chief_complaint}\r\n                                                                                    </div>\r\n                                                                                    <strong style={{color: 'gray'}}>\r\n                                                                                        {props?.patient?.is_doctor ? (\r\n                                                                                            <p>\r\n                                                                                                {' '}\r\n                                                                                                Patient ID/Iqama: &nbsp;\r\n                                                                                                {filteredDoctor.iqama_number}\r\n                                                                                            </p>\r\n                                                                                        ) : (\r\n                                                                                            <p>\r\n                                                                                                {' '}\r\n                                                                                                Dr. ID/Iqama: &nbsp;\r\n                                                                                                {filteredDoctor.iqama_number}\r\n                                                                                            </p>\r\n                                                                                        )}\r\n                                                                                    </strong>\r\n                                                                                    <br />\r\n                                                                                    <strong>{filteredDoctor.full_name}</strong>\r\n                                                                                </div>\r\n                                                                                <strong>\r\n                                                                                    {formatDate(filteredConsultation.created_at)}\r\n                                                                                </strong>\r\n                                                                            </ListGroup.Item>\r\n                                                                        ))}\r\n                                                                </ListGroup>\r\n                                                            ))}\r\n                                                </>\r\n                                            )}\r\n                                        </SubCard>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport {Container, Modal} from 'react-bootstrap';\r\nimport {Card, CardHeader, Divider, CardContent, Grid, Button} from '@material-ui/core';\r\nimport {gridSpacing} from '../../store/constant';\r\nimport MuiTypography from '@material-ui/core/Typography';\r\nimport SubCard from '../../ui-component/cards/SubCard';\r\n\r\nimport {ShowConsultations} from './ShowConsultations';\r\n\r\nexport const ShowSelectedPatient = (props) => {\r\n    const [showConsultations, setShowConsultations] = React.useState(false);\r\n    const [selectedPatient, setShowSelectedPatient] = React.useState([]);\r\n    const [isImage, setIsImage] = React.useState(false);\r\n\r\n    const showSelectedConsultations = (patient) => {\r\n        setShowConsultations(true);\r\n        setShowSelectedPatient(patient);\r\n    };\r\n\r\n    const closeConsultationsPopUp = () => {\r\n        setShowConsultations(false);\r\n    };\r\n\r\n    const formatDate = (date) => {\r\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\r\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\r\n\r\n        // Split the formatted date into day, month, and year parts\r\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\r\n\r\n        // Convert the month abbreviation to uppercase\r\n        const capitalizedMonth = month.toUpperCase();\r\n\r\n        // Return the formatted date with uppercase month abbreviation and desired format\r\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\r\n    };\r\n    useEffect(() => {\r\n        const checkFileType = async () => {\r\n            try {\r\n                return new Promise((resolve) => {\r\n                    const img = new Image();\r\n                    img.onload = function () {\r\n                        // If the image is successfully loaded, resolve to true\r\n                        resolve(true);\r\n                    };\r\n                    img.onerror = function () {\r\n                        // If an error occurs during loading, resolve to false\r\n                        resolve(false);\r\n                    };\r\n                    img.src = props.patient.copy_of_iqama_number;\r\n                });\r\n            } catch (error) {\r\n                console.error('Error checking file type:', error);\r\n                return false;\r\n            }\r\n        };\r\n\r\n        const updateIsImage = async () => {\r\n            const isImage = await checkFileType();\r\n            // Set the state based on whether it's an image or not\r\n            setIsImage(isImage);\r\n        };\r\n\r\n        // Call the file type checking function when the component mounts\r\n        updateIsImage();\r\n    }, [props.patient.copy_of_iqama_number]);\r\n    // Add the dependency to re-run the effect when the URL changes\r\n\r\n    const displayImg = () => {\r\n        // Check the file type before displaying the image viewer\r\n        document.getElementById('full-image').src = props.patient.copy_of_iqama_number;\r\n        var dImg = document.getElementById('image-viewer');\r\n        dImg.style.display = 'block';\r\n    };\r\n    const hideImg = () => {\r\n        var hImg = document.getElementById('image-viewer');\r\n        hImg.style.display = 'none';\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {showConsultations && <ShowConsultations patient={selectedPatient} handleCloseConsultations={closeConsultationsPopUp} />}\r\n            <Container>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <Card className=\"popup-container\">\r\n                            <CardHeader title=\"Consultation\" />\r\n                            <Divider />\r\n                            <CardContent className=\"popup-body\" id=\"popupCustom\">\r\n                                <Button id=\"closeBtn\" onClick={() => props.handleClose()}>\r\n                                    X\r\n                                </Button>\r\n                                <Grid container spacing={gridSpacing}>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <SubCard title={props.patient.full_name}>\r\n                                            <Grid container direction=\"column\" id=\"poppins\" spacing={1}>\r\n                                                <Grid item>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Patient name: &nbsp;\r\n                                                        <span id=\"small-text\">{props.patient.full_name}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        ID/Iqama number: &nbsp;\r\n                                                        <span id=\"small-text\">{props.patient.iqama_number}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Copy of ID/Iqama number: &nbsp;\r\n                                                        {isImage ? (\r\n                                                            <span\r\n                                                                id=\"small-text\"\r\n                                                                onClick={displayImg}\r\n                                                                style={{cursor: 'pointer', textDecoration: 'underline', color: 'blue'}}\r\n                                                            >\r\n                                                                Image\r\n                                                            </span>\r\n                                                        ) : (\r\n                                                            <a\r\n                                                                href={props.patient.copy_of_iqama_number}\r\n                                                                target=\"_blank\"\r\n                                                                rel=\"noopener noreferrer\"\r\n                                                            >\r\n                                                                File\r\n                                                            </a>\r\n                                                        )}\r\n                                                        {isImage && (\r\n                                                            <div id=\"image-viewer\" onClick={hideImg}>\r\n                                                                <span className=\"closed\">&times;</span>\r\n                                                                <img className=\"modal-content\" id=\"full-image\" alt=\"Image\" />\r\n                                                            </div>\r\n                                                        )}\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Date of birth: &nbsp;\r\n                                                        <span id=\"small-text\">{props.patient.date_of_birth}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Mobile number: &nbsp;\r\n                                                        <span id=\"small-text\">{props.patient.mobile_number}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        E-mail: &nbsp;\r\n                                                        <span id=\"small-text\">{props.patient.email}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Nationality: &nbsp;\r\n                                                        <span id=\"small-text\">{props.patient.nationality}</span>\r\n                                                    </MuiTypography>\r\n                                                    <MuiTypography variant=\"h3\" gutterBottom>\r\n                                                        Last login: &nbsp;\r\n                                                        <span id=\"small-text\">{formatDate(props.patient.last_login)}</span>\r\n                                                    </MuiTypography>\r\n                                                    <Button\r\n                                                        variant=\"contained\"\r\n                                                        color=\"primary\"\r\n                                                        disableElevation\r\n                                                        type=\"submit\"\r\n                                                        onClick={() => showSelectedConsultations(props.patient)}\r\n                                                    >\r\n                                                        Show Consultations\r\n                                                    </Button>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </SubCard>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport {useEffect} from 'react';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport {Card, CardHeader, Divider, CardContent, Grid, Button, OutlinedInput, InputAdornment} from '@material-ui/core';\r\n\r\nimport {gridSpacing} from '../../store/constant';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {IconSearch} from '@tabler/icons';\r\n\r\nimport axios from 'axios';\r\n\r\nimport {ShowSelectedPatient} from './ShowSelectedPatient';\r\nimport {ConfirmDeleteModal} from './ConfirmDeleteModal';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 350\r\n    },\r\n    searchControl: {\r\n        width: '100%',\r\n        paddingRight: '8px',\r\n        paddingLeft: '16px',\r\n        marginBottom: '16px',\r\n        marginTop: '16px'\r\n    }\r\n});\r\n\r\nexport default function Patients() {\r\n    const classes = useStyles();\r\n    const BASE_URL = 'https://backend-test.alsahaba.sa/api';\r\n    const [patients, setPatients] = React.useState([]);\r\n    const [selectedPatient, setSelectedPatient] = React.useState([]);\r\n    const [value, setValue] = React.useState('');\r\n    const [visible, setVisibility] = React.useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = React.useState(false);\r\n    const [fileTypes, setFileTypes] = React.useState({});\r\n\r\n    const fetchPatients = async () => {\r\n        await axios.get(`${BASE_URL}/users/`).then((response) => {\r\n            setPatients(response.data);\r\n        });\r\n    };\r\n    const fetchSearch = async () => {\r\n        await axios.get(`${BASE_URL}/search?query=${value}`).then((response) => {\r\n            setPatients(response.data);\r\n        });\r\n    };\r\n    const formatDate = (date) => {\r\n        const options = {day: '2-digit', month: 'short', year: 'numeric', hour: '2-digit', minute: '2-digit'};\r\n        const formattedDate = new Date(date).toLocaleDateString('en-US', options);\r\n\r\n        // Split the formatted date into day, month, and year parts\r\n        const [month, day, year, hour, minute] = formattedDate.split(' ');\r\n\r\n        // Convert the month abbreviation to uppercase\r\n        const capitalizedMonth = month.toUpperCase();\r\n\r\n        // Return the formatted date with uppercase month abbreviation and desired format\r\n        return `${day} ${capitalizedMonth} ${year} ${hour} ${minute}`;\r\n    };\r\n    const closeDeleteModal = () => {\r\n        setShowDeleteModal(false);\r\n    };\r\n    const showDeletePopUpModal = (patient) => {\r\n        setShowDeleteModal(true);\r\n        setSelectedPatient(patient);\r\n    };\r\n    const closePopup = () => {\r\n        setVisibility(false);\r\n    };\r\n    const showSelectedPatient = (patient) => {\r\n        setVisibility(true);\r\n        setSelectedPatient(patient);\r\n    };\r\n    const handleChange = (event) => {\r\n        if (event.target.value === '') {\r\n            setValue(event.target.value);\r\n            fetchPatients();\r\n        } else {\r\n            setValue(event.target.value);\r\n            fetchSearch();\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        const checkFileType = async (patient) => {\r\n            try {\r\n                return new Promise((resolve, reject) => {\r\n                    const img = new Image();\r\n                    img.onload = function () {\r\n                        // If the image is successfully loaded, it's an image\r\n                        resolve(true);\r\n                    };\r\n                    img.onerror = function () {\r\n                        // If an error occurs during loading, it's not an image\r\n                        resolve(false);\r\n                    };\r\n                    img.src = patient.copy_of_iqama_number;\r\n                });\r\n            } catch (error) {\r\n                console.error(`Error checking file type for patient ${patient.id}:`, error);\r\n                return false;\r\n            }\r\n        };\r\n\r\n        const checkImageType = async () => {\r\n            patients\r\n                ?.filter((user) => !user.is_doctor)\r\n                .forEach(async (patient) => {\r\n                    if (!fileTypes[patient.id]) {\r\n                        const isImage = await checkFileType(patient);\r\n                        // Update the fileTypes state with the patient ID and its content type\r\n                        if (isImage) {\r\n                            setFileTypes((prevFileTypes) => ({\r\n                                ...prevFileTypes,\r\n                                [patient.id]: 'image'\r\n                            }));\r\n                        } else {\r\n                            setFileTypes((prevFileTypes) => ({\r\n                                ...prevFileTypes,\r\n                                [patient.id]: 'non-image'\r\n                            }));\r\n                        }\r\n                    }\r\n                });\r\n        };\r\n\r\n        checkImageType();\r\n    }, [patients]);\r\n\r\n    useEffect(() => {\r\n        fetchPatients();\r\n    }, []);\r\n    return (\r\n        <React.Fragment>\r\n            {visible && <ShowSelectedPatient patient={selectedPatient} handleClose={closePopup} />}\r\n            {showDeleteModal && <ConfirmDeleteModal patient={selectedPatient} handleClose={closeDeleteModal} />}\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12}>\r\n                    <Card>\r\n                        <Grid container direction=\"row\" justifyContent=\"space-between\" alignItems={'center'}>\r\n                            <Grid item>\r\n                                <CardHeader title=\"Registered Patients\" />\r\n                            </Grid>\r\n                            <Grid item style={{marginRight: '25px'}}>\r\n                                <OutlinedInput\r\n                                    className={classes.searchControl}\r\n                                    id=\"input-search-profile\"\r\n                                    value={value}\r\n                                    onChange={handleChange}\r\n                                    placeholder=\"Search patients\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\">\r\n                                            <IconSearch stroke={1.5} size=\"1.3rem\" className={classes.startAdornment} />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                    aria-describedby=\"search-helper-text\"\r\n                                    inputProps={{\r\n                                        'aria-label': 'weight'\r\n                                    }}\r\n                                    labelWidth={0}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <TableContainer>\r\n                            <Table className={classes.table} aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>#</TableCell>\r\n                                        <TableCell>Patient name</TableCell>\r\n                                        <TableCell align=\"left\">ID/Iqama number</TableCell>\r\n                                        <TableCell align=\"left\">Copy of iqama number</TableCell>\r\n                                        <TableCell align=\"left\" style={{whiteSpace: 'nowrap'}}>\r\n                                            Date of birth\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">Mobile number</TableCell>\r\n                                        <TableCell align=\"left\">E-mail</TableCell>\r\n                                        <TableCell align=\"left\">Nationality</TableCell>\r\n                                        <TableCell align=\"left\">Registered date</TableCell>\r\n                                        <TableCell align=\"left\">Last login</TableCell>\r\n                                        <TableCell align=\"left\"></TableCell>\r\n                                        <TableCell align=\"left\"></TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {patients &&\r\n                                        patients\r\n                                            ?.filter((user) => !user.is_doctor)\r\n                                            .map((patient, index) => (\r\n                                                <TableRow key={patient.id}>\r\n                                                    <TableCell align=\"left\">{index + 1}</TableCell>\r\n                                                    <TableCell component=\"th\">{patient.full_name}</TableCell>\r\n                                                    <TableCell align=\"left\">{patient.iqama_number}</TableCell>\r\n                                                    <TableCell align=\"left\">\r\n                                                        {/* Check if file type is available for the patient */}\r\n                                                        {fileTypes[patient.id] &&\r\n                                                            (fileTypes[patient.id].startsWith('image') ? (\r\n                                                                <a\r\n                                                                    href={patient.copy_of_iqama_number}\r\n                                                                    target=\"_blank\"\r\n                                                                    rel=\"noopener noreferrer\"\r\n                                                                >\r\n                                                                    Image\r\n                                                                </a>\r\n                                                            ) : (\r\n                                                                <a\r\n                                                                    href={patient.copy_of_iqama_number}\r\n                                                                    target=\"_blank\"\r\n                                                                    rel=\"noopener noreferrer\"\r\n                                                                >\r\n                                                                    File\r\n                                                                </a>\r\n                                                            ))}\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\">{patient.date_of_birth}</TableCell>\r\n                                                    <TableCell align=\"left\">{patient.mobile_number}</TableCell>\r\n                                                    <TableCell align=\"left\">{patient.email}</TableCell>\r\n                                                    <TableCell align=\"left\">{patient.nationality}</TableCell>\r\n                                                    <TableCell align=\"left\">{formatDate(patient.created_at)}</TableCell>\r\n                                                    <TableCell align=\"left\">{formatDate(patient.last_login)}</TableCell>\r\n                                                    <TableCell align=\"left\" onClick={() => showSelectedPatient(patient)}>\r\n                                                        <img src=\"images/eye.png\" id=\"delete-icon\" />\r\n                                                    </TableCell>\r\n                                                    <TableCell align=\"left\" onClick={() => showDeletePopUpModal(patient)}>\r\n                                                        <img src=\"images/trash-bin.png\" id=\"delete-icon\" />\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n"],"sourceRoot":""}